[{"title":"HDU5157 Harry and magic string（Manacher+差分前缀）","url":"http://yoursite.com/2015/11/04/HDU5157/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5157\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5157</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个字符串s，问有多少对子串对(suba, subb)，使得suba和subb均为回文子串，且两个子串不能有重叠部分。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先可以用Manacher算法预处理出以每个字符（包括两个字符之间的位置）为中心能有多少个回文串。然后用差分前缀处理处pre、suf、sum三个数组。<br>其中pre数组表示到以某个字符结尾的回文串个数，suf表示以某个字符为开头的回文串个数，sum表示以某个字符之后的所有字符为开头的回文串个数。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 210000;</div><div class=\"line\">char s[N], str[N];</div><div class=\"line\">int n, p[N];</div><div class=\"line\">void KP(int len, char *str) &#123;</div><div class=\"line\">    for (int i = 0; i &lt; len; i++) &#123;</div><div class=\"line\">        s[2 * i + 1] = &apos;#&apos;;</div><div class=\"line\">        s[2 * i + 2] = str[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    int n = 2 * len;</div><div class=\"line\">    s[0] = s[n + 1] = &apos;#&apos;;</div><div class=\"line\">    s[n + 2] = 0;</div><div class=\"line\">    int mx = 0, id;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (mx &gt; i) p[i] = min(p[2 * id - i], mx - i);</div><div class=\"line\">        else p[i] = 1;</div><div class=\"line\">        while(s[i + p[i]] == s[i - p[i]]) p[i]++;</div><div class=\"line\">        if (p[i] + i &gt; mx) &#123;</div><div class=\"line\">            mx = p[i] + i;</div><div class=\"line\">            id = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll pre[N / 2], suf[N / 2], sum[N / 2];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%s&quot;, str)) &#123;</div><div class=\"line\">        int len = strlen(str);</div><div class=\"line\">        KP(len, str);</div><div class=\"line\">        for (int i = 0; i &lt;= len + 1; i++) pre[i] = suf[i] = sum[i] = 0;</div><div class=\"line\">        for (int i = 2; i &lt;= 2 * len; i++) &#123;</div><div class=\"line\">            int x = i / 2;</div><div class=\"line\">            if (i % 2 == 0) pre[x]++, pre[x + (p[i] / 2)]--;</div><div class=\"line\">            else pre[x + 1]++, pre[x + (p[i] / 2) + 1]--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 2 * len; i &gt;= 2; i--) &#123;</div><div class=\"line\">            int x = i / 2;</div><div class=\"line\">            if (i % 2 == 0) suf[x]++, suf[x - (p[i] / 2)]--;</div><div class=\"line\">            else suf[x]++, suf[x - (p[i] / 2)]--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = len; i &gt;= 1; i--) &#123;</div><div class=\"line\">            suf[i] += suf[i + 1];</div><div class=\"line\">            sum[i] += sum[i + 1] + suf[i];</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 1; i &lt;= len; i++) &#123;</div><div class=\"line\">            pre[i] += pre[i - 1];</div><div class=\"line\">            ans += (ll)pre[i] * (sum[i + 1]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["ACM"],"tags":["Manacher","差分前缀"]},{"title":"HDU5156 Harry and Christmas tree（dfs序+查询区间内有多少个数）","url":"http://yoursite.com/2015/10/29/HDU5156/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5156\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5156</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一颗树，每个节点上有一些颜色的礼物，现在问以每个节点为根的子树有多少种不同的颜色。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>先把每个节点相同的颜色去除，然后按照dfs序得到一个关于颜色的序列。问题就转化为查询若干个区间内有多少种不同的颜色。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 50000 + 10;</div><div class=\"line\">const int M = 500000 + 10;</div><div class=\"line\">vector&lt;int&gt; g[N], gift[N];</div><div class=\"line\">int st[N], ed[N], pos[N], ans[N], mp[2 * N], seq[M], s[M], nxt[M];</div><div class=\"line\">int tot, n, m;</div><div class=\"line\">bool cmp1(int a, int b) &#123; ///按左区间从小到大排</div><div class=\"line\">    return st[a] &lt; st[b];</div><div class=\"line\">&#125;</div><div class=\"line\">bool cmp(int a, int b) &#123; ///按有区间从小到大排</div><div class=\"line\">    return ed[a] &lt; ed[b];</div><div class=\"line\">&#125;</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; -x;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int p, int v) &#123;</div><div class=\"line\">    while(p &lt;= tot) &#123;</div><div class=\"line\">        s[p] += v;</div><div class=\"line\">        p += lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int sum(int p) &#123;</div><div class=\"line\">    int res = 0;</div><div class=\"line\">    while(p &gt; 0) &#123;</div><div class=\"line\">        res += s[p];</div><div class=\"line\">        p -= lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">void dfs(int u, int fa) &#123;</div><div class=\"line\">    st[u] = tot + 1;</div><div class=\"line\">    for (int i = 0; i &lt; gift[u].size(); i++) seq[++tot] = gift[u][i];</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (v != fa) dfs(v, u);</div><div class=\"line\">    &#125;</div><div class=\"line\">    ed[u] = tot;</div><div class=\"line\">&#125;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    tot = 0;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        g[i].clear();</div><div class=\"line\">        gift[i].clear();</div><div class=\"line\">        pos[i] = i;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        init();</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v);</div><div class=\"line\">            g[v].pb(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        int mx = 0;</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            if (find(gift[u].begin(), gift[u].end(), v) == gift[u].end()) gift[u].pb(v);</div><div class=\"line\">            mx = max(mx, v);</div><div class=\"line\">        &#125;</div><div class=\"line\">        dfs(1, -1);</div><div class=\"line\">        memset(s, 0, sizeof(int) * (tot + 5));</div><div class=\"line\">        memset(mp, 0, sizeof(int) * (mx + 5));</div><div class=\"line\">        ///按右区间从小到大排</div><div class=\"line\">        sort(pos + 1, pos + n + 1, cmp);</div><div class=\"line\">        for(int i = 1; i &lt;= tot; i++) &#123;</div><div class=\"line\">            if(!mp[seq[i]]) &#123;</div><div class=\"line\">                add(i, 1);</div><div class=\"line\">                mp[seq[i]] = i; ///如果是第一次出现, mp[seq[i]]记录为当前位置</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int right = 1;</div><div class=\"line\">        for(int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            int now = pos[i];</div><div class=\"line\">            while(right &lt;= ed[now]) &#123;</div><div class=\"line\">                if(mp[seq[right]] != right) &#123; ///如果不是第一次出现</div><div class=\"line\">                    add(mp[seq[right]], -1);  ///减去前一次出现的</div><div class=\"line\">                    add(right, 1);</div><div class=\"line\">                    mp[seq[right]] = right;   ///重新定义这个数最近一次出现位置</div><div class=\"line\">                &#125;</div><div class=\"line\">                right++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ans[now] = sum(ed[now]) - sum(st[now] - 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">/*</div><div class=\"line\">        ///按左区间从小到大排</div><div class=\"line\">        for (int i = 1; i &lt;= tot; i++) &#123;</div><div class=\"line\">            if (!mp[seq[i]]) &#123;</div><div class=\"line\">                mp[seq[i]] = i;</div><div class=\"line\">                add(i, 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        memset(mp, 0, sizeof(int) * (mx + 5));</div><div class=\"line\">        for (int i = tot; i &gt;= 1; i--) &#123;</div><div class=\"line\">            if (!mp[seq[i]]) nxt[i] = tot + 1;</div><div class=\"line\">            else nxt[i] = mp[seq[i]];</div><div class=\"line\">            mp[seq[i]] = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(pos + 1, pos + n + 1, cmp1);</div><div class=\"line\">        int t = 1;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            int now = pos[i];</div><div class=\"line\">            while(t &lt;= tot &amp;&amp; t &lt; st[now]) &#123;</div><div class=\"line\">                add(nxt[t++], 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">            //cout&lt;&lt;now&lt;&lt;&quot; &quot;&lt;&lt;st[now]&lt;&lt;&quot; &quot;&lt;&lt;ed[now]&lt;&lt;endl;</div><div class=\"line\">            ans[now] = sum(ed[now]) - sum(st[now] - 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">*/</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) printf(&quot;%d%c&quot;, ans[i], i == n ? &apos;\\n&apos; : &apos; &apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["ACM"],"tags":["数据结构","树状数组","dfs序"]},{"title":"ZOJ2112 Dynamic Rankings（动态区间第K大 树状数组套主席树）","url":"http://yoursite.com/2015/10/28/ZOJ2112/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=2112\" target=\"_blank\" rel=\"external\">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=2112</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>动态查询区间第K大数，带修改</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://www.cnblogs.com/Empress/p/4659824.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/Empress/p/4659824.html</a><br>需要将询问离线处理，将一开始的数列用主席树维护。之后修改的部分用N个树状数组来维护，每次更新logn棵树。<br>时间复杂度：nlog^2n<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 60000 + 10;</div><div class=\"line\">#define lson l, m</div><div class=\"line\">#define rson m + 1, r</div><div class=\"line\">int a[N], Hash[N];</div><div class=\"line\">int root[N], ln[N &lt;&lt; 5], rn[N &lt;&lt; 5], sum[N &lt;&lt; 5];</div><div class=\"line\">int S[N];</div><div class=\"line\">int n, m, tot;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int l, r, k;</div><div class=\"line\">    bool Q;</div><div class=\"line\">&#125;op[10005];</div><div class=\"line\">int build(int l, int r) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    sum[rt] = 0;</div><div class=\"line\">    if (l != r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        ln[rt] = build(lson);</div><div class=\"line\">        rn[rt] = build(rson);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int update(int pre, int l, int r, int x, int val) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    ln[rt] = ln[pre], rn[rt] = rn[pre], sum[rt] = sum[pre] + val;</div><div class=\"line\">    if (l &lt; r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        if (x &lt;= m) ln[rt] = update(ln[pre], lson, x, val);</div><div class=\"line\">        else rn[rt] = update(rn[pre], rson, x, val);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; -x;</div><div class=\"line\">&#125;</div><div class=\"line\">int use[N];</div><div class=\"line\">void add(int x, int pos, int val) &#123;</div><div class=\"line\">    while(x &lt;= n) &#123;</div><div class=\"line\">        S[x] = update(S[x], 1, m, pos, val);</div><div class=\"line\">        x += lowbit(x);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int get_sum(int x) &#123;</div><div class=\"line\">    int ret = 0;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        ret += sum[ln[use[x]]];</div><div class=\"line\">        x -= lowbit(x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">int query(int u, int v, int lr, int rr, int l, int r, int k) &#123;</div><div class=\"line\">    if (l &gt;= r) return l;</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    int tmp = get_sum(v) - get_sum(u) + sum[ln[rr]] - sum[ln[lr]];</div><div class=\"line\">    if (tmp &gt;= k) &#123;</div><div class=\"line\">        for (int i = u; i; i -= lowbit(i)) use[i] = ln[use[i]];</div><div class=\"line\">        for (int i = v; i; i -= lowbit(i)) use[i] = ln[use[i]];</div><div class=\"line\">        return query(u, v, ln[lr], ln[rr], lson, k);</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        for (int i = u; i; i -= lowbit(i)) use[i] = rn[use[i]];</div><div class=\"line\">        for (int i = v; i; i -= lowbit(i)) use[i] = rn[use[i]];</div><div class=\"line\">        return query(u, v, rn[lr], rn[rr], rson, k - tmp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void modify(int x, int p, int d) &#123;</div><div class=\"line\">    while(x &lt;= n) &#123;</div><div class=\"line\">        S[x] = update(S[x], 1, m, p, d);</div><div class=\"line\">        x += lowbit(x);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t, q;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</div><div class=\"line\">        m = tot = 0;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            Hash[++m] = a[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        char s[10];</div><div class=\"line\">        for (int i = 0; i &lt; q; i++) &#123;</div><div class=\"line\">            scanf(&quot;%s&quot;, s);</div><div class=\"line\">            if (s[0] == &apos;Q&apos;) &#123;</div><div class=\"line\">                scanf(&quot;%d%d%d&quot;, &amp;op[i].l, &amp;op[i].r, &amp;op[i].k);</div><div class=\"line\">                op[i].Q = 1;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;op[i].l, &amp;op[i].r);</div><div class=\"line\">                op[i].Q = 0;</div><div class=\"line\">                Hash[++m] = op[i].r;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(Hash + 1, Hash + m + 1);</div><div class=\"line\">        m = unique(Hash + 1, Hash + m + 1) - Hash - 1;</div><div class=\"line\">        root[0] = build(1, m);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) root[i] = update(root[i - 1], 1, m, lower_bound(Hash + 1, Hash + m + 1, a[i]) - Hash, 1);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) S[i] = root[0];</div><div class=\"line\">        for (int i = 0; i &lt; q; i++) &#123;</div><div class=\"line\">            if (op[i].Q) &#123;</div><div class=\"line\">                for (int j = op[i].l - 1; j; j -= lowbit(j)) use[j] = S[j];</div><div class=\"line\">                for (int j = op[i].r; j; j -= lowbit(j)) use[j] = S[j];</div><div class=\"line\">                printf(&quot;%d\\n&quot;, Hash[query(op[i].l - 1, op[i].r, root[op[i].l - 1], root[op[i].r], 1, m, op[i].k)]);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                modify(op[i].l, lower_bound(Hash + 1, Hash + m + 1, a[op[i].l]) - Hash, -1);</div><div class=\"line\">                modify(op[i].l, lower_bound(Hash + 1, Hash + m + 1, op[i].r) - Hash, 1);</div><div class=\"line\">                a[op[i].l] = op[i].r;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["ACM"],"tags":["数据结构","树状数组","主席树"]},{"title":"POJ2104 K-th Number（静态区间第K大 主席树）","url":"http://yoursite.com/2015/10/22/POJ2104/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://poj.org/problem?id=2104\" target=\"_blank\" rel=\"external\">http://poj.org/problem?id=2104</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>静态查询区间第K大数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://www.cnblogs.com/Empress/p/4652449.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/Empress/p/4652449.html</a><br>主席数利用函数式线段树来维护数列，即每一个前缀维护一个线段树。再利用两个相邻的线段树只需要修改log级别，所以空间也能开下。一般用来解决区间第k大问题</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">#define lson l, m</div><div class=\"line\">#define rson m + 1, r</div><div class=\"line\">const int N = 1e5 + 5;</div><div class=\"line\">int ln[N &lt;&lt; 5], rn[N &lt;&lt; 5], sum[N &lt;&lt; 5];</div><div class=\"line\">int tot;</div><div class=\"line\">int a[N], root[N], b[N];</div><div class=\"line\">int build(int l, int r) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    sum[rt] = 0;</div><div class=\"line\">    if (l &lt; r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        ln[rt] = build(lson);</div><div class=\"line\">        rn[rt] = build(rson);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int update(int pre, int l, int r, int x) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    ln[rt] = ln[pre], rn[rt] = rn[pre], sum[rt] = sum[pre] + 1;</div><div class=\"line\">    if (l &lt; r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        if (x &lt;= m) ln[rt] = update(ln[pre], lson, x);</div><div class=\"line\">        else rn[rt] = update(rn[pre], rson, x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int query(int u, int v, int l, int r, int k) &#123;</div><div class=\"line\">    if (l &gt;= r) return l;</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    int num = sum[ln[v]] - sum[ln[u]];</div><div class=\"line\">    if (num &gt;= k) return query(ln[u], ln[v], lson, k);</div><div class=\"line\">    else return query(rn[u], rn[v], rson, k - num);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    tot = 0;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, a + i), b[i] = a[i];</div><div class=\"line\">    sort(b + 1, b + n + 1);</div><div class=\"line\">    int cnt = unique(b + 1, b + n + 1) - b - 1;</div><div class=\"line\">    root[0] = build(1, cnt);</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        int x = lower_bound(b + 1, b + n + 1, a[i]) - b;</div><div class=\"line\">        root[i] = update(root[i - 1], 1, cnt, x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    while(m--) &#123;</div><div class=\"line\">        int l, r, k;</div><div class=\"line\">        scanf(&quot;%d%d%d&quot;, &amp;l, &amp;r, &amp;k);</div><div class=\"line\">        int x = query(root[l - 1], root[r], 1, cnt, k);</div><div class=\"line\">        printf(&quot;%d\\n&quot;, b[x]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["ACM"],"tags":["数据结构","主席树"]},{"title":"SPOJ DQUERY - D-query（查询区间内有几个数 离线树状数组OR在线主席树）","url":"http://yoursite.com/2015/10/22/SPOJ-DQUERY/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://www.spoj.com/problems/DQUERY/en/\" target=\"_blank\" rel=\"external\">http://www.spoj.com/problems/DQUERY/en/</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>查询区间内有几个不同的数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/acm_cxlove/article/details/8562634\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/acm_cxlove/article/details/8562634</a></p>\n<ol>\n<li><p>离线树状数组<br>将查询区间按左端点排序<br>对于相同的数，先更新最左边的位置<br>然后根据查询区间，不断更新next，保证查询区间内只记录一个位置<br>维护前缀和用树状数组，时空效率都高</p>\n</li>\n<li><p>在线主席树<br><a href=\"http://www.cnblogs.com/Empress/p/4675386.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/Empress/p/4675386.html</a><br>将重复的元素建树。在query的时候把区间内重复的数加起来，用区间长度(r-l+1)去减就是答案<br>(query的是[l, r]之间重复元素的个数)<br>举个例子：1 1 2 1 3 2 3<br>我们从左到右枚举，如果没有重复的，那么树的形态和之前一样，出现重复的则在重复的位置加1，建一颗新树<br>这样我们需要建7颗数<br> 1 2 3 4 5 6 7<br>T0:<br>T1:<br>T2: 1<br>T3: 1<br>T4: 1 1<br>T5: 1 1<br>T6: 1 1 1<br>T7: 1 1 1  1<br>例如查询区间[2，5] 就需要用T5-T1，但是不能直接减，直接减重复的数为2个1。需要统计的是区间[2,5]内重复的个数，正好为1个1.</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>离线树状数组<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 30000 + 100;</div><div class=\"line\">const int M = 200000 + 100;</div><div class=\"line\">int a[N], s[N], n, nxt[N];</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int l, r, id;</div><div class=\"line\">    bool operator &lt; (const node &amp; T) const &#123;</div><div class=\"line\">        return l &lt; T.l;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125; Q[M];</div><div class=\"line\">int ans[M];</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; -x;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int p, int v) &#123;</div><div class=\"line\">    while(p &lt;= n) &#123;</div><div class=\"line\">        s[p] += v;</div><div class=\"line\">        p += lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int sum(int p) &#123;</div><div class=\"line\">    int res = 0;</div><div class=\"line\">    while(p &gt; 0) &#123;</div><div class=\"line\">        res += s[p];</div><div class=\"line\">        p -= lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">map&lt;int, int&gt; mp;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        mp.clear();</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            if (!mp.count(a[i])) &#123;</div><div class=\"line\">                mp[a[i]] = i;</div><div class=\"line\">                add(i, 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        mp.clear();</div><div class=\"line\">        for (int i = n; i &gt;= 1; i--) &#123;</div><div class=\"line\">            if (!mp.count(a[i])) nxt[i] = n + 1;</div><div class=\"line\">            else nxt[i] = mp[a[i]];</div><div class=\"line\">            mp[a[i]] = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int q;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;q);</div><div class=\"line\">        for (int i = 0; i &lt; q; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;Q[i].l, &amp;Q[i].r);</div><div class=\"line\">            Q[i].id = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(Q, Q + q);</div><div class=\"line\">        int t = 1;</div><div class=\"line\">        for (int i = 0; i &lt; q; i++) &#123;</div><div class=\"line\">            while(t &lt;= n &amp;&amp; t &lt; Q[i].l) &#123;</div><div class=\"line\">                add(nxt[t++], 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">            ans[Q[i].id] = sum(Q[i].r) - sum(Q[i].l - 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; q; i++) printf(&quot;%d\\n&quot;, ans[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在线主席树<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef long long LL;</div><div class=\"line\">#define lson l, m</div><div class=\"line\">#define rson m + 1, r</div><div class=\"line\">const int N = 30000 + 10;</div><div class=\"line\">int ln[N &lt;&lt; 5], rn[N &lt;&lt; 5], sum[N &lt;&lt; 5];</div><div class=\"line\">int tot, root[N], a[N];</div><div class=\"line\">map&lt;int, int&gt; mp;</div><div class=\"line\">int build(int l, int r) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    sum[rt] = 0;</div><div class=\"line\">    if (l &lt; r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        ln[rt] = build(lson);</div><div class=\"line\">        rn[rt] = build(rson);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int update(int pre, int l, int r, int x) &#123;</div><div class=\"line\">    int rt = ++tot;</div><div class=\"line\">    ln[rt] = ln[pre], rn[rt] = rn[pre], sum[rt] = sum[pre] + 1;</div><div class=\"line\">    if (l &lt; r) &#123;</div><div class=\"line\">        int m = l + r &gt;&gt; 1;</div><div class=\"line\">        if (x &lt;= m) ln[rt] = update(ln[pre], lson, x);</div><div class=\"line\">        else rn[rt] = update(rn[pre], rson, x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return rt;</div><div class=\"line\">&#125;</div><div class=\"line\">int query(int u, int v, int l, int r, int k) &#123;</div><div class=\"line\">    if (l &gt;= k) return sum[v] - sum[u];</div><div class=\"line\">    int ans = 0;</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    if (k &lt;= m) ans += query(ln[u], ln[v], lson, k);</div><div class=\"line\">    ans += query(rn[u], rn[v], rson, k);</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    tot = 0;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">    root[0] = build(1, n);</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (mp.find(a[i]) != mp.end()) root[i] = update(root[i - 1], 1, n, mp[a[i]]);</div><div class=\"line\">        else root[i] = root[i - 1];</div><div class=\"line\">        mp[a[i]] = i;</div><div class=\"line\">    &#125;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;m);</div><div class=\"line\">    int l, r;</div><div class=\"line\">    while(m--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;l, &amp;r);</div><div class=\"line\">        printf(&quot;%d\\n&quot;, r - l + 1 - query(root[l - 1], root[r], 1, n, l));</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","categories":["ACM"],"tags":["数据结构","树状数组","主席树"]},{"title":"HDU 5152 A Strange Problem（线段树+数论）","url":"http://yoursite.com/2015/10/13/hdu5152/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5152\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5152</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>某天你收到了一个信封，信封里是一个奇怪的题目。首先给你一个长度为N的序列，序列为A1,A2,…,AN.然后有M个操作，每个操作为以下三种操作的其中一个：</p>\n<ol>\n<li>输出操作。给你l,r，输出区间和。</li>\n<li>修改操作。给你x，把Ax修改为2^Ax</li>\n<li>加法操作。给你l,r,x，区间加上​​x<br>由于输出操作的结果可能很大，输出结果对2333333取模。</li>\n</ol>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>这道题复杂就是操作2。需要补充一个知识<br>指数循环节：当x &gt;= Phi(C)时, A^x = A ^ (x%Phi(C) + Phi(C)) (mod C). Phi(C)是C的欧拉函数，<br>对于2333333这个模数来说，求18次欧拉函数后就变成了1，所以只需要保存19层第三次操作的加数即可，然后就直接是线段树区间更新和询问操作了<br>参考题解写的代码，主要是计算操作二的时候，用一个vector记录某一位置操作二的个数，其实只需要记录最后的19个操作即可。具体细节见代码</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m+1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int mod = 2333333;</div><div class=\"line\">const int N = 50005;</div><div class=\"line\">int mo[20] = &#123;2333333, 2196720, 580608, 165888, 55296, 18432, 6144, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1&#125;;</div><div class=\"line\">int pow2[33];</div><div class=\"line\">vector&lt;ll&gt; vt[N];</div><div class=\"line\">ll mark[N &lt;&lt; 2];</div><div class=\"line\">int len[N &lt;&lt; 2], sum[N &lt;&lt; 2];</div><div class=\"line\">int n, m;</div><div class=\"line\">inline void add(int &amp;x, int y) &#123;</div><div class=\"line\">    x += y;</div><div class=\"line\">    if (x &gt;= mod) x -= mod;</div><div class=\"line\">&#125;</div><div class=\"line\">void up(int rt) &#123;</div><div class=\"line\">    sum[rt]  = sum[rt &lt;&lt; 1] + sum[rt &lt;&lt; 1 | 1];</div><div class=\"line\">    add(sum[rt], 0);</div><div class=\"line\">&#125;</div><div class=\"line\">void down(int rt) &#123;</div><div class=\"line\">    if (mark[rt]) &#123;</div><div class=\"line\">        mark[rt &lt;&lt; 1] += mark[rt];</div><div class=\"line\">        mark[rt &lt;&lt; 1 | 1] += mark[rt];</div><div class=\"line\">        add(sum[rt &lt;&lt; 1], 1LL * len[rt &lt;&lt; 1] * mark[rt] % mod);</div><div class=\"line\">        add(sum[rt &lt;&lt; 1 | 1], 1LL * len[rt &lt;&lt; 1 | 1] * mark[rt] % mod);</div><div class=\"line\">        mark[rt] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    mark[rt] = 0;</div><div class=\"line\">    len[rt] = r - l + 1;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        int x;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">        vt[l].clear();</div><div class=\"line\">        vt[l].pb(x);</div><div class=\"line\">        sum[rt] = x % mod;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    up(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">int query(int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) return sum[rt];</div><div class=\"line\">    down(rt);</div><div class=\"line\">    int m = l + r &gt;&gt; 1, ret = 0;</div><div class=\"line\">    if (L &lt;= m) add(ret, query(L, R, lson));</div><div class=\"line\">    if (R &gt; m) add(ret, query(L, R, rson));</div><div class=\"line\">    up(rt);</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int v, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        mark[rt] += v;</div><div class=\"line\">        add(sum[rt], 1LL * len[rt] * v % mod);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    down(rt);</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, v, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, v, rson);</div><div class=\"line\">    up(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">int pow_mod(int x, int n, int mod) &#123;</div><div class=\"line\">    int ret = 1;</div><div class=\"line\">    while(n) &#123;</div><div class=\"line\">        if (n &amp; 1) ret = 1LL * ret * x % mod;</div><div class=\"line\">        x = 1LL * x * x % mod;</div><div class=\"line\">        n &gt;&gt;= 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">int cal(vector&lt;ll&gt; &amp;v) &#123;</div><div class=\"line\">    if (v.size() &lt; 19) &#123;</div><div class=\"line\">        int pos = v.size() - 1;</div><div class=\"line\">        ll ret = v[0];</div><div class=\"line\">        bool flag = false;</div><div class=\"line\">        if (v[0] &gt;= mo[pos]) &#123;</div><div class=\"line\">            flag = true;</div><div class=\"line\">            ret = ret % mo[pos] + mo[pos];</div><div class=\"line\">        &#125;</div><div class=\"line\">        pos--;</div><div class=\"line\">        for (int i = 1; i &lt; v.size(); i++) &#123;</div><div class=\"line\">            if (flag) &#123;</div><div class=\"line\">                ret = (pow_mod(2, ret, mo[pos]) + v[i]) % mo[pos] + mo[pos];</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                if (ret &gt;= 30 || pow2[ret] &gt;= mo[pos]) &#123;</div><div class=\"line\">                    flag = true;</div><div class=\"line\">                    ret = (pow_mod(2, ret, mo[pos]) + v[i]) % mo[pos] + mo[pos];</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    ret = pow2[ret] + v[i];</div><div class=\"line\">                    if (ret &gt;= mo[pos]) &#123;</div><div class=\"line\">                        flag = true;</div><div class=\"line\">                        ret = ret % mo[pos] + mo[pos];</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            pos--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return ret % mod;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        ll ret = 1;</div><div class=\"line\">        int pos = 17;</div><div class=\"line\">        for (int i = v.size() - 18; i &lt; v.size(); i++) &#123;</div><div class=\"line\">            ret = (pow_mod(2, ret, mo[pos]) + v[i]) % mo[pos] + mo[pos];</div><div class=\"line\">            pos--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return ret % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void modify(int x, int l, int r, int rt) &#123;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        if (mark[rt]) &#123;</div><div class=\"line\">            vt[l][vt[l].size() - 1] += mark[rt];</div><div class=\"line\">            mark[rt] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">        vt[l].pb(0);</div><div class=\"line\">        sum[rt] = cal(vt[l]);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    down(rt);</div><div class=\"line\">    int m = l + r &gt;&gt; 1;</div><div class=\"line\">    if (x &lt;= m) modify(x, lson);</div><div class=\"line\">    else modify(x, rson);</div><div class=\"line\">    up(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    pow2[0] = 1;</div><div class=\"line\">    for (int i = 1; i &lt;= 30; i++) pow2[i] = pow2[i - 1] &lt;&lt; 1;</div><div class=\"line\">    int op, l, r, x;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        build(1, n, 1);</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;op);</div><div class=\"line\">            if (op == 1) &#123;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;l, &amp;r);</div><div class=\"line\">                printf(&quot;%d\\n&quot;, query(l, r, 1, n, 1));</div><div class=\"line\">            &#125;else if (op == 2) &#123;</div><div class=\"line\">                scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">                modify(x, 1, n, 1);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                scanf(&quot;%d%d%d&quot;, &amp;l, &amp;r, &amp;x);</div><div class=\"line\">                update(l, r, x, 1, n, 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["线段树","数论"]},{"title":"HDU 5151 Sit sit sit（区间dp）","url":"http://yoursite.com/2015/10/13/hdu5151/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5151\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5151</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个人陆续坐到n个椅子上，每张椅子为两种颜色中的一种。每个人每次可以选择一个空位置，如果该空位置两边都有人，且两边的椅子颜色不同，那么他便不能坐下，需要离开。现在问n个人全部坐下的方案数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>dp[i][j]表示编号i-j的位置上都有人坐下的方案数。dp[i][i] = 1, dp[i][i+1] = 2<br>dp[i][j] =sum(dp[i][k-1] <em> dp[k+1][j] </em> C(j-i, k-i-1)) 当i-k-1有人坐下，k+1-j有人坐下，此时来的人坐在k的方案数累积<br>C(j-i, k-i-1)表示前面的j-i个人有k-i-1个人选择坐在了左边的方案数</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int CN = 111;</div><div class=\"line\">const int mod = 1000000007;</div><div class=\"line\">ll c[CN][CN]= &#123;&#125;;</div><div class=\"line\">void cinit() &#123;</div><div class=\"line\">    for(int i = 0; i &lt;= 100; i++) &#123;</div><div class=\"line\">        c[i][0] = c[i][i] = 1;</div><div class=\"line\">        for(int j = 1; j &lt; i; j++) &#123;</div><div class=\"line\">            c[i][j] = c[i - 1][j] + c[i - 1][j - 1];</div><div class=\"line\">            if (c[i][j] &gt; mod) c[i][j] -= mod;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll dp[CN][CN];</div><div class=\"line\">int n, a[CN];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cinit();</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            dp[i][i] = 1;</div><div class=\"line\">            dp[i][i + 1] = 2;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int l = 3; l &lt;= n; l++) &#123;</div><div class=\"line\">            for (int i = 0; i + l &lt;= n; i++) &#123;</div><div class=\"line\">                int j = i + l - 1;</div><div class=\"line\">                dp[i][j] = 0;</div><div class=\"line\">                //head</div><div class=\"line\">                dp[i][j] += dp[i + 1][j];</div><div class=\"line\">                //mid</div><div class=\"line\">                for (int k = i + 1; k &lt;= j - 1; k++) if (a[k - 1] == a[k + 1]) &#123;</div><div class=\"line\">                    dp[i][j] += c[l - 1][k - i] * dp[i][k - 1] % mod * dp[k + 1][j] % mod;</div><div class=\"line\">                    dp[i][j] %= mod;</div><div class=\"line\">                &#125;</div><div class=\"line\">                //tail</div><div class=\"line\">                dp[i][j] += dp[i][j - 1];</div><div class=\"line\">                dp[i][j] %= mod;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, dp[0][n - 1]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["区间dp"]},{"title":"HDU 5085 Counting problem（暴力+HashTable）","url":"http://yoursite.com/2015/10/11/hdu5085/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5085\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5085</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>定义f(n,k) = 各位数字的k次方和。例如f(305, 2) = 5^2 + 0^2 + 3^2 = 34<br>给定a,b,k,s。求[a,b]区间内满足f(n,k)=s的数字个数<br>1≤a≤b≤999999999;    1≤k≤15;    1≤S≤10^16</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>把n分为按照长度分为两半部分，前半部分暴力枚举，后半部分加入hash表中，这样将复杂度降到sqrt(n)hash表中记录每种和的情况数。要注意一些细节：</p>\n<ol>\n<li>不妨设一个B=10000，如果a,b都小于B。直接枚举即可</li>\n<li>当b大于B时，ahead = (a-1) / B, atail = a % B   bhead = b / B, btail = b % B<br>将0~B-1的数字加入hash表时，记录一下以ahead开头符合条件的个数resa，再记录一下以bhead开头的符合条件的resb<br>之后枚举[ahead, bhead), 符合条件的累加到resb中，最后答案即为resb-resa</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">//Hash Table</div><div class=\"line\">#define pii pair&lt;ll, ll&gt;</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define MAXN 10010</div><div class=\"line\">#define mod  40007</div><div class=\"line\">struct HashKey &#123;</div><div class=\"line\">    ll key;</div><div class=\"line\">    int nxt, cnt;</div><div class=\"line\">&#125; e[MAXN];</div><div class=\"line\">int link1[MAXN * 4], p, k;</div><div class=\"line\">ll s;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    memset(link1, -1, sizeof(link1));</div><div class=\"line\">    p = 0;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(ll key) &#123;</div><div class=\"line\">    e[p].key = key;</div><div class=\"line\">    e[p].cnt = 1;</div><div class=\"line\">    int modKey = key % mod;</div><div class=\"line\">    if (modKey &lt; 0) modKey += mod;</div><div class=\"line\">    e[p].nxt = link1[modKey];</div><div class=\"line\">    link1[modKey] = p++;</div><div class=\"line\">&#125;</div><div class=\"line\">int Find(ll key) &#123;</div><div class=\"line\">    int modKey = key % mod;</div><div class=\"line\">    if (modKey &lt; 0) modKey += mod;</div><div class=\"line\">    for (int i = link1[modKey]; i != -1; i = e[i].nxt) &#123;</div><div class=\"line\">        if (e[i].key == key) &#123;</div><div class=\"line\">            return i;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return -1;</div><div class=\"line\">&#125;</div><div class=\"line\">ll calc(int x) &#123;</div><div class=\"line\">    ll ans = 0, tmp = 1;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        int t = x % 10;</div><div class=\"line\">        x /= 10;</div><div class=\"line\">        tmp = 1;</div><div class=\"line\">        for (int i = 0; i &lt; k; i++) tmp *= t;</div><div class=\"line\">        ans += tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (ans &gt; s) return -1;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">void solve(int x)  &#123;</div><div class=\"line\">    ll ans = calc(x);</div><div class=\"line\">    if (ans &gt; s || ans == -1) return ;</div><div class=\"line\">    int k = Find(ans);</div><div class=\"line\">    if (k == -1) add(ans);</div><div class=\"line\">    else e[k].cnt++;</div><div class=\"line\">&#125;</div><div class=\"line\">int work(int ahead) &#123;</div><div class=\"line\">    ll ans = calc(ahead);</div><div class=\"line\">    if (ans == -1) return 0;</div><div class=\"line\">    if (ans &lt;= s) &#123;</div><div class=\"line\">        int x = Find(s - ans);</div><div class=\"line\">        if (x != -1) return e[x].cnt;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll a, b;</div><div class=\"line\">    int B = 10000;</div><div class=\"line\">    while(~scanf(&quot;%I64d%I64d%d%I64d&quot;, &amp;a, &amp;b, &amp;k, &amp;s)) &#123;</div><div class=\"line\">        if (b &lt; B) &#123;</div><div class=\"line\">            int res = 0;</div><div class=\"line\">            for (int i = a; i &lt;= b; i++) &#123;</div><div class=\"line\">                if (calc(i) == s) res++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            printf(&quot;%d\\n&quot;, res);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        init();</div><div class=\"line\">        int bhead = b / B, btail = b % B;</div><div class=\"line\">        int ahead = (a - 1) / B, atail = (a - 1) % B;</div><div class=\"line\">        ll resa = 0, resb = 0;</div><div class=\"line\">        if (atail &lt; btail) &#123;</div><div class=\"line\">            for (int i = 0; i &lt;= atail; i++) solve(i);</div><div class=\"line\">            resa = work(ahead);</div><div class=\"line\">            for (int i = atail + 1; i &lt;= btail; i++) solve(i);</div><div class=\"line\">            resb = work(bhead);</div><div class=\"line\">            for (int i = btail + 1; i &lt; B; i++) solve(i);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            for (int i = 0; i &lt;= btail; i++) solve(i);</div><div class=\"line\">            resb = work(bhead);</div><div class=\"line\">            for (int i = btail + 1; i &lt;= atail; i++) solve(i);</div><div class=\"line\">            resa = work(ahead);</div><div class=\"line\">            for (int i = atail + 1; i &lt; B; i++) solve(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = ahead; i &lt; bhead; i++) resb += work(i);</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, resb - resa);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["HashTable"]},{"title":"HDU 5148 Cities（树dp）","url":"http://yoursite.com/2015/10/10/hdu5148/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5148\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5148</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一棵树，数的节点数为n。问从中选出K个点，使得这些点之间的距离和最小</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>考虑每条边的贡献，一条边会把树分成两部分，若在其中一部分里选择了x个点，则这条边被统计的次数为x<em>(K-x)</em>2. 那么考虑dp[u][i]表示在u的子树中选择了i个点的最小代价，有转移dp[u][i] = min(dp[u][i-j]+ dp[v][j] + j<em>(K-j)</em>2*c)​​<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">#define pii pair&lt;int, int&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 2100;</div><div class=\"line\">int K, n;</div><div class=\"line\">vector&lt; pii &gt; g[N];</div><div class=\"line\">ll dp[N][55];</div><div class=\"line\">void change(ll &amp;x, ll v) &#123;</div><div class=\"line\">    if (x == -1 || x &gt; v) x = v;</div><div class=\"line\">&#125;</div><div class=\"line\">void dfs(int u, int fa) &#123;</div><div class=\"line\">    dp[u][1] = 0;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i].fi, c = g[u][i].se;</div><div class=\"line\">        if (v == fa) continue;</div><div class=\"line\">        dfs(v, u);</div><div class=\"line\">        for (int j = K - 1; j &gt;= 1; j--) &#123;</div><div class=\"line\">            if (dp[u][j] == -1) continue;</div><div class=\"line\">            for (int k = 1; j + k &lt;= K; k++) &#123;</div><div class=\"line\">                if (dp[v][k] == -1) continue;</div><div class=\"line\">                change(dp[u][j + k], dp[u][j] + dp[v][k] + (ll)2 * k * (K - k) * c);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t, u, v, c;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;K);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            g[i].clear();</div><div class=\"line\">            for (int j = 0; j &lt;= K; j++) dp[i][j] = -1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;c);</div><div class=\"line\">            g[u].pb(&#123;v, c&#125;);</div><div class=\"line\">            g[v].pb(&#123;u, c&#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        dfs(1, -1);</div><div class=\"line\">        ll ans = dp[1][K];</div><div class=\"line\">        for (int i = 2; i &lt;= n; i++) if (dp[i][K] != -1) ans = min(ans, dp[i][K]);</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["树dp"]},{"title":"HDU 5183 Negative and Positive (NP)（HashTable）","url":"http://yoursite.com/2015/10/09/hdu5183/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5183\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5183</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个数的序列（A0,A1,A2…,An-1) 规定NP-sum(i,j) = Ai - Ai+1 + Ai+2 + (-1)^(j-i)Aj<br>现在给定一个K，问是否有一个NP-sum(i,j)=K<br>1≤n≤1000000,−1000000000≤ai≤1000000000,−1000000000≤K≤1000000000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>sum[i]=a1−a2+a3…。手写一个哈希表来保存所有出现过的sum值,然后根据奇偶性分类判断在哈系表中是否存在对应的子序列满足题意</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">//Hash Table</div><div class=\"line\">#define MAXN 1001000</div><div class=\"line\">#define mod  4000007</div><div class=\"line\">struct HashKey &#123;</div><div class=\"line\">    ll key;</div><div class=\"line\">    int nxt, pos;</div><div class=\"line\">&#125;e[MAXN];</div><div class=\"line\">int link1[MAXN * 4], p;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    memset(link1, -1, sizeof(link1));</div><div class=\"line\">    p = 0;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(ll key, int pos) &#123;</div><div class=\"line\">    e[p].key = key;</div><div class=\"line\">    e[p].pos = pos &amp; 1;</div><div class=\"line\">    int modKey = key % mod;</div><div class=\"line\">    if (modKey &lt; 0) modKey += mod;</div><div class=\"line\">    e[p].nxt = link1[modKey];</div><div class=\"line\">    link1[modKey] = p++;</div><div class=\"line\">&#125;</div><div class=\"line\">bool Find(ll key, int odd) &#123;</div><div class=\"line\">    int modKey = key % mod;</div><div class=\"line\">    if (modKey &lt; 0) modKey += mod;</div><div class=\"line\">    for (int i = link1[modKey]; i != -1; i = e[i].nxt) &#123;</div><div class=\"line\">        if (e[i].key == key &amp;&amp; e[i].pos == odd) return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T, n, k, x;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    for (int cas = 1; cas &lt;= T; cas++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        ll s = 0;</div><div class=\"line\">        init();</div><div class=\"line\">        add(s, 0);</div><div class=\"line\">        bool ok = false;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">            if (i &amp; 1) s += x;</div><div class=\"line\">            else s -= x;</div><div class=\"line\">            if (!ok) &#123;</div><div class=\"line\">                if (Find(s - k, 0)) ok = true;</div><div class=\"line\">                if (Find(s + k, 1)) ok = true;</div><div class=\"line\">                add(s, i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;Case #%d: %s.\\n&quot;, cas, ok ? &quot;Yes&quot; : &quot;No&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["HashTable"]},{"title":"HDU 5084 HeHe（矩阵+强行找规律）","url":"http://yoursite.com/2015/10/09/hdu5084/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5084\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5084</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个矩阵，矩阵的形式如下：<br>M = |tn,   tn+1, …, t2<em>n-1|<br>    |tn-1, tn,   …, t2</em>n-2|<br>    |.                      |<br>    |t1,   t2,   …, tn    |<br>有Q组询问，每次询问A(x,y) 其中A = M * M</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>由于n是1000级别的，所以常规的矩阵乘无法满足条件。<br>观察发现ans[x][y]就是 a[y]<em>a[2</em>n-x] + …. + a[y+n-1]<em>a[n-x+1] 乘的这部分 a[i]</em>a[j] i+j是定值 所以 对于i+j等于某个数的，求个前缀和 最后每个值就O(1)得到了</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 1010;</div><div class=\"line\">ll t[2 * N], f[3 * N][2 * N];</div><div class=\"line\">int n;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    for (int i = n + 1; i &lt;= 3 * n - 1; i++) &#123;</div><div class=\"line\">        f[i][0] = 0;</div><div class=\"line\">        for (int j = 1; j &lt; 2 * n; j++) &#123;</div><div class=\"line\">            if (i &gt; j &amp;&amp; (i - j) &lt;= 2 * n - 1) f[i][j] = t[j] * t[i - j] + f[i][j - 1];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        for (int i = 1; i &lt; 2 * n; i++) scanf(&quot;%d&quot;, t + i);</div><div class=\"line\">        init();</div><div class=\"line\">        ll ans = 0, ret = 0;</div><div class=\"line\">        int r, c, m;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;m);</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;r, &amp;c);</div><div class=\"line\">            r = (r + ret) % n + 1;</div><div class=\"line\">            c = (c + ret) % n + 1;</div><div class=\"line\">            ret = f[2 * n - r + c][2 * n - r] - f[2 * n - r + c][n - r];</div><div class=\"line\">            ans += ret;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 5021 Revenge of kNN II（二分+树状数组）","url":"http://yoursite.com/2015/10/09/hdu5021/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5021\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5021</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个点，每个点有一个值。现在有一些询问，每次用离某点距离最小的K个点的平均值来更新该点的值，如果有两个点距离相同，去index小的点。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><ol>\n<li>可以用二分来求每次离该点最近的K个点，二分离该点的距离值即可。注意一些细节问题</li>\n<li>用树状数组来维护距离和</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 100000 + 100;</div><div class=\"line\">int n, q;</div><div class=\"line\">int x[N], v[N], rk[N], p[N];</div><div class=\"line\">pair&lt;int, int&gt; d[N];</div><div class=\"line\">double c[N], b[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, x + i, v + i);</div><div class=\"line\">            d[i] = make_pair(x[i], i);</div><div class=\"line\">            c[i] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(d + 1, d + n + 1);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            rk[d[i].second] = i;</div><div class=\"line\">            b[i] = v[d[i].second];</div><div class=\"line\">            p[i] = d[i].first;</div><div class=\"line\">            for (int j = i; j &lt;= n; j += j &amp; -j) c[j] += b[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        double ans = 0;</div><div class=\"line\">        while(q--) &#123;</div><div class=\"line\">            int i, k, dis;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;i, &amp;k);</div><div class=\"line\">            dis = x[i];</div><div class=\"line\">            i = rk[i];</div><div class=\"line\">            int l = 1, r = 1e9, mid;</div><div class=\"line\">            while(l &lt; r) &#123;</div><div class=\"line\">                mid = (l + r) &gt;&gt; 1;</div><div class=\"line\">                int sum = upper_bound(p + 1, p + n + 1, dis + mid) - lower_bound(p + 1, p + n + 1, dis - mid);</div><div class=\"line\">                if (sum &gt;= k + 1) r = mid;</div><div class=\"line\">                else l = mid + 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">            int L = lower_bound(p + 1, p + n + 1, dis - r) - p;</div><div class=\"line\">            int R = upper_bound(p + 1, p + n + 1, dis + r) - p - 1;</div><div class=\"line\">            if (L + k != R) &#123;</div><div class=\"line\">                if (d[L].second &lt; d[R].second) --R;</div><div class=\"line\">                else ++L;</div><div class=\"line\">            &#125;</div><div class=\"line\">            double sum = 0;</div><div class=\"line\">            for (int j = R; j &gt; 0; j -= j &amp; -j) sum += c[j];</div><div class=\"line\">            for (int j = L - 1; j &gt; 0; j -= j &amp; -j) sum -= c[j];</div><div class=\"line\">            sum -= b[i];</div><div class=\"line\">            sum /= k;</div><div class=\"line\">            ans += sum;</div><div class=\"line\">            for (int j = i; j &lt;= n; j += j &amp; -j) c[j] += sum - b[i];</div><div class=\"line\">            b[i] = sum;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%.3lf\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["树状数组","二分"]},{"title":"HDU 5064 Find Sequence（LIS+dp）","url":"http://yoursite.com/2015/10/07/hdu5064/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5064\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5064</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个正整数，这n个数相加为M（0&lt;M≤2^22）。问从这n个数选出一些数，从小到大排序，使得b2-b1≤b3-b2……≤bt-bt-1。求t的最大值</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先考虑解的结构一定是C1,C1……C2,C3……Cm。其中C1&lt;C2&lt;……&lt;Cm。所以可以对ai去重后排序。可以知道此时的ai的个数为sqrt(M)级别的。<br>然后用dp[i][j]表示以aj结尾，ai为倒数第二个数的最优解。dp[i][j] = max(dp[k][i]) + 1, 其中ai-ak≤aj-ai<br>这样的复杂度是O(n^3),其中n为1000级别的，会TLE。<br>发现有一个优化：dp[i][j+1] = max(dp[k][i]) + 1, 其中ai-ak≤aj-ai&lt;aj+1-ai。所以重复的部分只需要计算一次即可。这样复杂度降到O(n^2)</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 3000;</div><div class=\"line\">int n, m;</div><div class=\"line\">int a[N * N], cnt[N], dp[N][N];</div><div class=\"line\">void change(int &amp;a, int b) &#123;</div><div class=\"line\">    if (a &lt; b) a = b;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">        sort(a + 1, a + n + 1);</div><div class=\"line\">        int cur;</div><div class=\"line\">        cnt[cur = 1] = 1;</div><div class=\"line\">        for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">            if (a[i] == a[cur]) cnt[cur]++;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                a[++cur] = a[i];</div><div class=\"line\">                cnt[cur] = 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        n = cur;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) dp[i][i] = cnt[i];</div><div class=\"line\">        int k, res, ans = 0;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            k = i;</div><div class=\"line\">            res = dp[i][i];</div><div class=\"line\">            change(ans, res);</div><div class=\"line\">            for (int j = i + 1; j &lt;= n; j++) &#123;</div><div class=\"line\">                for (; k &gt; 0 &amp;&amp; a[i] - a[k] &lt;= a[j] - a[i]; k--) change(res, dp[k][i] + 1);</div><div class=\"line\">                dp[i][j] = res;</div><div class=\"line\">                change(ans, res);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","LIS"]},{"title":"HDU 5020 Revenge of Collinearity（n个点三点共线）","url":"http://yoursite.com/2015/09/29/hdu5020/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5020\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5020</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个点，问有多少个三点共线的三元组。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>以每个点为基点进行极角排序，统计三点共线的个数。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 1111;</div><div class=\"line\">int x[N], y[N];</div><div class=\"line\">pair&lt;int, int&gt; v[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t, n, tot;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%d%d&quot;, x + i, y + i);</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            tot = 0;</div><div class=\"line\">            for (int j = 0; j &lt; n; j++) if (i != j) &#123;</div><div class=\"line\">                int dx = x[i] - x[j], dy = y[i] - y[j];</div><div class=\"line\">                int d = __gcd(dx, dy);</div><div class=\"line\">                dx /= d, dy /= d;</div><div class=\"line\">                if (dx != 0 &amp;&amp; dy != 0) &#123;</div><div class=\"line\">                    if (dx &lt; 0) dx *= -1, dy *= -1;</div><div class=\"line\">                &#125; else dx = max(dx, -dx), dy = max(dy, -dy);</div><div class=\"line\">                v[tot++] = make_pair(dx, dy);</div><div class=\"line\">            &#125;</div><div class=\"line\">            sort(v, v + tot);</div><div class=\"line\">            int now = 0;</div><div class=\"line\">            for (int j = 0; j &lt; tot; j++) &#123;</div><div class=\"line\">                if (j == 0 || v[j] != v[j - 1]) now = j;</div><div class=\"line\">                ans += j - now;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans / 3);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["计算几何","三点共线"]},{"title":"HDU 4992 Primitive Roots（求一个数的所有原根）","url":"http://yoursite.com/2015/09/25/hdu4992/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4992\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4992</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个数n，求n的所有原根，按照从小到大输出，如果没有原根输出-1</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>原根的定义：g^d % p = 1 其中d最小为phi(p)，则g便为一个原根</p>\n<ol>\n<li><p>一个数是否有原根<br> 判断数是否有原根：模n有原根的充要条件是n = 1,2,4,p,2p,p^q，其中p是奇质数，q是任意正整数。</p>\n</li>\n<li><p>若有，找其最小原根<br>然后用欧拉公式求出n的m=φ(n)，从2~n-1遍历找出n的最小原根a：判断a^m % n==1 是否成立<br>计算出所有m的因子（1和m除外）y，若a^y % n==1，则a不可能是n的原根。因为存在性质：如果正整数gcd(a,m) = 1，正整数 d 满足a^d≡1(mod m)，则 d 整除 φ(m)。</p>\n</li>\n<li><p>已知一个原根，得到所有原根<br> 得到所有a^x % n {2&lt;=x&lt;m，gcd(x,m)==1}的值为n的原根<br> 证明：<a href=\"http://blog.csdn.net/solotzg/article/details/39205337\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/solotzg/article/details/39205337</a></p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">#define maxn 1000000</div><div class=\"line\">int ans[maxn + 10], valid[maxn + 10], tot = 0;</div><div class=\"line\">void getPrime(int n, int &amp;tot, int ans[]) &#123;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (!valid[i]) ans[tot++] = i;</div><div class=\"line\">        for (int j = 0; j &lt; tot &amp;&amp; i * ans[j] &lt;= n; j++) &#123;</div><div class=\"line\">            valid[i * ans[j]] = 1;</div><div class=\"line\">            if (i % ans[j] == 0) break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">///判断是否有原根</div><div class=\"line\">///判断数是否有原根：模n有原根的充要条件是n = 1,2,4,p,2p,p^q，其中p是奇质数，q是任意正整数。</div><div class=\"line\">bool has_primitive_root(int n) &#123;</div><div class=\"line\">    if (n % 2 == 0) n /= 2;</div><div class=\"line\">    if (n % 2 == 0) return false;</div><div class=\"line\">    for (int i = 1; ans[i] * ans[i] &lt;= n; i++) if (n % ans[i] == 0)&#123;</div><div class=\"line\">        while(n % ans[i] == 0) n /= ans[i];</div><div class=\"line\">        if (n != 1) return false;</div><div class=\"line\">        return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div><div class=\"line\">///得到最小的原根</div><div class=\"line\">ll pow_mod(ll a, ll x, ll p) &#123;</div><div class=\"line\">    ll res = 1;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        if (x &amp; 1) res = res * a % p;</div><div class=\"line\">        x &gt;&gt;= 1;</div><div class=\"line\">        a = a * a % p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">ll euler(ll x) &#123;</div><div class=\"line\">    ll res = x;</div><div class=\"line\">    for (ll i = 0; ans[i] * ans[i] &lt;= x; i++) if (x % ans[i] == 0) &#123;</div><div class=\"line\">        res = res / ans[i] * (ans[i] - 1);</div><div class=\"line\">        while(x % ans[i] == 0) x /= ans[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (x &gt; 1) res = res / x * (x - 1);</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">vector&lt;ll&gt; a;</div><div class=\"line\">bool g_test(ll g, ll p, ll fhi_n) &#123;</div><div class=\"line\">    for (ll i = 0; i &lt; a.size(); i++)</div><div class=\"line\">        if (pow_mod(g, fhi_n / a[i], p) == 1) return 0;</div><div class=\"line\">    return 1;</div><div class=\"line\">&#125;</div><div class=\"line\">ll primitive_root(ll p, ll fhi_n) &#123;</div><div class=\"line\">    a.clear();</div><div class=\"line\">    ll tmp = fhi_n;</div><div class=\"line\">    for (ll i = 0; ans[i] * ans[i] &lt;= tmp; i++) if (tmp % ans[i] == 0) &#123; //这里还可以用筛素数优化</div><div class=\"line\">        a.push_back(ans[i]);</div><div class=\"line\">        while(tmp % ans[i] == 0) tmp /= ans[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (tmp != 1) a.push_back(tmp);</div><div class=\"line\">    ll g = 1;</div><div class=\"line\">    while(true) &#123;</div><div class=\"line\">        if (pow_mod(g, fhi_n, p) != 1) &#123; ///要先判断g^fhi_n % p == 1</div><div class=\"line\">            g++;</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (g_test(g, p, fhi_n)) return g;</div><div class=\"line\">        g++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">///根据最小原根得到所有原根</div><div class=\"line\">vector&lt;int&gt; Getall_primitive_root(int g, int n, int fhi_n) &#123;</div><div class=\"line\">    vector&lt;int&gt; res;</div><div class=\"line\">    res.pb(g);</div><div class=\"line\">    for (int i = 2; i &lt; fhi_n; i++) &#123;</div><div class=\"line\">        if (__gcd(i, fhi_n) != 1) continue;</div><div class=\"line\">        res.pb(pow_mod(g, i, n));</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    getPrime(maxn, tot, ans);</div><div class=\"line\">    int n;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        if (n == 2) &#123;</div><div class=\"line\">            puts(&quot;1&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (n == 4) &#123;</div><div class=\"line\">            puts(&quot;3&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!has_primitive_root(n)) &#123;</div><div class=\"line\">            puts(&quot;-1&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ll fhi_n = euler(n);</div><div class=\"line\">        ll g = primitive_root(n, fhi_n);</div><div class=\"line\">        vector&lt;int&gt; res = Getall_primitive_root(g, n, fhi_n);</div><div class=\"line\">        sort(res.begin(), res.end());</div><div class=\"line\">        for (int i = 0; i &lt; res.size(); i++) &#123;</div><div class=\"line\">            printf(&quot;%d%c&quot;, res[i], i == res.size() - 1 ? &apos;\\n&apos; : &apos; &apos;);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数学","原根"]},{"title":"HDU 4991 Ordered Subsequence（LIS+树状数组）","url":"http://yoursite.com/2015/09/25/hdu4991/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4991\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4991</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个长度为N的序列，问所有长度为M的上升子序列的个数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>另dp[i][j]表示以a[i]为结尾，长度为j的上升子序列的个数，有如下转移方程<br>dp[i][j] = sum(dp[k][j - 1]) 其中k小于i，且a[k]&lt;a[i]<br>朴素的转移是n2<em>m，可以通过树状数组来维护和，复杂度降到n</em>m*log(n)</p>\n<p>取模真心慢。。2s左右的代码，把取模改成减直接300+ms就过了<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 10005;</div><div class=\"line\">int n, m, a[N], b[N];</div><div class=\"line\">int s[105][N];</div><div class=\"line\">int mod = 123456789;</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; (-x);</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int x, int v, int id) &#123;</div><div class=\"line\">    while(x &lt;= n) &#123;</div><div class=\"line\">        s[id][x] += v;</div><div class=\"line\">        if (s[id][x] &gt;= mod) s[id][x] -= mod;</div><div class=\"line\">        x += lowbit(x);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll sum(int x, int id) &#123;</div><div class=\"line\">    ll res = 0;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        res += s[id][x];</div><div class=\"line\">        if (res &gt;= mod) res -= mod;</div><div class=\"line\">        x -= lowbit(x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, a + i), b[i] = a[i];</div><div class=\"line\">        sort(b, b + n);</div><div class=\"line\">        int t = unique(b, b + n) - b;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++)</div><div class=\"line\">            for (int j = 0; j &lt;= m; j++) s[j][i] = 0;</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            int pos = lower_bound(b, b + t, a[i]) - b + 1;</div><div class=\"line\">            add(pos, 1, 1);</div><div class=\"line\">            for (int j = 2; j &lt;= m; j++) &#123;</div><div class=\"line\">                ll tmp = sum(pos - 1, j - 1);</div><div class=\"line\">                if (!tmp) break;</div><div class=\"line\">                add(pos, tmp, j);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans = sum(t, m);</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","树状数组","LIS"]},{"title":"HDU 4990 Reading comprehension（分奇偶讨论+矩阵快速幂）","url":"http://yoursite.com/2015/09/25/hdu4990/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4990\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4990</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n，按照以下程序算出ans。（n为int）<br>    ans=0;<br>    for(i=1;i&lt;=n;i++)<br>    {<br>      if(i&amp;1)ans=(ans<em>2+1)%m;<br>      else ans=ans</em>2%m;<br>    }<br>    printf(“%d\\n”,ans);</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>分奇偶讨论<br>当n为奇数时：fn=4<em>fn-1 + 1，首项为1<br>当n为偶数时：fn=4</em>fn-1 + 2，首项为2<br>之后就矩阵快速幂加速运算即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int maxn = 2;</div><div class=\"line\">const int maxm = 2;</div><div class=\"line\">ll mod;</div><div class=\"line\">struct Matrix &#123;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    ll a[maxn][maxm];</div><div class=\"line\">    void clear() &#123;</div><div class=\"line\">        n = m = 0;</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">    &#125;</div><div class=\"line\">    Matrix operator * (const Matrix &amp;b) const &#123; //实现矩阵乘法</div><div class=\"line\">        Matrix tmp;</div><div class=\"line\">        tmp.n = n;</div><div class=\"line\">        tmp.m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; b.m; j++) tmp.a[i][j] = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">                if (!a[i][j]) continue;</div><div class=\"line\">                for (int k = 0; k &lt; b.m; k++)</div><div class=\"line\">                    tmp.a[i][k] += a[i][j] * b.a[j][k], tmp.a[i][k] %= mod;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        return tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void Copy(const Matrix &amp;b) &#123;</div><div class=\"line\">        n = b.n, m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for(int j = 0; j &lt; m; j++) a[i][j] = b.a[i][j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    void unit(int sz) &#123;</div><div class=\"line\">        n = m = sz;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; n; j++) a[i][j] = 0;</div><div class=\"line\">            a[i][i] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Matrix A, B;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    A.n = A.m = 2;</div><div class=\"line\">    A.a[0][0] = 4;</div><div class=\"line\">    A.a[0][1] = 1;</div><div class=\"line\">    A.a[1][0] = 0;</div><div class=\"line\">    A.a[1][1] = 1;</div><div class=\"line\">&#125;</div><div class=\"line\">Matrix Matrix_pow(Matrix A, ll k, ll mod) &#123; //矩阵快速幂</div><div class=\"line\">    Matrix res;</div><div class=\"line\">    res.clear();</div><div class=\"line\">    res.n = res.m = 2;</div><div class=\"line\">    for (int i = 0; i &lt; 2; i++) res.a[i][i] = 1;</div><div class=\"line\">    while(k) &#123;</div><div class=\"line\">        if (k &amp; 1) res.Copy(A * res);</div><div class=\"line\">        k &gt;&gt;= 1;</div><div class=\"line\">        A.Copy(A * A);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    init();</div><div class=\"line\">    int n, m;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        mod = m;</div><div class=\"line\">        Matrix ans = Matrix_pow(A, n / 2, mod);</div><div class=\"line\">        ll res;</div><div class=\"line\">        if (n &amp; 1) res = ans.a[0][0] * 1 + ans.a[0][1] * 1;</div><div class=\"line\">        else res = ans.a[0][1] * 2;</div><div class=\"line\">        res = (res + mod) % mod;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, res);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数学","矩阵"]},{"title":"POJ 3481 Double Queue（SBT平衡二叉树）","url":"http://yoursite.com/2015/09/24/poj3481/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://poj.org/problem?id=3481\" target=\"_blank\" rel=\"external\">http://poj.org/problem?id=3481</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个队伍，一开始为空，有四种操作<br>0表示结束<br>1 K P 有一个编号为K的，优先级为P的人加入队伍（队伍中没有相同的K与P）<br>2 优先级最高的人出队<br>3 优先级最低的人出队</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/acm_cxlove/article/details/7790305\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/acm_cxlove/article/details/7790305</a></p>\n<p>平衡二叉树，能够得到第K大的数，也能够求出一个数的rank。<br>这里是找最大值与最小值</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#define N 1000005</div><div class=\"line\">using namespace std;</div><div class=\"line\">struct SBT &#123;</div><div class=\"line\">    //左子树指针，右子树指针，大小，键值</div><div class=\"line\">    int left, right, size, key, value;</div><div class=\"line\">    void Init() &#123;</div><div class=\"line\">        left = right = key = value = 0;</div><div class=\"line\">        size = 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125; T[N];</div><div class=\"line\">int root, tot; //根的位置以及节点个数</div><div class=\"line\">//左旋转处理</div><div class=\"line\">void Left_rot(int &amp;x) &#123;</div><div class=\"line\">    int k = T[x].right;</div><div class=\"line\">    T[x].right = T[k].left;</div><div class=\"line\">    T[k].left = x;</div><div class=\"line\">    T[k].size = T[x].size;</div><div class=\"line\">    T[x].size = T[T[x].left].size + T[T[x].right].size + 1;</div><div class=\"line\">    x = k;</div><div class=\"line\">&#125;</div><div class=\"line\">//右旋转处理</div><div class=\"line\">void Right_rot(int &amp;x) &#123;</div><div class=\"line\">    int k = T[x].left;</div><div class=\"line\">    T[x].left = T[k].right;</div><div class=\"line\">    T[k].right = x;</div><div class=\"line\">    T[k].size = T[x].size;</div><div class=\"line\">    T[x].size = T[T[x].left].size + T[T[x].right].size + 1;</div><div class=\"line\">    x = k;</div><div class=\"line\">&#125;</div><div class=\"line\">//调整处理</div><div class=\"line\">void Maintain(int &amp;r, bool flag) &#123;</div><div class=\"line\">    if(flag) &#123; //更新右子树</div><div class=\"line\">        if(T[T[T[r].right].right].size &gt; T[T[r].left].size)</div><div class=\"line\">            Left_rot(r);</div><div class=\"line\">        else if(T[T[T[r].right].left].size &gt; T[T[r].left].size) &#123;</div><div class=\"line\">            Right_rot(T[r].right);</div><div class=\"line\">            Left_rot(r);</div><div class=\"line\">        &#125; else</div><div class=\"line\">            return;</div><div class=\"line\">    &#125; else &#123; //更新在左子树</div><div class=\"line\">        if(T[T[T[r].left].left].size &gt; T[T[r].right].size)</div><div class=\"line\">            Right_rot(r);</div><div class=\"line\">        else if(T[T[T[r].left].right].size &gt; T[T[r].right].size) &#123;</div><div class=\"line\">            Left_rot(T[r].left);</div><div class=\"line\">            Right_rot(r);</div><div class=\"line\">        &#125; else</div><div class=\"line\">            return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //更新子树，然后再更新根，直到平衡为止</div><div class=\"line\">    Maintain(T[r].left, false);</div><div class=\"line\">    Maintain(T[r].right, true);</div><div class=\"line\">    Maintain(r, false);</div><div class=\"line\">    Maintain(r, true);</div><div class=\"line\">&#125;</div><div class=\"line\">//插入新节点</div><div class=\"line\">void Insert(int &amp;r, int k, int v) &#123;</div><div class=\"line\">    if(r == 0) &#123;</div><div class=\"line\">        r = ++tot;</div><div class=\"line\">        T[r].Init();</div><div class=\"line\">        T[r].key = k;</div><div class=\"line\">        T[r].value = v;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        T[r].size++;</div><div class=\"line\">        if(k &lt; T[r].key)</div><div class=\"line\">            Insert(T[r].left, k, v);</div><div class=\"line\">        else</div><div class=\"line\">            Insert(T[r].right, k, v);</div><div class=\"line\">        //插入后要调整，保证平衡</div><div class=\"line\">        Maintain(r, k &gt;= T[r].key);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">//删除结点，利用的是前驱替换</div><div class=\"line\">int Remove(int &amp;r, int k) &#123;</div><div class=\"line\">    int d_key;</div><div class=\"line\">    if(!r)</div><div class=\"line\">        return 0;</div><div class=\"line\">    T[r].size--;</div><div class=\"line\">    //前者说明就是要删的节点，后两者说明不存在此节点</div><div class=\"line\">    if(T[r].key == k || (T[r].left == 0 &amp;&amp; k &lt; T[r].key) || (T[r].right == 0 &amp;&amp; k &gt; T[r].key)) &#123;</div><div class=\"line\">        d_key = T[r].key;</div><div class=\"line\">        if(T[r].left &amp;&amp; T[r].right)</div><div class=\"line\">            T[r].key = Remove(T[r].left, k + 1);</div><div class=\"line\">        else</div><div class=\"line\">            r = T[r].left + T[r].right;</div><div class=\"line\">    &#125; else Remove(k &lt; T[r].key ? T[r].left : T[r].right, k);</div><div class=\"line\">&#125;</div><div class=\"line\">//取得最大值，即一直遍历到最右的结点</div><div class=\"line\">int Get_Max(int r) &#123;</div><div class=\"line\">    while(T[r].right)</div><div class=\"line\">        r = T[r].right;</div><div class=\"line\">    return r;</div><div class=\"line\">&#125;</div><div class=\"line\">//取得最小值，即一直遍历到最左的结点</div><div class=\"line\">int Get_Min(int r) &#123;</div><div class=\"line\">    while(T[r].left)</div><div class=\"line\">        r = T[r].left;</div><div class=\"line\">    return r;</div><div class=\"line\">&#125;</div><div class=\"line\">//获得前驱</div><div class=\"line\">int Get_Pre(int &amp;r, int y, int k) &#123;</div><div class=\"line\">    if(r == 0) return y;</div><div class=\"line\">    if(k &gt; T[r].key)</div><div class=\"line\">        Get_Pre(T[r].right, r, k);</div><div class=\"line\">    else</div><div class=\"line\">        Get_Pre(T[r].left, y, k);</div><div class=\"line\">&#125;</div><div class=\"line\">//获得后继</div><div class=\"line\">int Get_Next(int &amp;r, int y, int k) &#123;</div><div class=\"line\">    if(r == 0) return y;</div><div class=\"line\">    if(k &lt; T[r].key)</div><div class=\"line\">        Get_Next(T[r].left, r, k);</div><div class=\"line\">    else</div><div class=\"line\">        Get_Next(T[r].right, y, k);</div><div class=\"line\">&#125;</div><div class=\"line\">//取得第K小的数，注：暂不能解决有重复数的</div><div class=\"line\">int Get_Kth(int &amp;r, int k) &#123;</div><div class=\"line\">    int t = T[T[r].left].size + 1;</div><div class=\"line\">    if(t == k) return T[r].key;</div><div class=\"line\">    if(t &lt; k)  return Get_Kth(T[r].right, k - r);</div><div class=\"line\">    else return Get_Kth(T[r].left, k);</div><div class=\"line\">&#125;</div><div class=\"line\">//获得结点的名次</div><div class=\"line\">int Get_Rank(int &amp;r, int k) &#123;</div><div class=\"line\">    if(k &lt; T[r].key)</div><div class=\"line\">        return Get_Rank(T[r].left, k);</div><div class=\"line\">    else if(k &gt; T[r].key)</div><div class=\"line\">        return Get_Rank(T[r].right, k) + T[T[r].left].size + 1;</div><div class=\"line\">    else</div><div class=\"line\">        return T[T[r].left].size + 1;</div><div class=\"line\">&#125;</div><div class=\"line\">//排序</div><div class=\"line\">void Inorder(int &amp;r) &#123;</div><div class=\"line\">    if(r == 0) return;</div><div class=\"line\">    Inorder(T[r].left);</div><div class=\"line\">    printf(&quot;%d\\n&quot;, T[r].key);</div><div class=\"line\">    Inorder(T[r].right);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    root = tot = 0;</div><div class=\"line\">    int x, k, p;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;x)) &#123;</div><div class=\"line\">        if (!x) break;</div><div class=\"line\">        if (x == 1) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;k, &amp;p);</div><div class=\"line\">            Insert(root, p, k);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (x == 2) &#123;</div><div class=\"line\">            int tmp = Get_Max(root);</div><div class=\"line\">            printf(&quot;%d\\n&quot;, T[tmp].value);</div><div class=\"line\">            if (T[tmp].value) Remove(root, T[tmp].key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (x == 3) &#123;</div><div class=\"line\">            int tmp = Get_Min(root);</div><div class=\"line\">            printf(&quot;%d\\n&quot;, T[tmp].value);</div><div class=\"line\">            if (T[tmp].value) Remove(root, T[tmp].key);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["SBT"]},{"title":"HDU 4988 Little Pony and Boast Busters（动态逆序对 树状数组+treap）","url":"http://yoursite.com/2015/09/24/hdu4988/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4988\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4988</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定上下两个排列 A[], B[]，要求询问相同项之间两两连线的交叉数，并支持交换操作</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>题解： <a href=\"http://www.shuizilong.com/house/archives/bestcoder-round-7-solution/\" target=\"_blank\" rel=\"external\">http://www.shuizilong.com/house/archives/bestcoder-round-7-solution/</a><br>静态问题就是求排列 P[] 的逆序对<br>其中 P[i] = pA[B[i]]（这里 pA[] 是 A[] 中某个元素的位置 类似的 pB[] 是 B[] 中某个元素的位置）<br>考察交换操作，无论是交换下排还是上排，都可以看成交换 P[] 中的两项<br>于是转化成动态逆序对问题，支持修改排列中的任意一项。<br>动态逆序对问题等价于区间 kth 大值（区间 Rank）问题。。可以用经典的树套树方法<br>复杂度 O(nlog2n)。</p>\n<p><a href=\"http://blog.csdn.net/u013654696/article/details/38964519\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u013654696/article/details/38964519</a><br><a href=\"http://blog.csdn.net/cq_phqg/article/details/39070857\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/cq_phqg/article/details/39070857</a></p>\n<p>这里其实就是每一个树状数组的结点都是一颗SBT。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;functional&gt;</div><div class=\"line\">#include &lt;algorithm&gt;</div><div class=\"line\">#include &lt;iostream&gt;</div><div class=\"line\">#include &lt;fstream&gt;</div><div class=\"line\">#include &lt;sstream&gt;</div><div class=\"line\">#include &lt;iomanip&gt;</div><div class=\"line\">#include &lt;numeric&gt;</div><div class=\"line\">#include &lt;cstring&gt;</div><div class=\"line\">#include &lt;climits&gt;</div><div class=\"line\">#include &lt;cassert&gt;</div><div class=\"line\">#include &lt;complex&gt;</div><div class=\"line\">#include &lt;cstdio&gt;</div><div class=\"line\">#include &lt;string&gt;</div><div class=\"line\">#include &lt;vector&gt;</div><div class=\"line\">#include &lt;bitset&gt;</div><div class=\"line\">#include &lt;queue&gt;</div><div class=\"line\">#include &lt;stack&gt;</div><div class=\"line\">#include &lt;cmath&gt;</div><div class=\"line\">#include &lt;ctime&gt;</div><div class=\"line\">#include &lt;list&gt;</div><div class=\"line\">#include &lt;set&gt;</div><div class=\"line\">#include &lt;map&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long LL;</div><div class=\"line\">const int N = 100005;</div><div class=\"line\">struct SBT&#123;</div><div class=\"line\">    //左子树指针，右子树指针，大小，键值</div><div class=\"line\">    int left,right,size,key;</div><div class=\"line\">    inline void Init()&#123;</div><div class=\"line\">        left=right=key=0;</div><div class=\"line\">        size=1;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;T[N * 50];</div><div class=\"line\">int tot; //根的位置以及节点个数</div><div class=\"line\">//左旋转处理</div><div class=\"line\">inline void Left_rot(int &amp;x)&#123;</div><div class=\"line\">    int k=T[x].right;</div><div class=\"line\">    T[x].right=T[k].left;</div><div class=\"line\">    T[k].left=x;</div><div class=\"line\">    T[k].size=T[x].size;</div><div class=\"line\">    T[x].size=T[T[x].left].size+T[T[x].right].size+1;</div><div class=\"line\">    x=k;</div><div class=\"line\">&#125;</div><div class=\"line\">//右旋转处理</div><div class=\"line\">inline void Right_rot(int &amp;x)&#123;</div><div class=\"line\">    int k=T[x].left;</div><div class=\"line\">    T[x].left=T[k].right;</div><div class=\"line\">    T[k].right=x;</div><div class=\"line\">    T[k].size=T[x].size;</div><div class=\"line\">    T[x].size=T[T[x].left].size+T[T[x].right].size+1;</div><div class=\"line\">    x=k;</div><div class=\"line\">&#125;</div><div class=\"line\">//调整处理</div><div class=\"line\">void Maintain(int &amp;r,bool flag)&#123;</div><div class=\"line\">    if(flag)&#123;  //更新右子树</div><div class=\"line\">        if(T[T[T[r].right].right].size&gt;T[T[r].left].size)</div><div class=\"line\">            Left_rot(r);</div><div class=\"line\">        else if(T[T[T[r].right].left].size&gt;T[T[r].left].size)&#123;</div><div class=\"line\">            Right_rot(T[r].right);</div><div class=\"line\">            Left_rot(r);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">            return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else&#123;   //更新在左子树</div><div class=\"line\">        if(T[T[T[r].left].left].size&gt;T[T[r].right].size)</div><div class=\"line\">            Right_rot(r);</div><div class=\"line\">        else if(T[T[T[r].left].right].size&gt;T[T[r].right].size)&#123;</div><div class=\"line\">            Left_rot(T[r].left);</div><div class=\"line\">            Right_rot(r);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">            return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //更新子树，然后再更新根，直到平衡为止</div><div class=\"line\">    Maintain(T[r].left,false);</div><div class=\"line\">    Maintain(T[r].right,true);</div><div class=\"line\">    Maintain(r,false);</div><div class=\"line\">    Maintain(r,true);</div><div class=\"line\">&#125;</div><div class=\"line\">//插入新节点</div><div class=\"line\">void Insert(int &amp;r,int k)&#123;</div><div class=\"line\">    if(r==0)&#123;</div><div class=\"line\">        r=++tot;</div><div class=\"line\">        T[r].Init();</div><div class=\"line\">        T[r].key=k;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else&#123;</div><div class=\"line\">        T[r].size++;</div><div class=\"line\">        if(k&lt;=T[r].key)</div><div class=\"line\">            Insert(T[r].left,k);</div><div class=\"line\">        else</div><div class=\"line\">            Insert(T[r].right,k);</div><div class=\"line\">        //插入后要调整，保证平衡</div><div class=\"line\">        Maintain(r,k&gt;=T[r].key);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">//删除结点，利用的是前驱替换</div><div class=\"line\">int d_key;</div><div class=\"line\">void Remove(int &amp;r,int k)&#123;</div><div class=\"line\">    if(!r)</div><div class=\"line\">        return ;</div><div class=\"line\">    T[r].size--;</div><div class=\"line\">    //前者说明就是要删的节点，后两者说明不存在此节点</div><div class=\"line\">    if(T[r].key==k||(T[r].left==0&amp;&amp;k&lt;T[r].key)||(T[r].right==0&amp;&amp;k&gt;T[r].key))&#123;</div><div class=\"line\">        if(T[r].left&amp;&amp;T[r].right) &#123;</div><div class=\"line\">            Remove(T[r].left,k+1);</div><div class=\"line\">            T[r].key = d_key;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            d_key = T[r].key;</div><div class=\"line\">            r=T[r].left+T[r].right;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else Remove(k&lt;=T[r].key?T[r].left:T[r].right,k);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//取得最大值，即一直遍历到最右的结点</div><div class=\"line\">int Get_Max(int r)&#123;</div><div class=\"line\">    while(T[r].right)</div><div class=\"line\">        r=T[r].right;</div><div class=\"line\">    return r;</div><div class=\"line\">&#125;</div><div class=\"line\">//取得最小值，即一直遍历到最左的结点</div><div class=\"line\">int Get_Min(int r)&#123;</div><div class=\"line\">    while(T[r].left)</div><div class=\"line\">        r=T[r].left;</div><div class=\"line\">    return r;</div><div class=\"line\">&#125;</div><div class=\"line\">//获得前驱</div><div class=\"line\">int Get_Pre(int &amp;r,int y,int k)&#123;</div><div class=\"line\">    if(r==0) return y;</div><div class=\"line\">    if(k&gt;T[r].key)</div><div class=\"line\">        Get_Pre(T[r].right,r,k);</div><div class=\"line\">    else</div><div class=\"line\">        Get_Pre(T[r].left,y,k);</div><div class=\"line\">&#125;</div><div class=\"line\">//获得后继</div><div class=\"line\">int Get_Next(int &amp;r,int y,int k)&#123;</div><div class=\"line\">    if(r==0) return y;</div><div class=\"line\">    if(k&lt;T[r].key)</div><div class=\"line\">        Get_Next(T[r].left,r,k);</div><div class=\"line\">    else</div><div class=\"line\">        Get_Next(T[r].right,y,k);</div><div class=\"line\">&#125;</div><div class=\"line\">//取得第K小的数，注：暂不能解决有重复数的</div><div class=\"line\">int Get_Kth(int &amp;r,int k)&#123;</div><div class=\"line\">    int t=T[T[r].left].size+1;</div><div class=\"line\">    if(t==k) return T[r].key;</div><div class=\"line\">    if(t&lt;k)  return Get_Kth(T[r].right,k-r);</div><div class=\"line\">    else return Get_Kth(T[r].left,k);</div><div class=\"line\">&#125;</div><div class=\"line\">//获得结点的名次</div><div class=\"line\">int Get_Rank(int r,int k)&#123;</div><div class=\"line\">    int ans = 0;</div><div class=\"line\">    while (r) &#123;</div><div class=\"line\">        if (T[r].key &lt; k) &#123;</div><div class=\"line\">            ans += T[T[r].left].size + 1;</div><div class=\"line\">            r = T[r].right;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else r = T[r].left;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">//排序</div><div class=\"line\">void Inorder(int &amp;r)&#123;</div><div class=\"line\">    if(r==0) return;</div><div class=\"line\">    Inorder(T[r].left);</div><div class=\"line\">    printf(&quot;%d\\n&quot;,T[r].key);</div><div class=\"line\">    Inorder(T[r].right);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int n, pa[N], pb[N], root[N], a[N], b[N], p[N];</div><div class=\"line\">LL ans;</div><div class=\"line\">inline int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; (-x);</div><div class=\"line\">&#125;</div><div class=\"line\">inline int Rank(int x, int v) &#123;</div><div class=\"line\">    int ret = 0;</div><div class=\"line\">    for (int i = x; i; i -= lowbit(i))</div><div class=\"line\">        ret += Get_Rank(root[i], v);</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">inline void Add(int x, int v) &#123;</div><div class=\"line\">    for (int i = x; i &lt;= n; i += lowbit(i))</div><div class=\"line\">        Insert(root[i], v);</div><div class=\"line\">&#125;</div><div class=\"line\">inline void Del(int x, int v) &#123;</div><div class=\"line\">    for (int i = x; i &lt;= n; i += lowbit(i))</div><div class=\"line\">        Remove(root[i], v);</div><div class=\"line\">&#125;</div><div class=\"line\">inline void init() &#123;</div><div class=\"line\">    tot = 0; ans = 0;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        root[i] = 0;</div><div class=\"line\">        pa[a[i]] = i;</div><div class=\"line\">        pb[b[i]] = i;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        int num = pa[b[i]];</div><div class=\"line\">        ans += Rank(i, num);</div><div class=\"line\">        Add(i, num); p[i] = num;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">inline void update (int x , int v) &#123;</div><div class=\"line\">    // postion x , from p[x] to v</div><div class=\"line\">    int pre = p[x];</div><div class=\"line\">    Del (x , pre);</div><div class=\"line\">    ans = ans - (Rank (x - 1 , pre) + (n - x - (Rank (n , pre + 1) - Rank (x , pre + 1))));</div><div class=\"line\">    p[x] = v;</div><div class=\"line\">    ans = ans + (Rank (x - 1 , v) + (n - x - (Rank (n , v + 1) - Rank (x , v + 1))));</div><div class=\"line\">    Add (x , v);</div><div class=\"line\">&#125;</div><div class=\"line\">inline void update (int k , int A , int B) &#123;</div><div class=\"line\">    if (k == 0) &#123;</div><div class=\"line\">        swap (a[A] , a[B]);</div><div class=\"line\">        pa[a[A]] = A;pa[a[B]] = B;</div><div class=\"line\">        update (pb[a[A]] , A);</div><div class=\"line\">        update (pb[a[B]] , B);</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        swap (b[A] , b[B]);</div><div class=\"line\">        pb[b[A]] = A;pb[b[B]] = B;</div><div class=\"line\">        update (A , pa[b[A]]);</div><div class=\"line\">        update (B , pa[b[B]]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, a + i), a[i]++;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, b + i), b[i]++;</div><div class=\"line\">        init();</div><div class=\"line\">        int q, k, A, B;</div><div class=\"line\">        char op[10];</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;q);</div><div class=\"line\">        LL ret = (LL)n * (n - 1) / 2;</div><div class=\"line\">        while(q--) &#123;</div><div class=\"line\">            scanf(&quot;%s&quot;, op);</div><div class=\"line\">            if (op[0] == &apos;Q&apos;) printf(&quot;%I64d\\n&quot;, ret - ans);</div><div class=\"line\">            else &#123;</div><div class=\"line\">                scanf(&quot;%d%d%d&quot;, &amp;k, &amp;A, &amp;B);</div><div class=\"line\">                A++, B++;</div><div class=\"line\">                update(k, A, B);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["动态逆序对","树状数组+treap"]},{"title":"HDU 5451 Best Solver（数学+广义Fibonacci循环节+矩阵快速幂）","url":"http://yoursite.com/2015/09/21/hdu5451/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5451\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5451</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>计算（5+2sqrt(6))^(1+2^x) 向下取整 mod m 其中x为int范围，m为质数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/crazy______/article/details/9021169\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/crazy______/article/details/9021169</a><br><a href=\"http://blog.csdn.net/ACdreamers/article/details/25616461\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/ACdreamers/article/details/25616461</a></p>\n<p>另 fn = (a+sqrt(b))^n + (a-sqrt(b))^n<br>化简得到fn+1 = 2a*fn - fn-1<br>其中0&lt;(a-sqrt(b))^n&lt;1 所以可以用矩阵快速幂来求。<br>但是x很大, 所以要用到循环节。即求广义Fibonacci数列循环节。这里直接用(p+1)(p-1)来做循环节</p>\n<p>官方题解里提到(p^2-p)(p^2-1)是一个通用循环节</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int maxn = 2;</div><div class=\"line\">const int maxm = 2;</div><div class=\"line\">ll mod;</div><div class=\"line\">struct Matrix &#123;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    ll a[maxn][maxm];</div><div class=\"line\">    void clear() &#123;</div><div class=\"line\">        n = m = 0;</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">    &#125;</div><div class=\"line\">    Matrix operator * (const Matrix &amp;b) const &#123; //实现矩阵乘法</div><div class=\"line\">        Matrix tmp;</div><div class=\"line\">        tmp.n = n;</div><div class=\"line\">        tmp.m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; b.m; j++) tmp.a[i][j] = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">                if (!a[i][j]) continue;</div><div class=\"line\">                for (int k = 0; k &lt; b.m; k++)</div><div class=\"line\">                    tmp.a[i][k] += a[i][j] * b.a[j][k], tmp.a[i][k] %= mod;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        return tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void Copy(const Matrix &amp;b) &#123;</div><div class=\"line\">        n = b.n, m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for(int j = 0; j &lt; m; j++) a[i][j] = b.a[i][j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    void unit(int sz) &#123;</div><div class=\"line\">        n = m = sz;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; n; j++) a[i][j] = 0;</div><div class=\"line\">            a[i][i] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Matrix A, B;</div><div class=\"line\">Matrix Matrix_pow(Matrix A, ll k, ll mod) &#123; //矩阵快速幂</div><div class=\"line\">    Matrix res;</div><div class=\"line\">    res.clear();</div><div class=\"line\">    res.n = res.m = 2;</div><div class=\"line\">    for (int i = 0; i &lt; 2; i++) res.a[i][i] = 1;</div><div class=\"line\">    while(k) &#123;</div><div class=\"line\">        if (k &amp; 1) res.Copy(A * res);</div><div class=\"line\">        k &gt;&gt;= 1;</div><div class=\"line\">        A.Copy(A * A);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">ll pow_mod(ll a, ll n, ll p) &#123;</div><div class=\"line\">    ll res = 1;</div><div class=\"line\">    while (n) &#123;</div><div class=\"line\">        if (n &amp; 1) res = res * a % p;</div><div class=\"line\">        n &gt;&gt;= 1;</div><div class=\"line\">        a = a * a % p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int x, m;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    A.a[0][0] = 10;</div><div class=\"line\">    A.a[0][1] = -1;</div><div class=\"line\">    A.a[1][0] = 1;</div><div class=\"line\">    A.a[1][1] = 0;</div><div class=\"line\">    A.n = A.m = 2;</div><div class=\"line\">&#125;</div><div class=\"line\">int work() &#123;</div><div class=\"line\">    mod = m * m - 1;</div><div class=\"line\">    ll k = pow_mod(2, x, mod);</div><div class=\"line\">    mod = m;</div><div class=\"line\">    Matrix ans = Matrix_pow(A, k, mod);</div><div class=\"line\">    ll res = (ans.a[0][0] * 10 + ans.a[0][1] * 2) % mod;</div><div class=\"line\">    res = (res - 1 + mod) % mod;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    init();</div><div class=\"line\">    int t, cas = 1;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;x, &amp;m);</div><div class=\"line\">        printf(&quot;Case #%d: %d\\n&quot;, cas++, work());</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["广义Fibonacci数列找循环节","数学"]},{"title":"Acdream 1075 神奇的%系列三（广义Fibonacci数列找循环节）","url":"http://yoursite.com/2015/09/21/ACdream1075/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acdream.info/problem?pid=1075\" target=\"_blank\" rel=\"external\">http://acdream.info/problem?pid=1075</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>我们定义一个f(n)函数，f(n) = a <em> f(n - 1) + b </em> f(n - 2), f(1) = c, f(2) = d.<br>问f(n)在模1000000007情况下的最小循环节。即求最小的m，使对任意的n有f(n) % 1000000007 = f(n + m) % 1000000007.</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/ACdreamers/article/details/25616461\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/ACdreamers/article/details/25616461</a></p>\n<p>c=a<em>a+4</em>b<br>c是模p的二次剩余时，枚举n=p-1的因子<br>c是模的二次非剩余时，枚举的n=(p+1)(p-1)因子</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int maxn = 2;</div><div class=\"line\">const int maxm = 2;</div><div class=\"line\">const ll mod = 1000000007;</div><div class=\"line\">struct Matrix &#123;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    ll a[maxn][maxm];</div><div class=\"line\">    void clear() &#123;</div><div class=\"line\">        n = m = 0;</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">    &#125;</div><div class=\"line\">    Matrix operator * (const Matrix &amp;b) const &#123; //实现矩阵乘法</div><div class=\"line\">        Matrix tmp;</div><div class=\"line\">        tmp.n = n;</div><div class=\"line\">        tmp.m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; b.m; j++) tmp.a[i][j] = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">                if (!a[i][j]) continue;</div><div class=\"line\">                for (int k = 0; k &lt; b.m; k++)</div><div class=\"line\">                    tmp.a[i][k] += a[i][j] * b.a[j][k], tmp.a[i][k] %= mod;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        return tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void Copy(const Matrix &amp;b) &#123;</div><div class=\"line\">        n = b.n, m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for(int j = 0; j &lt; m; j++) a[i][j] = b.a[i][j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    void unit(int sz) &#123;</div><div class=\"line\">        n = m = sz;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; n; j++) a[i][j] = 0;</div><div class=\"line\">            a[i][i] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Matrix A, B;</div><div class=\"line\">Matrix Matrix_pow(Matrix A, ll k, ll mod) &#123; //矩阵快速幂</div><div class=\"line\">    Matrix res;</div><div class=\"line\">    res.clear();</div><div class=\"line\">    res.n = res.m = 2;</div><div class=\"line\">    for (int i = 0; i &lt; 2; i++) res.a[i][i] = 1;</div><div class=\"line\">    while(k) &#123;</div><div class=\"line\">        if (k &amp; 1) res.Copy(A * res);</div><div class=\"line\">        k &gt;&gt;= 1;</div><div class=\"line\">        A.Copy(A * A);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ll pow_mod(ll a, ll n, ll p) &#123;</div><div class=\"line\">    ll res = 1;</div><div class=\"line\">    while (n) &#123;</div><div class=\"line\">        if (n &amp; 1) res = res * a % p;</div><div class=\"line\">        n &gt;&gt;= 1;</div><div class=\"line\">        a = a * a % p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">ll legendre(ll a, ll p) &#123;</div><div class=\"line\">    return pow_mod(a, (p - 1) &gt;&gt; 1, p);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ll fac[2][500];</div><div class=\"line\">int cnt, ct;</div><div class=\"line\">ll pri[6] = &#123;2, 3, 7, 109, 167, 500000003&#125;;</div><div class=\"line\">ll num[6] = &#123;4, 2, 1, 2, 1, 1&#125;;</div><div class=\"line\">void dfs(int dep, ll pro) &#123;</div><div class=\"line\">    if (dep == cnt) &#123;</div><div class=\"line\">        fac[1][ct++] = pro;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int i = 0; i &lt;= num[dep]; i++) &#123;</div><div class=\"line\">        dfs(dep + 1, pro);</div><div class=\"line\">        pro *= pri[dep];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    cnt = 6;</div><div class=\"line\">    ct = 0;</div><div class=\"line\">    dfs(0, 1);</div><div class=\"line\">    sort(fac[1], fac[1] + ct);</div><div class=\"line\">    fac[0][0] = 1;</div><div class=\"line\">    fac[0][1] = 2;</div><div class=\"line\">    fac[0][2] = 500000003;</div><div class=\"line\">    fac[0][3] = 1000000006;</div><div class=\"line\">&#125;</div><div class=\"line\">bool check(Matrix A, ll n) &#123;</div><div class=\"line\">    Matrix ans = Matrix_pow(A, n, mod);</div><div class=\"line\">    return (ans.a[0][0] == 1 &amp;&amp; ans.a[0][1] == 0 &amp;&amp; ans.a[1][0] == 0 &amp;&amp; ans.a[1][1] == 1);</div><div class=\"line\">&#125;</div><div class=\"line\">ll a, b, c, d;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    init();</div><div class=\"line\">    while(~scanf(&quot;%lld%lld%lld%lld&quot;, &amp;a, &amp;b, &amp;c, &amp;d)) &#123;</div><div class=\"line\">        ll t = a * a + 4 * b;</div><div class=\"line\">        A.n = A.m = 2;</div><div class=\"line\">        A.a[0][0] = a;</div><div class=\"line\">        A.a[0][1] = b;</div><div class=\"line\">        A.a[1][0] = 1;</div><div class=\"line\">        A.a[1][1] = 0;</div><div class=\"line\">        if (legendre(t, mod) == 1) &#123;</div><div class=\"line\">            for (int i = 0; i &lt; 4; i++) &#123;</div><div class=\"line\">                if (check(A, fac[0][i])) &#123;</div><div class=\"line\">                    printf(&quot;%lld\\n&quot;, fac[0][i]);</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            for (int i = 0; i &lt; ct; i++) &#123;</div><div class=\"line\">                if (check(A, fac[1][i])) &#123;</div><div class=\"line\">                    printf(&quot;%lld\\n&quot;, fac[1][i]);</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["广义Fibonacci数列找循环节","数学"]},{"title":"HDU 4565 So Easy!（矩阵, 数学）","url":"http://yoursite.com/2015/09/20/hdu4565/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4565\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4565</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>s=ceil( (a+sqrt(b))^n ) % m</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/crazy______/article/details/9021169\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/crazy______/article/details/9021169</a></p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int maxn = 2;</div><div class=\"line\">const int maxm = 2;</div><div class=\"line\">int mod;</div><div class=\"line\">struct Matrix &#123;</div><div class=\"line\">    int n, m;</div><div class=\"line\">    int a[maxn][maxm];</div><div class=\"line\">    void clear() &#123;</div><div class=\"line\">        n = m = 0;</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">    &#125;</div><div class=\"line\">    Matrix operator * (const Matrix &amp;b) const &#123; //实现矩阵乘法</div><div class=\"line\">        Matrix tmp;</div><div class=\"line\">        tmp.n = n;</div><div class=\"line\">        tmp.m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; b.m; j++) tmp.a[i][j] = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">                if (!a[i][j]) continue;</div><div class=\"line\">                for (int k = 0; k &lt; b.m; k++)</div><div class=\"line\">                    tmp.a[i][k] += a[i][j] * b.a[j][k], tmp.a[i][k] %= mod;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        return tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void Copy(const Matrix &amp;b) &#123;</div><div class=\"line\">        n = b.n, m = b.m;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for(int j = 0; j &lt; m; j++) a[i][j] = b.a[i][j];</div><div class=\"line\">    &#125;</div><div class=\"line\">    void unit(int sz) &#123;</div><div class=\"line\">        n = m = sz;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; n; j++) a[i][j] = 0;</div><div class=\"line\">            a[i][i] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Matrix A, B;</div><div class=\"line\">int a, b, n;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    A.clear(); //矩阵A是构造的矩阵</div><div class=\"line\">    A.n = A.m = 2;</div><div class=\"line\">    A.a[0][0] = 2 * a % mod;</div><div class=\"line\">    A.a[0][1] = (-(a * a - b) % mod + mod) % mod;</div><div class=\"line\">    A.a[1][0] = 1;</div><div class=\"line\">    A.a[1][1] = 0;</div><div class=\"line\">    B.clear();</div><div class=\"line\">    B.n = 2;</div><div class=\"line\">    B.m = 1;</div><div class=\"line\">    B.a[0][0] = 2 * a % mod;</div><div class=\"line\">    B.a[1][0] = 2;</div><div class=\"line\">&#125;</div><div class=\"line\">Matrix Matrix_pow(Matrix A, int k, int mod) &#123; //矩阵快速幂</div><div class=\"line\">    Matrix res;</div><div class=\"line\">    res.clear();</div><div class=\"line\">    res.n = res.m = 2;</div><div class=\"line\">    for (int i = 0; i &lt; 2; i++) res.a[i][i] = 1;</div><div class=\"line\">    while(k) &#123;</div><div class=\"line\">        if (k &amp; 1) res.Copy(A * res);</div><div class=\"line\">        k &gt;&gt;= 1;</div><div class=\"line\">        A.Copy(A * A);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d%d%d&quot;, &amp;a, &amp;b, &amp;n, &amp;mod)) &#123;</div><div class=\"line\">        init();</div><div class=\"line\">        A = Matrix_pow(A, n - 1, mod);</div><div class=\"line\">        A = A * B;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, A.a[0][0]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数学","矩阵"]},{"title":"HDU 4987 Little Pony and Dice（概率dp）","url":"http://yoursite.com/2015/09/20/hdu4987/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4987\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4987</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个 m 面的均匀骰子（[1, m]），然后从 0 出发，根据扔的数字，决定向前走的步数，走到 ≥n 时就停止。<br>求刚好在 n 停止的概率。要求误差 10−5 以内。（1≤m,n≤1e9）</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><ol>\n<li><p>当 m 很大时，概率会接近 0，由于误差 10−5，当 m≥600000 时，直接返回 0</p>\n</li>\n<li><p>当n&lt;=m时，到n的概率为 ((1+(1/m))^(n-1))/m<br>计算过程如下：<br>C(n-1,0)/m + C(n-1,1)/m^2 + …. + C(n-1,n-1)/m^n 即一步走到，两步走到，n步走到<br>提出一个1/m, C(n-1,0)+C(n-1,1)/m+…+C(n-1,n-1)/m^(n-1) = (1+1/m)^(n-1)</p>\n</li>\n<li><p>当n&gt;m,且m比较小<br>设dp[i]为走到i的概率，s[i]为前i个概率和<br>if (i &lt;= m) dp[i] = s[i - 1] / m;   //i之前的走一步到达i<br>else dp[i] = (s[i - 1] - s[i - 1 - m]) / m;     //前m个走一步到达i<br>多测试几个数字，会发现当n比较大的时候，答案会收敛于 2/(m+1) </p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int m, n;</div><div class=\"line\">const int N = 1000000;</div><div class=\"line\">double dp[N + 100], s[N + 100];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;m, &amp;n)) &#123;</div><div class=\"line\">        if (m &gt;= 600000) puts(&quot;0.00000&quot;);</div><div class=\"line\">        else &#123;</div><div class=\"line\">            if (n &lt;= m) printf(&quot;%.5lf\\n&quot;, pow(1 + 1.0 / m, n - 1) / m);</div><div class=\"line\">            else &#123;</div><div class=\"line\">                dp[0] = 1, s[0] = 1;</div><div class=\"line\">                for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">                    if (i &lt;= m) dp[i] = s[i - 1] / m;</div><div class=\"line\">                    else dp[i] = (s[i - 1] - s[i - 1 - m]) / m;</div><div class=\"line\">                    s[i] = s[i - 1] + dp[i];</div><div class=\"line\">                    if (i &gt;= m &amp;&amp; abs(dp[i] - 2. / (m + 1)) &lt;= 1e-9) &#123;</div><div class=\"line\">                        n = i;</div><div class=\"line\">                        break;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                printf(&quot;%.5lf\\n&quot;, dp[n]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["概率dp"]},{"title":"HDU 5072 Coprime（同色三角形模型+容斥）","url":"http://yoursite.com/2015/09/20/hdu5072/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5072\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5072</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个数，求有多少对(a,b,c)满足两两互质或两两不互质。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>把三个数当做三角形的三个点，两个数之间的关系为边。互质为0，不互质为1.<br>则关系有(0,0,0),(1,1,1)是满足条件的。<br>如果a，b，c不符合条件，必然有一对互质，一对不互质，不妨设a，b互质，b，c不互质，于是我们可以枚举b来统计所有的三元组：如果a，c互质那么这样的三元组中b，c可以互换位置；如果a，c不互质，那么a，b可以互换位置。每个答案被算了两遍。<br>所以只要枚举每个b，统计出k个和它不互质的，那么剩下n-1-k个就是和它互质的，那么三元组就有k*(n-1-k)/2种。</p>\n<p>如何计算所有数中与某一个数字不互质的个数。由于数字小于等于1e5（2<em>3</em>5<em>7</em>11<em>13</em>17&gt;10^5）所以质因子的个数不会超过6个。所以可以用二进制枚举每个数的质因子组合，如果某个数是其倍数，则一定不互质。用容斥原理来计算。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define maxn 100000</div><div class=\"line\">int ans[maxn + 10], valid[maxn + 10], tot = 0;</div><div class=\"line\">void getPrime(int n, int &amp;tot, int ans[]) &#123;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (!valid[i]) ans[tot++] = i;</div><div class=\"line\">        for (int j = 0; j &lt; tot &amp;&amp; i * ans[j] &lt;= n; j++) &#123;</div><div class=\"line\">            valid[i * ans[j]] = 1;</div><div class=\"line\">            if (i % ans[j] == 0) break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int a[maxn + 10][6], b[maxn + 10][6], cnt[maxn + 10];</div><div class=\"line\">void factor(int n, int a[][6], int b[][6], int cnt[]) &#123;</div><div class=\"line\">    int tmp, now;</div><div class=\"line\">    int &amp;tot = cnt[n];</div><div class=\"line\">    tot = 0;</div><div class=\"line\">    now = n;</div><div class=\"line\">    for (int i = 0; (ll)ans[i] * ans[i] &lt;= now; i++) if (now % ans[i] == 0) &#123;</div><div class=\"line\">        a[n][tot] = ans[i], b[n][tot] = 0;</div><div class=\"line\">        while(now % ans[i] == 0) &#123;</div><div class=\"line\">            b[n][tot]++;</div><div class=\"line\">            now /= ans[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        tot++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (now != 1) a[n][tot] = now, b[n][tot++] = 1;</div><div class=\"line\">&#125;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    getPrime(maxn, tot, ans);</div><div class=\"line\">    for (int i = 2; i &lt;= maxn; i++) factor(i, a, b, cnt);</div><div class=\"line\">&#125;</div><div class=\"line\">int s[maxn + 10], num[maxn + 10], n;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    init();</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        memset(s, 0, sizeof(s));</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, num + i);</div><div class=\"line\">            int tot = 1 &lt;&lt; cnt[num[i]];</div><div class=\"line\">            for (int j = 0; j &lt; tot; j++) &#123;</div><div class=\"line\">                int tmp = 1;</div><div class=\"line\">                for (int k = 0; k &lt; cnt[num[i]]; k++) if (j &gt;&gt; k &amp; 1) &#123;</div><div class=\"line\">                    tmp *= a[num[i]][k];</div><div class=\"line\">                &#125;</div><div class=\"line\">                s[tmp]++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            int tot = 1 &lt;&lt; cnt[num[i]];</div><div class=\"line\">            ll res = n;</div><div class=\"line\">            for (int j = 0; j &lt; tot; j++) &#123;</div><div class=\"line\">                int tmp = 1, x = 0;</div><div class=\"line\">                for (int k = 0; k &lt; cnt[num[i]]; k++) if (j &gt;&gt; k &amp; 1) &#123;</div><div class=\"line\">                    tmp *= a[num[i]][k];</div><div class=\"line\">                    x++;</div><div class=\"line\">                &#125;</div><div class=\"line\">                if (x % 2) res += s[tmp];</div><div class=\"line\">                else res -= s[tmp];</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (res) ans += (res - 1) * (n - res);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans = (ll)n * (n - 1) * (n - 2) / 6 - ans / 2;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["同色三角形模型","容斥"]},{"title":"ZOJ 3774 Power of Fibonacci（斐波那契数列的幂和）","url":"http://yoursite.com/2015/09/10/zoj3774/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=5237\" target=\"_blank\" rel=\"external\">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=5237</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求前n项斐波那契数的k次幂和</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/acdreamers/article/details/23039571\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/acdreamers/article/details/23039571</a><br>由于5是1000000009的二次剩余，所以可以用一个整数来代替sqrt(5) mod 1000000009<br>要注意在求等比数列时q=1的情况</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 100005;</div><div class=\"line\">const ll mod = 1e9 + 9;</div><div class=\"line\">const ll a = 691504013; ///a = (1+sqrt(5))/2</div><div class=\"line\">const ll b = 308495997; ///a = (1-sqrt(5))/2</div><div class=\"line\">#define M 100001</div><div class=\"line\">ll inv[N], ba[N], rba[N], A[N], B[N], m;</div><div class=\"line\">ll pow_mod(ll a, ll x, ll p) &#123;</div><div class=\"line\">    ll res = 1;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        if (x &amp; 1) res = res * a % p;</div><div class=\"line\">        x &gt;&gt;= 1;</div><div class=\"line\">        a = a * a % p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    inv[0] = inv[1] = 1;</div><div class=\"line\">    ba[0] = ba[1] = 1;</div><div class=\"line\">    rba[0] = rba[1] = 1;</div><div class=\"line\">    A[0] = B[0] = 1;</div><div class=\"line\">    A[1] = a, B[1] = b;</div><div class=\"line\">    for (int i = 2; i &lt; M; i++) &#123;</div><div class=\"line\">        inv[i] = ((mod - mod / i) * inv[mod % i]) % mod;</div><div class=\"line\">        ba[i] = (ba[i - 1] * i) % mod;</div><div class=\"line\">        rba[i] = (rba[i - 1] * inv[i]) % mod;</div><div class=\"line\">        A[i] = (A[i - 1] * a) % mod;</div><div class=\"line\">        B[i] = (B[i - 1] * b) % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">    m = pow_mod(383008016, mod - 2, mod); ///383008016 = sqrt(5), m = 1/sqrt(5)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ll C(int n, int k) &#123;</div><div class=\"line\">    return (ba[n] * rba[k] % mod ) * rba[n - k] % mod;</div><div class=\"line\">&#125;</div><div class=\"line\">ll solve(ll n, ll k) &#123;</div><div class=\"line\">    ll ans = 0;</div><div class=\"line\">    for (int r = 0; r &lt;= k; r++) &#123;</div><div class=\"line\">        ll t = A[k - r] * B[r] % mod;</div><div class=\"line\">        ll c = C(k, r);</div><div class=\"line\">        ll tmp = n % mod;</div><div class=\"line\">        if (t != 1) tmp = t * (pow_mod(t, n, mod) - 1) % mod * pow_mod(t - 1, mod - 2, mod) % mod;</div><div class=\"line\">        tmp = tmp * c % mod;</div><div class=\"line\">        if (r &amp; 1) ans -= tmp;</div><div class=\"line\">        else ans += tmp;</div><div class=\"line\">        ans %= mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ans = ans * pow_mod(m, k, mod) % mod;</div><div class=\"line\">    ans = (ans + mod) % mod;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    ll n, k;</div><div class=\"line\">    init();</div><div class=\"line\">    cin&gt;&gt;t;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%lld%lld&quot;, &amp;n, &amp;k);</div><div class=\"line\">        printf(&quot;%lld\\n&quot;, solve(n, k));</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数论","斐波那契数"]},{"title":"HDU 4959 Poor Akagi（卢卡斯数+二次域运算+等比数列求和）","url":"http://yoursite.com/2015/09/10/hdu4959/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4959\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4959</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求前n项卢卡斯数的k次幂和</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><a href=\"http://blog.csdn.net/ahm001/article/details/38724607\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/ahm001/article/details/38724607</a><br>其实知道了卢卡斯数的通项公式，就比较容易计算了。这道题目因为sqrt(5)不是1000000007的二次剩余，所以就不能够用之前把sqrt(5)当做一个整数的方式来处理。<br>但是可以用定义二次域运算的方式来处理此题，重定义二次域上的运算</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 100005;</div><div class=\"line\">const ll mod = 1e9 + 7;</div><div class=\"line\">#define pll pair&lt;ll, ll&gt;</div><div class=\"line\">pll operator + (pll a, pll b) &#123;</div><div class=\"line\">    a.fi = (a.fi + b.fi) % mod;</div><div class=\"line\">    a.se = (a.se + b.se) % mod;</div><div class=\"line\">    return a;</div><div class=\"line\">&#125;</div><div class=\"line\">pll operator * (pll a, pll b) &#123;</div><div class=\"line\">    pll c;</div><div class=\"line\">    c.fi = (a.fi * b.fi + 5 * a.se * b.se) % mod;</div><div class=\"line\">    c.se = (a.fi * b.se + a.se * b.fi) % mod;</div><div class=\"line\">    return c;</div><div class=\"line\">&#125;</div><div class=\"line\">ll pow_mod(ll a, ll x, ll p) &#123;</div><div class=\"line\">    ll res = 1;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        if (x &amp; 1) res = res * a % p;</div><div class=\"line\">        x &gt;&gt;= 1;</div><div class=\"line\">        a = a * a % p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">pll operator / (pll a, pll b) &#123;</div><div class=\"line\">    pll c = a * pll(b.fi, (mod - b.se) % mod);</div><div class=\"line\">    ll multi = ((b.fi * b.fi - 5 * b.se * b.se) % mod + mod) % mod;</div><div class=\"line\">    return c * pll(pow_mod(multi, mod - 2, mod), 0);</div><div class=\"line\">&#125;</div><div class=\"line\">pll pow_mod(pll a, ll x) &#123;</div><div class=\"line\">    pll res(1, 0);</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        if (x &amp; 1) res = res * a;</div><div class=\"line\">        x &gt;&gt;= 1;</div><div class=\"line\">        a = a * a;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">ll inv[N], ba[N], rba[N];</div><div class=\"line\">#define M 100001</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    inv[0] = inv[1] = 1;</div><div class=\"line\">    ba[0] = ba[1] = 1;</div><div class=\"line\">    rba[0] = rba[1] = 1;</div><div class=\"line\">    for (int i = 2; i &lt; M; i++) &#123;</div><div class=\"line\">        inv[i] = ((mod - mod / i) * inv[mod % i]) % mod;</div><div class=\"line\">        ba[i] = (ba[i - 1] * i) % mod;</div><div class=\"line\">        rba[i] = (rba[i - 1] * inv[i]) % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll C(int n, int k) &#123;</div><div class=\"line\">    return (ba[n] * rba[k] % mod) * rba[n - k] % mod;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll rev2 = pow_mod(2, mod - 2, mod);</div><div class=\"line\">    pll a(rev2, (mod - 1) * rev2 % mod);</div><div class=\"line\">    pll b(rev2, rev2);</div><div class=\"line\">    init();</div><div class=\"line\">    int t;</div><div class=\"line\">    ll n, k;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%I64d%I64d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        pll ans(0, 0);</div><div class=\"line\">        for (int i = 0; i &lt;= k; i++) &#123;</div><div class=\"line\">            ll c = C(k, i);</div><div class=\"line\">            pll q = pow_mod(a, i) * pow_mod(b, k - i);</div><div class=\"line\">            pll qn = pow_mod(q, n + 1);</div><div class=\"line\">            pll e(mod - 1, 0);</div><div class=\"line\">            pll s;</div><div class=\"line\">            if (q.first == 1 &amp;&amp; q.second == 0) s = q * pll((n + 1) % mod * c % mod, 0);</div><div class=\"line\">            else s = (qn + e) / (q + e) * pll(c, 0);</div><div class=\"line\">            ans = ans + s;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, (ans.first + mod) % mod);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数论","卢卡斯数","二次域运算"]},{"title":"HDU 4958 Poor Rukaw（dp + 期望）","url":"http://yoursite.com/2015/09/03/hdu4958/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4958\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4958</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个游戏，桌上有n个数字，A，B轮流轮流操作，每次操作从中选择两个数字x，y，并将其改为abs(x-y)。这样轮流操作，最后剩下为偶数则A得分，否则B得分，得的分数为一开始的数字个数。一轮游戏之后，所有所有数字复原，输的人可以选择干掉一个数字。然后游戏继续，此时输的人先操作。一开始A先操作，且A每次选择对自己最优的方案（他想要获得更高的分数），而B的每一次操作都是随机的。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>观察发现：奇 - 奇 = 偶；奇 - 偶 = 奇； 偶 - 偶 = 偶<br>所以奇数每次都是成对消失的。对于每一轮游戏，谁获胜都是确定的。<br>所以就可以用记忆化搜索来解决此题。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 1010;</div><div class=\"line\">double dp[N][N][2];</div><div class=\"line\">int n;</div><div class=\"line\">double dfs(int x, int y, int w) &#123;</div><div class=\"line\">    if (dp[x][y][w] != -1) return dp[x][y][w];</div><div class=\"line\">    if (x + y == 0) return 0;</div><div class=\"line\">    double ans = 0;</div><div class=\"line\">    int s = 1;</div><div class=\"line\">    if (x % 2 == 0) ans = x + y, s = 0;</div><div class=\"line\">    if (!s) &#123;</div><div class=\"line\">        double t1 = 0, t2 = 0, p = 0;</div><div class=\"line\">        if (x &gt; 0) ans += dfs(x - 1, y, 0) * x / (x + y);</div><div class=\"line\">        if (y &gt; 0) ans += dfs(x, y - 1, 0) * y / (x + y);</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        ans += dfs(x - 1, y, 1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    //cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">    dp[x][y][w] = ans;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    cin&gt;&gt;t;</div><div class=\"line\">    for (int i = 0; i &lt;= 1000; i++)</div><div class=\"line\">        for (int j = 0; j &lt;= 1000; j++)</div><div class=\"line\">            dp[i][j][0] = dp[i][j][1] = -1;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        int x = 0, y = 0, u;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">            if (u % 2 == 1) x++;</div><div class=\"line\">            else y++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, (int)(3 * dfs(x, y, 1) + 0.5));</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","期望"]},{"title":"hihiCoder 1033 交错和（数位dp）","url":"http://yoursite.com/2015/09/03/hihiCoder1033/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://hihocoder.com/problemset/problem/1033\" target=\"_blank\" rel=\"external\">http://hihocoder.com/problemset/problem/1033</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>规定f(x)为x的各位交错和，现在给定一个区间[l,r]，求区间内满足f(x)=k的所有x的和</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>很明显是数位dp的思想，但是状态比较多。<br>dp[fh][one][pos][psum]来表示符号为fh，前缀零的状态one，当前位pos，以及该位以后的交错和为psum的个数<br>sum[fh][one][pos][psum]则表示所有这些数的和<br>之后的转移dp比较容易，个数累加即可，sum则相对复杂，详见代码<br>这里one这个状态很关键，因为当前面全为前缀零时，fh其实是没有意义的，所以如果不单独开一维维护one，会导致结果错误</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">#define pll pair&lt;ll, ll&gt;</div><div class=\"line\">ll l, r, k;</div><div class=\"line\">ll dp[2][2][20][400];</div><div class=\"line\">ll sum[2][2][20][400];</div><div class=\"line\">ll base[20];</div><div class=\"line\">int bit[20];</div><div class=\"line\">const int mod = 1e9 + 7;</div><div class=\"line\">pll dfs(int pos, int psum, bool fh, bool one, bool flag) &#123;</div><div class=\"line\">    if (pos == -1) &#123;</div><div class=\"line\">        if (psum == 0) return &#123;1, 0&#125;;</div><div class=\"line\">        else return &#123;0, 0&#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int ss;</div><div class=\"line\">    if (!flag) &#123;</div><div class=\"line\">        ss = psum + 200;</div><div class=\"line\">        if (dp[fh][one][pos][ss] != -1) return &#123;dp[fh][one][pos][ss], sum[fh][one][pos][ss]&#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int u = flag ? bit[pos] : 9;</div><div class=\"line\">    ll ans = 0, res = 0;</div><div class=\"line\">    pll tmp;</div><div class=\"line\">    for (int i = 0; i &lt;= u; i++) &#123;</div><div class=\"line\">        int nxt = flag &amp;&amp; i == u;</div><div class=\"line\">        if (!i &amp;&amp; one) &#123;</div><div class=\"line\">            tmp = dfs(pos - 1, psum, 1, 1, nxt);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            if (fh) tmp = dfs(pos - 1, psum + i, 0, 0, nxt);</div><div class=\"line\">            else tmp = dfs(pos - 1, psum - i, 1, 0, nxt);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans = (ans + tmp.fi) % mod;</div><div class=\"line\">        res = (res + (i * base[pos] % mod * tmp.fi % mod) + tmp.se) % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (ss &lt; 0) debug;</div><div class=\"line\">    if (!flag) dp[fh][one][pos][ss] = ans, sum[fh][one][pos][ss] = res;</div><div class=\"line\">    return &#123;ans, res&#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">ll calc(ll x) &#123;</div><div class=\"line\">    if (x &lt; 0) return 0;</div><div class=\"line\">    int pos = 0;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        bit[pos++] = x % 10;</div><div class=\"line\">        x /= 10;</div><div class=\"line\">    &#125;</div><div class=\"line\">    pll tmp = dfs(pos - 1, -k, 1, 1, 1);</div><div class=\"line\">    return tmp.se;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    base[0] = 1;</div><div class=\"line\">    for (int i = 1; i &lt;= 19; i++) base[i] = base[i - 1] * 10 % mod;</div><div class=\"line\">    memset(dp, -1, sizeof(dp));</div><div class=\"line\">    while(~scanf(&quot;%lld%lld%lld&quot;, &amp;l, &amp;r, &amp;k)) &#123;</div><div class=\"line\">        printf(&quot;%lld\\n&quot;, (calc(r) - calc(l - 1) + mod) % mod);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数位dp"]},{"title":"HDU 4933 Miaomiao's Function（数位dp+大数）","url":"http://yoursite.com/2015/09/02/hdu4933/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4933\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4933</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>一道数学题，题意不好描述，见题面吧。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>题目中的f(x)比较好求，主要是求g(x)。<br>g(x)定义为x的各个位数交错和，现在要求一个区间[l, r]的g(x)和。显然是用数位dp做。<br>不过数据比较大，需要用到大数。<br>dp[pos][one]表示到pos位，前面是否全为零的交错和</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">struct bigint &#123; //flag表示正负，a数组从低位到高位, 从1开始</div><div class=\"line\">    int flag;</div><div class=\"line\">    int a[210];</div><div class=\"line\">    bigint() &#123;</div><div class=\"line\">        flag=1;</div><div class=\"line\">        memset(a,0,sizeof a);</div><div class=\"line\">    &#125;</div><div class=\"line\">    void clear() &#123;</div><div class=\"line\">        for (int i = 200; i &gt;= 0; i--) a[i] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void out() &#123;</div><div class=\"line\">        for (int i = 10; i &gt;= 1; i--) printf(&quot;%d&quot;, a[i]);</div><div class=\"line\">        cout&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">bigint operator +(bigint a, bigint b);</div><div class=\"line\">bigint operator -(bigint a, bigint b);</div><div class=\"line\">bigint operator +(bigint a, bigint b) &#123;</div><div class=\"line\">    if (a.flag==b.flag) &#123;</div><div class=\"line\">        bigint c;</div><div class=\"line\">        int g=0;</div><div class=\"line\">        for(int i=1; i&lt;=200; i++) &#123;</div><div class=\"line\">            c.a[i]=a.a[i]+b.a[i]+g;</div><div class=\"line\">            g=c.a[i]/10;</div><div class=\"line\">            c.a[i]%=10;</div><div class=\"line\">        &#125;</div><div class=\"line\">        c.flag=a.flag;</div><div class=\"line\">        return c;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        if (a.flag==1) &#123;</div><div class=\"line\">            b.flag=1;</div><div class=\"line\">            return a-b;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            a.flag=1;</div><div class=\"line\">            return b-a;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int cmp(const bigint &amp;a, const bigint &amp;b) &#123;</div><div class=\"line\">    for(int i=200; i&gt;=1; i--) if (a.a[i]!=b.a[i]) if (a.a[i]&lt;b.a[i]) return -1;</div><div class=\"line\">            else return 1;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">bigint operator -(bigint a, bigint b) &#123;</div><div class=\"line\">    if (a.flag==-1 || b.flag==-1) &#123;</div><div class=\"line\">        if (a.flag==-1 &amp;&amp; b.flag==-1) &#123;</div><div class=\"line\">            a.flag=1;</div><div class=\"line\">            b.flag=1;</div><div class=\"line\">            return b-a;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (a.flag==-1) &#123;</div><div class=\"line\">            a.flag=1;</div><div class=\"line\">            a=a+b;</div><div class=\"line\">            a.flag=-1;</div><div class=\"line\">            return a;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (b.flag==-1) &#123;</div><div class=\"line\">            b.flag=1;</div><div class=\"line\">            return a+b;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (cmp(a,b)==-1) &#123;</div><div class=\"line\">        a=b-a;</div><div class=\"line\">        a.flag=-1;</div><div class=\"line\">        return a;</div><div class=\"line\">    &#125;</div><div class=\"line\">    bigint c;</div><div class=\"line\">    int g=0;</div><div class=\"line\">    for(int i=1; i&lt;=200; i++) &#123;</div><div class=\"line\">        c.a[i]=a.a[i]-b.a[i]-g;</div><div class=\"line\">        if (c.a[i]&lt;0) c.a[i]+=10, g=1;</div><div class=\"line\">        else g=0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return c;</div><div class=\"line\">&#125;</div><div class=\"line\">bigint operator *(bigint a, int t) &#123;</div><div class=\"line\">    if (t==0) &#123;</div><div class=\"line\">        bigint c;</div><div class=\"line\">        return c;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (t&lt;0) &#123;</div><div class=\"line\">        a.flag*=-1;</div><div class=\"line\">        t*=-1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int g=0;</div><div class=\"line\">    bigint c;</div><div class=\"line\">    c.flag=a.flag;</div><div class=\"line\">    for(int i=1; i&lt;=200; i++) &#123;</div><div class=\"line\">        c.a[i]=a.a[i]*t+g;</div><div class=\"line\">        g=c.a[i]/10;</div><div class=\"line\">        c.a[i]%=10;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return c;</div><div class=\"line\">&#125;</div><div class=\"line\">int iszero(bigint z) &#123;</div><div class=\"line\">    for(int i=1; i&lt;=200; i++) if (z.a[i]!=0) return 0;</div><div class=\"line\">    return 1;</div><div class=\"line\">&#125;</div><div class=\"line\">bigint toBigint(char *s) &#123;</div><div class=\"line\">    int len=strlen(s+1);</div><div class=\"line\">    bigint c;</div><div class=\"line\">    for(int i=len;i&gt;=1;i--) c.a[len-i+1]=s[i]-&apos;0&apos;;</div><div class=\"line\">    return c;</div><div class=\"line\">&#125;</div><div class=\"line\">bigint toBigint(int a) &#123;</div><div class=\"line\">    bool flag=true;</div><div class=\"line\">    if(a&lt;0) &#123;</div><div class=\"line\">        a=-a;</div><div class=\"line\">        flag=false;</div><div class=\"line\">    &#125;</div><div class=\"line\">    char s[10];</div><div class=\"line\">    int cnt=1;</div><div class=\"line\">    while(a) &#123;</div><div class=\"line\">        s[cnt++]=(a%10+&apos;0&apos;);</div><div class=\"line\">        a/=10;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for(int i=1,j=cnt-1; i&lt;j; i++,j--)</div><div class=\"line\">        swap(s[i],s[j]);</div><div class=\"line\">    s[cnt]=&apos;\\0&apos;;</div><div class=\"line\">    bigint q=toBigint(s);</div><div class=\"line\">    if(!flag)</div><div class=\"line\">        q.flag=-1;</div><div class=\"line\">    return q;</div><div class=\"line\">&#125;</div><div class=\"line\">int modd(bigint c, int z) &#123;</div><div class=\"line\">    int g=0;</div><div class=\"line\">    for(int i=200; i&gt;=1; i--) g=(g*10+c.a[i])%z;</div><div class=\"line\">    if (c.flag==-1) g*=-1;</div><div class=\"line\">    return g;</div><div class=\"line\">&#125;</div><div class=\"line\">char l[105], r[105];</div><div class=\"line\">bigint base[105], g[105], dp[105][2];</div><div class=\"line\">bool vis[105][2] = &#123;0&#125;;</div><div class=\"line\">int bit[105];</div><div class=\"line\">bigint dfs(int pos, bool one, bool flag) &#123;</div><div class=\"line\">    if (pos == 0) &#123;</div><div class=\"line\">        if (!flag) return toBigint(45);</div><div class=\"line\">        else return toBigint(bit[0] * (bit[0] + 1) / 2);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!flag &amp;&amp; vis[pos][one]) return dp[pos][one];</div><div class=\"line\">    int u = flag ? bit[pos] : 9;</div><div class=\"line\">    bigint ans;</div><div class=\"line\">    for (int i = 0; i &lt;= u; i++) &#123;</div><div class=\"line\">        int nxt;</div><div class=\"line\">        if (flag &amp;&amp; i == u) nxt = 1, ans = ans + g[pos - 1] * i;</div><div class=\"line\">        else nxt = 0, ans = ans + base[pos] * i;</div><div class=\"line\">        if (!i &amp;&amp; one) ans = ans + dfs(pos - 1, 1, nxt);</div><div class=\"line\">        else ans = ans - dfs(pos - 1, 0, nxt);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!flag) &#123;</div><div class=\"line\">        vis[pos][one] = 1;</div><div class=\"line\">        dp[pos][one] = ans;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">bigint calc(char *s) &#123;</div><div class=\"line\">    int pos = strlen(s);</div><div class=\"line\">    for (int i = 0; i &lt; pos; i++) bit[pos - i - 1] = s[i] - &apos;0&apos;;</div><div class=\"line\">    bigint tmp;</div><div class=\"line\">    tmp.a[1] = 1;</div><div class=\"line\">    g[0].clear();</div><div class=\"line\">    g[0].a[1] = bit[0];</div><div class=\"line\">    g[0] = g[0] + tmp;</div><div class=\"line\">    for (int i = 1; i &lt; pos; i++) g[i] = g[i - 1] + base[i] * bit[i];</div><div class=\"line\">    return dfs(pos - 1, 1, 1);</div><div class=\"line\">&#125;</div><div class=\"line\">void solve() &#123;</div><div class=\"line\">    bigint R = calc(r);</div><div class=\"line\">    bigint L = calc(l);</div><div class=\"line\">    int pos = strlen(l);</div><div class=\"line\">    int res = 0, k = 0;</div><div class=\"line\">    for (int i = pos - 1; i &gt;= 0; i--) &#123;</div><div class=\"line\">        if (!k) res += bit[i];</div><div class=\"line\">        else res -= bit[i];</div><div class=\"line\">        k ^= 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    bigint tmp = toBigint(res);</div><div class=\"line\">    tmp = R - L + tmp;</div><div class=\"line\">    if (iszero(tmp)) &#123;</div><div class=\"line\">        puts(&quot;Error!&quot;);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    res = modd(tmp, 9);</div><div class=\"line\">    if (res &lt;= 0) res += 9;</div><div class=\"line\">    int s = modd(tmp, res);</div><div class=\"line\">    if (s &lt; 0) s += res;</div><div class=\"line\">    printf(&quot;%d\\n&quot;, s);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    base[0].a[1] = 1;</div><div class=\"line\">    for (int i = 1; i &lt;= 100; i++) base[i] = base[i - 1] * 10;</div><div class=\"line\">    int _;</div><div class=\"line\">    cin&gt;&gt;_;</div><div class=\"line\">    while(_--) &#123;</div><div class=\"line\">        scanf(&quot;%s%s&quot;, l, r);</div><div class=\"line\">        solve();</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数位dp","大数"]},{"title":"HDU 5145 NPY and girls（区间查询+莫队算法）","url":"http://yoursite.com/2015/08/27/hdu5145/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5145\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5145</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个数，m个询问，每次询问区间[l,r]中数字全排列的个数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先区间全排列为：(r-l+1)! / (a1! <em> a2! ……) 其中ai为每种数的个数。<br>假设已经知道当前区间[l,r]的值f, 那么[l,r+1]就是f </em> (r-l+2) / ai (其中ai为新加进来数的个数)。这里用莫队算法来进行维护</p>\n<p>莫队算法可以用nsqrt(n)的复杂度解决一切离线不修改的区间查询问题 [从(l,r)-&gt;(l+1,r)的递推复杂度必须为O(1)]<br>算法参考：<a href=\"http://blog.csdn.net/huzecong/article/details/8576908\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huzecong/article/details/8576908</a><br>          <a href=\"http://blog.csdn.net/bossup/article/details/39236275\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/bossup/article/details/39236275</a><br>莫队算法可以把区间当做二维的点，然后求出曼哈顿最小生成树，之后从起点dfs出答案。<br>但是上述代码比较复杂，另一种方式是把n分块，分成sqrt(n)块。然后把所有查询离线，然后先按照l属于的块号从小到大排序，如果两者在同一块，则按照r从小到大排序。之后遍历一遍得到答案</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 3e4 + 100;</div><div class=\"line\">const int mod = 1000000007;</div><div class=\"line\">int n, m, B;</div><div class=\"line\">int c[N], cnt[N], res[N];</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int l, r, id;</div><div class=\"line\">&#125;a[N];</div><div class=\"line\">bool cmp(node s, node v) &#123;</div><div class=\"line\">    if (s.l / B == v.l / B) return s.r &lt; v.r;</div><div class=\"line\">    return s.l &lt; v.l;</div><div class=\"line\">&#125;</div><div class=\"line\">ll inv[N];</div><div class=\"line\">void init(int n) &#123;</div><div class=\"line\">    inv[0] = inv[1] = 1;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) inv[i] = inv[mod % i] * (mod - mod / i) % mod;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    init(30000);</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, c + i);</div><div class=\"line\">            cnt[c[i]] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;a[i].l, &amp;a[i].r);</div><div class=\"line\">            a[i].l--, a[i].r--;</div><div class=\"line\">            a[i].id = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        B = sqrt(n + 0.5);</div><div class=\"line\">        sort(a, a + m, cmp);</div><div class=\"line\">        int L = a[0].l, R = a[0].l - 1;</div><div class=\"line\">        ll ans = 1;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            while(R &lt; a[i].r) &#123;</div><div class=\"line\">                R++;</div><div class=\"line\">                cnt[c[R]]++;</div><div class=\"line\">                ans = ans * (R - L + 1) % mod;</div><div class=\"line\">                ans = ans * inv[cnt[c[R]]] % mod;</div><div class=\"line\">            &#125;</div><div class=\"line\">            while(R &gt; a[i].r) &#123;</div><div class=\"line\">                ans = ans * inv[R - L + 1] % mod;</div><div class=\"line\">                ans = ans * cnt[c[R]] % mod;</div><div class=\"line\">                cnt[c[R]]--;</div><div class=\"line\">                R--;</div><div class=\"line\">            &#125;</div><div class=\"line\">            while(L &gt; a[i].l) &#123;</div><div class=\"line\">                L--;</div><div class=\"line\">                cnt[c[L]]++;</div><div class=\"line\">                ans = ans * (R - L + 1) % mod;</div><div class=\"line\">                ans = ans * inv[cnt[c[L]]] % mod;</div><div class=\"line\">            &#125;</div><div class=\"line\">            while(L &lt; a[i].l) &#123;</div><div class=\"line\">                ans = ans * inv[R - L + 1] % mod;</div><div class=\"line\">                ans = ans * cnt[c[L]] % mod;</div><div class=\"line\">                cnt[c[L]]--;</div><div class=\"line\">                L++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            res[a[i].id] = ans;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) printf(&quot;%d\\n&quot;, res[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["莫队算法"]},{"title":"HDU 5144 NPY and shot（物理题 OR 三分）","url":"http://yoursite.com/2015/08/27/hdu5144/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5144\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5144</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个高度H, 从H处抛出一个初速度为v的小球，问小球最远能到哪里。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>可以直接推公式<br>vtcos(0) = s<br>vtsin(0) = 0.5<em>g</em>t^2 - h<br>把角度消去，得到一个关于t^2的二次方程，要是这个方程有解，判别式必须≥0。所以s = v <em> sqrt(2.0 </em> g <em> h + v </em> v) / g;</p>\n<p>也可以直接三分s（比三分角度精确）</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">double g = 9.8;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    cin&gt;&gt;t;</div><div class=\"line\">    int h, v;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;h, &amp;v);</div><div class=\"line\">        double s = v * sqrt(2.0 * g * h + v * v) / g;</div><div class=\"line\">        printf(&quot;%.2f\\n&quot;, s);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["想法","枚举"]},{"title":"HYSBZ 1588 营业额统计（Splay树）","url":"http://yoursite.com/2015/08/27/HYSBZ1588/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://www.lydsy.com/JudgeOnline/problem.php?id=1588\" target=\"_blank\" rel=\"external\">http://www.lydsy.com/JudgeOnline/problem.php?id=1588</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>在n天里，每天读入一个数，规定这个数的贡献值为与之前所有数字之差的绝对值的最小值，第一个数的贡献值为它本身。求总的值</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>这道题算是伸展树的入门题。题目数据有个bug（即可能数字个数小于n，如果小于n就把少的数字全部当做0）</p>\n<p>算法的参考资料：<br><a href=\"http://blog.csdn.net/acm_cxlove/article/details/7815019\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/acm_cxlove/article/details/7815019</a><br><a href=\"http://wenku.baidu.com/view/7f0ff024ccbff121dd3683ac.html\" target=\"_blank\" rel=\"external\">http://wenku.baidu.com/view/7f0ff024ccbff121dd3683ac.html</a><br><a href=\"http://www.cnblogs.com/kuangbin/archive/2012/10/07/2714068.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/kuangbin/archive/2012/10/07/2714068.html</a><br><a href=\"http://wenku.baidu.com/link?url=amATxXzsEjjYrr4xw7OnIht8Iv8J7tx-brB6cwpVKfvujPO4p0iOMI46TECbQ4catynY5nOrlRkf2ZGRroXfU2wpSHCnehQCBDq0TYp_ddy&amp;qq-pf-to=pcqq.c2c\" target=\"_blank\" rel=\"external\">http://wenku.baidu.com/link?url=amATxXzsEjjYrr4xw7OnIht8Iv8J7tx-brB6cwpVKfvujPO4p0iOMI46TECbQ4catynY5nOrlRkf2ZGRroXfU2wpSHCnehQCBDq0TYp_ddy&amp;qq-pf-to=pcqq.c2c</a></p>\n<p>splay树的关键在于splay操作，每次插入一个节点后，都将该节点旋到根节点。均摊复杂度为O(logn)，可以避免普通二叉查找树在某些情况下退化成一条链<br>这道题相当于每次插入一个数字后，找到其前驱和后继，比较两者与其的差即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 100005;</div><div class=\"line\">const int inf = 1e9;</div><div class=\"line\">struct SplayTree &#123;</div><div class=\"line\">    int pre[N], key[N], ch[N][2], root, cnt;  ///分别表示父结点，键值，左右孩子(0为左孩子，1为右孩子),根结点，结点数量</div><div class=\"line\">\tvoid init() &#123;</div><div class=\"line\">\t\troot = cnt = 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t///新建一个结点</div><div class=\"line\">    void NewNode(int &amp;r, int father, int k) &#123;</div><div class=\"line\">        r = ++cnt;</div><div class=\"line\">        pre[r] = father;</div><div class=\"line\">        key[r] = k;</div><div class=\"line\">        ch[r][0] = ch[r][1] = 0;  ///左右孩子为空</div><div class=\"line\">    &#125;</div><div class=\"line\">    ///旋转，kind为1为右旋，kind为0为左旋</div><div class=\"line\">    void Rotate(int x, int kind) &#123;</div><div class=\"line\">        int y = pre[x];</div><div class=\"line\">        ///类似SBT，要把其中一个分支先给父节点</div><div class=\"line\">        ch[y][!kind] = ch[x][kind];</div><div class=\"line\">        pre[ch[x][kind]] = y;</div><div class=\"line\">        ///如果父节点不是根结点，则要和父节点的父节点连接起来</div><div class=\"line\">        if(pre[y])</div><div class=\"line\">            ch[pre[y]][ch[pre[y]][1] == y] = x;</div><div class=\"line\">        pre[x] = pre[y];</div><div class=\"line\">        ch[x][kind] = y;</div><div class=\"line\">        pre[y] = x;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t///Splay调整，将根为r的子树调整为goal</div><div class=\"line\">    void Splay(int r, int goal) &#123;</div><div class=\"line\">        while(pre[r]!=goal) &#123;</div><div class=\"line\">            ///父节点即是目标位置，goal为0表示，父节点就是根结点</div><div class=\"line\">            if(pre[pre[r]] == goal)</div><div class=\"line\">                Rotate(r, ch[pre[r]][0] == r);</div><div class=\"line\">            else &#123;</div><div class=\"line\">                int y = pre[r];</div><div class=\"line\">                int kind = ch[pre[y]][0] == y;</div><div class=\"line\">                ///两个方向不同，则先左旋再右旋</div><div class=\"line\">                if(ch[y][kind] == r) &#123;</div><div class=\"line\">                    Rotate(r, !kind);</div><div class=\"line\">                    Rotate(r, kind);</div><div class=\"line\">                &#125;</div><div class=\"line\">                ///两个方向相同，相同方向连续两次</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    Rotate(y, kind);</div><div class=\"line\">                    Rotate(r, kind);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ///更新根结点</div><div class=\"line\">        if(goal == 0) root = r;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int Insert(int k) &#123;</div><div class=\"line\">        int r = root;</div><div class=\"line\">        while(ch[r][key[r] &lt; k]) &#123;</div><div class=\"line\">            ///不重复插入</div><div class=\"line\">            if(key[r] == k) &#123;</div><div class=\"line\">                Splay(r,0);</div><div class=\"line\">                return 0;</div><div class=\"line\">            &#125;</div><div class=\"line\">            r = ch[r][key[r] &lt; k];</div><div class=\"line\">        &#125;</div><div class=\"line\">        NewNode(ch[r][k &gt; key[r]], r, k);</div><div class=\"line\">        ///将新插入的结点更新至根结点</div><div class=\"line\">        Splay(ch[r][k &gt; key[r]], 0);</div><div class=\"line\">        return 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t///找前驱，即左子树的最右结点</div><div class=\"line\">    int get_pre(int x) &#123;</div><div class=\"line\">        int tmp = ch[x][0];</div><div class=\"line\">        if(tmp == 0)  return inf;</div><div class=\"line\">        while(ch[tmp][1])</div><div class=\"line\">            tmp = ch[tmp][1];</div><div class=\"line\">        return key[x] - key[tmp];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ///找后继，即右子树的最左结点</div><div class=\"line\">    int get_next(int x) &#123;</div><div class=\"line\">        int tmp = ch[x][1];</div><div class=\"line\">        if(tmp == 0)  return inf;</div><div class=\"line\">        while(ch[tmp][0])</div><div class=\"line\">            tmp = ch[tmp][0];</div><div class=\"line\">        return key[tmp] - key[x];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;sp;</div><div class=\"line\">int n;</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;,&amp;n)) &#123;</div><div class=\"line\">        sp.init();</div><div class=\"line\">        int ans = 0;</div><div class=\"line\">        for(int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            int num;</div><div class=\"line\">            if(scanf(&quot;%d&quot;,&amp;num) == EOF) num = 0;</div><div class=\"line\">            if(!i) &#123;</div><div class=\"line\">                ans += num;</div><div class=\"line\">                sp.NewNode(sp.root, 0, num);</div><div class=\"line\">                continue;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (sp.Insert(num) == 0) continue;</div><div class=\"line\">            int a = sp.get_next(sp.root);</div><div class=\"line\">            int b = sp.get_pre(sp.root);</div><div class=\"line\">            ans += min(a, b);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;,ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["Splay"]},{"title":"HDU 5143 NPY and arithmetic progression（枚举+想法）","url":"http://yoursite.com/2015/08/27/hdu5143/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5143\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5143</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有1,2,3,4四种数字，个数分别为a1,a2,a3,a4。现在要把这些数分成很多组，其中每组都是等差数列，且每组的个数必须大于等于3。问有没有解</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>观察可以发现等差数列只可能是(1,2,3)(1,2,3,4)(2,3,4)以及3个以上相同的数字。然后三个以上的(1,2,3)可以化为多个(1,1,1)(2,2,2)(3,3,3)和j个(1,2,3)。其中j≤2，其他的相同。所以可以枚举这三种特殊的等差数列的个数，剩下的1,2,3,4的个数≥3或者等于0一定可以。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int x;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    cin&gt;&gt;t;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">        int m = 0;</div><div class=\"line\">        while(x) &#123;</div><div class=\"line\">            m = m * 2 + x % 2;</div><div class=\"line\">            x /= 2;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, m);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["想法","枚举"]},{"title":"HDU 5110 Alexandra and COS（dp+分块）","url":"http://yoursite.com/2015/08/26/hdu5110/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5110\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5110</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一张n*m的地图，其中一些格点上有宝藏。现在有一种探测器，只能够探测到其前方西北到东北距离为d的倍数的格点，定义该距离max(|x1-x|,|y1-y|)。现在给q个探测器，分别求出其能够探测到的宝石数量。1≤n,m,d≤1000,1≤q≤500000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>直接暴力的做时间复杂度为q<em>n</em>case, 会超时。<br>需要用分块的方式来做。g[d][n][m]表示在(n,m)点，距离为d的数量。<br>那么可以用右三角形-左三角形， 即g[d][x][y] = gr[d][x][y] - gl[d][x -1][y]<br>当d比sqrt(n)小时，可以预处理出来复杂度为n<em>m</em>sqrt(n)，反之可以直接暴力算</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int n, m, q, x, y, d, B;</div><div class=\"line\">int a[1010][1010], sa[1010][33], gl[1010][1010], gr[1010][1010], g[33][1010][1010];</div><div class=\"line\">//a[i][j]表示第i行的前j个和 sa[i][j]表示从i行其前i行间距为j的和</div><div class=\"line\">//gl[i][j]表示以(i,j)为边界的左三角形和 gr表示右三角形和 两者相减为g</div><div class=\"line\">char ch;</div><div class=\"line\">void work() &#123;</div><div class=\"line\">    int ans = 0;</div><div class=\"line\">    for (int i = x; i &gt; 0; i -= d) &#123;</div><div class=\"line\">        int L = max(1, y - x + i), R = min(m, y + x - i);</div><div class=\"line\">        ans += a[i][R] - a[i][L - 1];</div><div class=\"line\">    &#125;</div><div class=\"line\">    printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">&#125;</div><div class=\"line\">void solve() &#123;</div><div class=\"line\">    B = sqrt(0.5 + n);</div><div class=\"line\">    for (int i = 1; i &lt;= n; ++i)</div><div class=\"line\">        for (int j = 1; j &lt;= B; ++j) &#123;</div><div class=\"line\">            if (i &lt; j) sa[i][j] = a[i][m];</div><div class=\"line\">            else sa[i][j] = sa[i - j][j] + a[i][m];</div><div class=\"line\">        &#125;</div><div class=\"line\">    for (int k = 1; k &lt;= B; ++k) &#123;</div><div class=\"line\">        for (int i = 1; i &lt;= n; ++i) &#123;</div><div class=\"line\">            for (int j = 1; j &lt;= m; ++j) &#123;</div><div class=\"line\">                //gl</div><div class=\"line\">                if (i &lt;= k || j &lt;= k) gl[i][j] = a[i][j];</div><div class=\"line\">                else gl[i][j] = gl[i - k][j - k] + a[i][j];</div><div class=\"line\">                //gr</div><div class=\"line\">                if (i &lt;= k) gr[i][j] = a[i][j];</div><div class=\"line\">                else if (j + k &gt; m) gr[i][j] = sa[i - k][k] + a[i][j];</div><div class=\"line\">                else gr[i][j] = gr[i - k][j + k] + a[i][j];</div><div class=\"line\">                //g</div><div class=\"line\">                g[k][i][j] = gr[i][j] - gl[i][j - 1];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">char str[1111];</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;q)) &#123;</div><div class=\"line\">        for (int i = 1; i &lt;= n; ++i) &#123;</div><div class=\"line\">            scanf(&quot;%s&quot;, str + 1);</div><div class=\"line\">            a[i][0] = 0;</div><div class=\"line\">            for (int j = 1; j &lt;= m; ++j) &#123;</div><div class=\"line\">                a[i][j] = a[i][j - 1];</div><div class=\"line\">                if (str[j] == &apos;X&apos;) ++a[i][j];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        solve();</div><div class=\"line\">        while(q--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;d);</div><div class=\"line\">            if (d &gt; B) work();</div><div class=\"line\">            else printf(&quot;%d\\n&quot;, g[d][x][y]);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","分块"]},{"title":"HDU 5141 LIS again（LIS+dp+线段树）","url":"http://yoursite.com/2015/08/26/hdu5141/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5141\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5141</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个数的序列，另该序列的最长上升子序列的长度为k。求该序列中子串满足最长上升子序列长度也为k的个数。1≤n≤100000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先我们用线段树可以求出以第i位为结尾的最大长度。假如当前dp[i]=k, 如果可以求得以i结尾，符合条件的最短子串，那么用左边的长度 * 右边的长度就是符合条件的个数。当然，如果后面还有一个符合dp[i’]=k, 那么右边只能到i’-1, 之后的在i’时在计算，可以避免重复<br>可以用线段树维护以i结尾符合条件的lis最靠右的起始位置。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">#define pii pair&lt;int, int&gt;</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 1e5 + 100;</div><div class=\"line\">int a[N], b[N], n, cnt;</div><div class=\"line\">int f[N][2];</div><div class=\"line\">int mx[N &lt;&lt; 2], id[N &lt;&lt; 2];</div><div class=\"line\">int ans;</div><div class=\"line\">void pushup(int rt) &#123;</div><div class=\"line\">    if (mx[rt &lt;&lt; 1] &lt; mx[rt &lt;&lt; 1 | 1]) mx[rt] = mx[rt &lt;&lt; 1 | 1], id[rt] = id[rt &lt;&lt; 1 | 1];</div><div class=\"line\">    else mx[rt] = mx[rt &lt;&lt; 1], id[rt] = id[rt &lt;&lt; 1];</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        mx[rt] = id[rt] = 0;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">pii query(int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        return mkp(mx[rt], id[rt]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    pii t1, t2;</div><div class=\"line\">    t1.first = 0, t2.first = 0;</div><div class=\"line\">    if (L &lt;= m) t1 = query(L, R, lson);</div><div class=\"line\">    if (R &gt; m) t2 = query(L, R, rson);</div><div class=\"line\">    if (t1.first &lt; t2.first) return t2;</div><div class=\"line\">    else return t1;</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int x, int y, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        mx[rt] = x, id[rt] = y;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, x, y, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, x, y, rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, a + i), b[i] = a[i];</div><div class=\"line\">        sort(b, b + n);</div><div class=\"line\">        cnt = unique(b, b + n) - b;</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) a[i] = lower_bound(b, b + cnt, a[i]) - b + 1; //, cout&lt;&lt;a[i]&lt;&lt;endl;</div><div class=\"line\">        build(1, cnt, 1);</div><div class=\"line\">        //debug;</div><div class=\"line\">        pii tmp;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            if (a[i] == 1) tmp.first = 0;</div><div class=\"line\">            else tmp = query(1, a[i] - 1, 1, cnt, 1);</div><div class=\"line\">            if (tmp.first == 0) tmp.second = i + 1;</div><div class=\"line\">            tmp.first++;</div><div class=\"line\">            f[i][0] = tmp.first, f[i][1] = tmp.second;</div><div class=\"line\">            ans = max(ans, tmp.first);</div><div class=\"line\">            //cout&lt;&lt;f[i][0]&lt;&lt;&quot; &quot;&lt;&lt;f[i][1]&lt;&lt;endl;</div><div class=\"line\">            update(a[i], a[i], tmp.first, tmp.second, 1, cnt, 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ll res = 0;</div><div class=\"line\">        vector&lt; pii &gt; g;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) if (f[i][0] == ans) &#123;</div><div class=\"line\">            g.push_back(mkp(i + 1, f[i][1]));</div><div class=\"line\">        &#125;</div><div class=\"line\">        g.push_back(mkp(n + 1, 0));</div><div class=\"line\">        for (int i = 0; i &lt; g.size() - 1; i++) &#123;</div><div class=\"line\">            res += (ll)(g[i + 1].first - g[i].first) * g[i].second;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, res);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","线段树","LIS"]},{"title":"HDU 5106 Bits Problem（数位dp）","url":"http://yoursite.com/2015/08/26/hdu5106/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5106\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5106</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个二进制r，一个整数n，求[0, r)这个区间内满足其二进制中1的个数为n的数字和，答案对1e9+7取模<br>n≤1000， 0≤R&lt;2^1000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>如果只需要求满足的数的个数，只需要开dp[1000][1000]的数组，dp[pos][one]表示到pos位，1的个数为one的个数<br>因为要记录总和，只需要再开一维sum[1000][1000]，sum[pos][one]表示这些所有数的和<br>在状态转移的时候，sum就是 当前枚举的位所代表的数 * 之后的种类数 + 之后的和 的累加</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">#define pii pair&lt;ll, ll&gt;</div><div class=\"line\">ll dp[1001][1001];</div><div class=\"line\">ll sum[1001][1001];</div><div class=\"line\">ll base[1001];</div><div class=\"line\">int bit[1011], n;</div><div class=\"line\">char s[1011];</div><div class=\"line\">const int mod = 1000000007;</div><div class=\"line\">pii dfs(int pos, int one, bool flag) &#123;</div><div class=\"line\">    if (one &gt; n) return &#123;0, 0&#125;;</div><div class=\"line\">    if (pos == -1) &#123;</div><div class=\"line\">        if (one == n) return &#123;1, 0&#125;;</div><div class=\"line\">        return &#123;0, 0&#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!flag &amp;&amp; dp[pos][one] != -1) &#123;</div><div class=\"line\">        return &#123;dp[pos][one], sum[pos][one]&#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int u = flag ? bit[pos] : 1;</div><div class=\"line\">    ll ans = 0, res = 0;</div><div class=\"line\">    pii tmp;</div><div class=\"line\">    for (int i = 0; i &lt;= u; i++) &#123;</div><div class=\"line\">        tmp = dfs(pos - 1, one + i, i == u &amp;&amp; flag);</div><div class=\"line\">        ans = (ans + tmp.first) % mod;</div><div class=\"line\">        res = (res + i * base[pos] * tmp.first + tmp.second) % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!flag) dp[pos][one] = ans, sum[pos][one] = res;</div><div class=\"line\">    return &#123;ans, res&#125;;</div><div class=\"line\">&#125;</div><div class=\"line\">int len;</div><div class=\"line\">ll calc() &#123;</div><div class=\"line\">    int pos = len;</div><div class=\"line\">    int one = 0;</div><div class=\"line\">    ll tmp = 0;</div><div class=\"line\">    for (int i = 0; i &lt; pos; i++) &#123;</div><div class=\"line\">        bit[i] = s[pos - i - 1] - &apos;0&apos;;</div><div class=\"line\">        if (bit[i]) one++;</div><div class=\"line\">        tmp = (tmp * 2 + s[i] - &apos;0&apos;) % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (one != n) tmp = 0;</div><div class=\"line\">    return (dfs(pos - 1, 0, 1).se - tmp + mod) % mod;</div><div class=\"line\">&#125;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    for (int i = 0; i &lt;= len; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt;= n; j++) &#123;</div><div class=\"line\">            dp[i][j] = -1;</div><div class=\"line\">            sum[i][j] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    base[0] = 1;</div><div class=\"line\">    for (int i = 1; i &lt;= 1000; i++) base[i] = 2 * base[i - 1] % mod;</div><div class=\"line\">    while(~scanf(&quot;%d%s&quot;, &amp;n, s)) &#123;</div><div class=\"line\">        len = strlen(s);</div><div class=\"line\">        if (len &lt; n) &#123;</div><div class=\"line\">            puts(&quot;0&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        init();</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, calc());</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["数位dp"]},{"title":"HDU 5125 magic balls（LIS+dp+树状数组）","url":"http://yoursite.com/2015/08/26/hdu5125/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5125\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5125</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有两排球，每排有n个。每个球有一个体积vi。现在要从第一排中选一些球，使得这些球的体积为最长上升序列。你可以使用m次魔法，每次可以把第一排的一个球换成第二排对应位置的球。求最长的子序列长度。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>最长上升子序列可以用树状数组或者线段树维护。dp[i]表示以第i个数结尾的最长上升子序列长度。每加入一个新数，查询比该数小的数的dp最大值mx，用mx+1更新该数的dp值<br>回到这道题，我们先对球的体积进行离散化。用dp[i][j]表示到i个位置，使用了j次交换的最值，那么有如下转移方程：<br>dp[i][j] = max(dp[k][j] + 1) 其中k&lt;i,且s[j][k]&lt;a[i]<br>dp[i][j] = max(dp[k][j - 1] + 1) 其中k&lt;i,且s[j-1][k]&lt;b[i]<br>其中s[j]表示交换了j次时，需要维护的树状数组的情况<br>这道题用线段树维护常数太大，容易T。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 1010;</div><div class=\"line\">int a[N], b[N], c[N * 2], n, m, cnt;</div><div class=\"line\">int bit[N][N * 2];</div><div class=\"line\">inline int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; (-x);</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int i, int p, int v) &#123;</div><div class=\"line\">    while(p &lt;= cnt) &#123;</div><div class=\"line\">        bit[i][p] = max(bit[i][p], v);</div><div class=\"line\">        p += lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int sum(int i, int p) &#123;</div><div class=\"line\">    int res = 0;</div><div class=\"line\">    while(p &gt; 0) &#123;</div><div class=\"line\">        res = max(res, bit[i][p]);</div><div class=\"line\">        p -= lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        c[0] = 0;</div><div class=\"line\">        cnt = 1;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, a + i, b + i);</div><div class=\"line\">            c[cnt++] = a[i];</div><div class=\"line\">            c[cnt++] = b[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(c, c + cnt); cnt = unique(c, c + cnt) - c;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) a[i] = lower_bound(c, c + cnt, a[i]) - c;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) b[i] = lower_bound(c, c + cnt, b[i]) - c;</div><div class=\"line\">        for (int i = 0; i &lt;= m; i++)</div><div class=\"line\">            for (int j = 0; j &lt;= cnt; j++) bit[i][j] = 0;</div><div class=\"line\">        int mx = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = min(i + 1, m); j &gt;= 0; j--) &#123;</div><div class=\"line\">                int k = sum(j, a[i] - 1) + 1;</div><div class=\"line\">                mx = max(mx, k);</div><div class=\"line\">                add(j, a[i], k);</div><div class=\"line\">                if (j) &#123;</div><div class=\"line\">                    k = sum(j - 1, b[i] - 1) + 1;</div><div class=\"line\">                    mx = max(mx, k);</div><div class=\"line\">                    add(j, b[i], k);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, mx);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp","树状数组","LIS"]},{"title":"ZOJ 3816 Generalized Palindromic Number（dp）","url":"http://yoursite.com/2015/08/25/zoj3816/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3816\" target=\"_blank\" rel=\"external\">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3816</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>规定广义回文为：将字符串中相同的字符压缩为一个之后为回文串。例如：11233221-&gt;12321<br>现在给定一个n，求小于n的最大一个数，使其为广义回文串。（1≤n≤1e18）</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>从最后一位（最右位）开始改动，一直改动到第一位（第一位最小到1，不能到0）。如果改动某一位可以得到一个回文串，答案就是这个数字。<br>现在假设改动到第k位：另dp[l][r]表示从第l位到第r位的符合回文的最大串<br>dp[l][r] = max(前缀和 <em> base[r - L + 1] + dp[L][j] </em> base[r - j] + 后缀和)<br>上述公式中：L为从l+1开始第一个与l不同的位，因为11121…的下一个状态直接转到21…(相同的1可以压缩)<br>j从r-1一直到k, 即把(j+1, r)的位全部变为l位</p>\n<p>需要注意当r&lt;=k时，此时dp[l][r]是已经确定的，我一开始直接判断该串是否为回文，但是这样不对。需要把右边和l-1相同的位全部压缩之后再判断。<br>例如：3443，当k为3，第三位为3时，dp[2][3] = 43，即3433，此时3433是广义回文，但43不是。所以应该判断4是不是为回文。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">ll n;</div><div class=\"line\">int bit[22], len;</div><div class=\"line\">ll dp[22][22];</div><div class=\"line\">void work(ll n) &#123;</div><div class=\"line\">    vector&lt;int&gt; g;</div><div class=\"line\">    len = 0;</div><div class=\"line\">    while(n) &#123;</div><div class=\"line\">        g.pb(n % 10);</div><div class=\"line\">        n /= 10;</div><div class=\"line\">    &#125;</div><div class=\"line\">    len = g.size();</div><div class=\"line\">    reverse(g.begin(), g.end());</div><div class=\"line\">    for (int i = 1; i &lt;= len; i++) bit[i] = g[i - 1];</div><div class=\"line\">&#125;</div><div class=\"line\">int k;</div><div class=\"line\">ll base[22];</div><div class=\"line\">bool check(vector&lt;int&gt; g) &#123;</div><div class=\"line\">    int len = g.size();</div><div class=\"line\">    for (int i = 0, j = len - 1; i &lt; j; i++, j--) if (g[i] != g[j]) return false;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div><div class=\"line\">ll dfs(int l, int r) &#123;</div><div class=\"line\">    if (dp[l][r] != -1) return dp[l][r];</div><div class=\"line\">    if (l &gt; k) &#123; //l&gt;k,此时(l,r)为9...9最大</div><div class=\"line\">        dp[l][r] = base[r - l + 1] - 1;</div><div class=\"line\">        return dp[l][r];</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (r &lt;= k) &#123; //r &lt;= k，此时(l,r)串为已知串</div><div class=\"line\">        vector&lt;int&gt; g;</div><div class=\"line\">        ll ss = 0;</div><div class=\"line\">        ss = ss * 10 + bit[l];</div><div class=\"line\">        g.pb(bit[l]);</div><div class=\"line\">        for (int i = l + 1; i &lt;= r; i++) &#123;</div><div class=\"line\">            ss = ss * 10 + bit[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        int R = r;</div><div class=\"line\">        while(bit[R] == bit[l - 1] &amp;&amp; l &gt; 1) R--; //需要把右边的压缩</div><div class=\"line\">        for (int i = l + 1; i &lt;= R; i++) &#123;</div><div class=\"line\">            if (bit[i] != bit[i - 1]) g.pb(bit[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (check(g)) return dp[l][r] = ss; //如果压缩后为回文串，修改值</div><div class=\"line\">        return -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int L;</div><div class=\"line\">    for (L = l + 1; L &lt;= k; L++) &#123; //把L变为第一个不与l位相同的</div><div class=\"line\">        if (bit[L] != bit[L - 1]) break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (L == k + 1) ;</div><div class=\"line\">    else if (L == k) &#123;</div><div class=\"line\">        if (bit[L] == bit[L - 1]) L = k + 1;</div><div class=\"line\">        else L = k;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ll mx = -1;</div><div class=\"line\">    ll ans = 0;</div><div class=\"line\">    for (int i = l; i &lt; L; i++) ans = ans * 10 + bit[i]; //前缀和</div><div class=\"line\">    ll tmp = 0;</div><div class=\"line\">    for (int j = r - 1; j &gt;= k; j--) &#123;</div><div class=\"line\">        tmp = tmp * 10 + bit[l]; //后缀和</div><div class=\"line\">        ll res = dfs(L, j);</div><div class=\"line\">        if (res != -1) mx = max(ans * base[r - L + 1] + res * base[r - j] + tmp, mx);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (mx &gt;= 0) dp[l][r] = mx;</div><div class=\"line\">    return mx;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    base[0] = 1;</div><div class=\"line\">    for (int i = 1; i &lt;= 18; i++) base[i] = base[i - 1] * 10;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%lld&quot;, &amp;n);</div><div class=\"line\">        work(n);</div><div class=\"line\">        bool flag = false;</div><div class=\"line\">        for (int i = len; i &gt;= 1; i--) &#123;</div><div class=\"line\">            int x = bit[i];</div><div class=\"line\">            for (int j = x - 1; j &gt;= (i == 1) ? 1 : 0; j--) &#123;</div><div class=\"line\">                k = i;</div><div class=\"line\">                memset(dp, -1, sizeof(dp));</div><div class=\"line\">                bit[i] = j;</div><div class=\"line\">                dfs(1, len);</div><div class=\"line\">                if (dp[1][len] != -1) &#123;</div><div class=\"line\">                    printf(&quot;%lld\\n&quot;, dp[1][len]);</div><div class=\"line\">                    flag = true;</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            bit[i] = x;</div><div class=\"line\">            if (flag) break;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!flag) &#123; //像100之类的数，上面的dp跑不出来，这里特别输出即可</div><div class=\"line\">            printf(&quot;%lld\\n&quot;, base[len - 1] - 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["dp"]},{"title":"ZOJ 3810 A Volcanic Island（构造 + 四色定理）","url":"http://yoursite.com/2015/08/25/zoj3810/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3810\" target=\"_blank\" rel=\"external\">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3810</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>用 n 块面积为 n 的图块拼满一个 n*n 的矩阵图，并且 n 块图只有四种颜色，相邻的图块不能有相同的颜色，任意的两块不能有相同的形状，包括旋转，对称；</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>当n≤4时，只有n=1可以构造<br>当n≥5时一定有解。<br>当n为5时：<br>1 1 1 3 4<br>1 3 3 3 4<br>1 3 2 2 4<br>2 2 2 1 4<br>1 1 1 1 4<br>当n为6时：<br>1 1 1 1 3 4<br>1 3 3 3 3 4<br>1 3 1 1 1 4<br>1 1 1 2 2 4<br>2 2 2 2 1 4<br>1 1 1 1 1 4<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cctype&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int a[105][105];</div><div class=\"line\">void print(int n) &#123;</div><div class=\"line\">    for(int i=1; i&lt;=n; i++) &#123;</div><div class=\"line\">        for(int j=1; j&lt;=n; j++) &#123;</div><div class=\"line\">            switch(a[i][j]) &#123;</div><div class=\"line\">                case 1:</div><div class=\"line\">                    putchar(&apos;R&apos;);</div><div class=\"line\">                    break;</div><div class=\"line\">                case 2:</div><div class=\"line\">                    putchar(&apos;Y&apos;);</div><div class=\"line\">                    break;</div><div class=\"line\">                case 3:</div><div class=\"line\">                    putchar(&apos;G&apos;);</div><div class=\"line\">                    break;</div><div class=\"line\">                case 4:</div><div class=\"line\">                    putchar(&apos;B&apos;);</div><div class=\"line\">                    break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        puts(&quot;&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int go(int n) &#123;</div><div class=\"line\">    memset(a,0,sizeof(a));</div><div class=\"line\">    for(int i=1; i&lt;=n; i++) a[i][n]=4;</div><div class=\"line\">    int color=2;</div><div class=\"line\">    for(int k=1; k&lt;=n/2; k++) &#123;</div><div class=\"line\">        int j;</div><div class=\"line\">        if(color==1) color=2;</div><div class=\"line\">        else color=1;</div><div class=\"line\">        for(j=1;; j++) &#123;</div><div class=\"line\">            if(a[k][j])break;</div><div class=\"line\">            a[k][j]=color;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for(j--; j&lt;=n-1; j++)</div><div class=\"line\">            a[k+1][j]=color;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    for(int i=n/2+2; i&lt;=n; i++)</div><div class=\"line\">        a[i][n-1]=3;</div><div class=\"line\">    for(int j=n-1; j&gt;=0; j--) &#123;</div><div class=\"line\">        a[n/2+2][j]=3;</div><div class=\"line\">        if(a[n/2+1][j]==0) &#123;</div><div class=\"line\">            a[n/2+1][j]=3;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for(int i=n/2+1; i&lt;=n; i++) &#123;</div><div class=\"line\">        if(a[i][1])break;</div><div class=\"line\">        if(color==1)color=2;</div><div class=\"line\">        else color=1;</div><div class=\"line\">        int j=1;</div><div class=\"line\">        for(; j&lt;=n-2; j++) &#123;</div><div class=\"line\">            if(a[i][j])break;</div><div class=\"line\">            a[i][j]=color;</div><div class=\"line\">        &#125;</div><div class=\"line\">        j--;</div><div class=\"line\">        int k=i;</div><div class=\"line\">        for(; k&lt;=n; k++) &#123;</div><div class=\"line\">            if(a[k][j+1]==0)break;</div><div class=\"line\">            a[k][j]=color;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for(; j&lt;=n-2; j++)</div><div class=\"line\">            a[k][j]=color;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    int T_T;</div><div class=\"line\">    scanf(&quot;%d&quot;,&amp;T_T);</div><div class=\"line\">    while(T_T--) &#123;</div><div class=\"line\">        int n;</div><div class=\"line\">        scanf(&quot;%d&quot;,&amp;n);</div><div class=\"line\">        if(n&lt;=4) &#123;</div><div class=\"line\">            if(n==1) puts(&quot;Y&quot;);</div><div class=\"line\">            else puts(&quot;No solution!&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        go(n);</div><div class=\"line\">        print(n);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["构造","四色定理"]},{"title":"ZOJ 3811 Untrusted Patrol（想法）","url":"http://yoursite.com/2015/08/25/zoj3811/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3811\" target=\"_blank\" rel=\"external\">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3811</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个点，m条无向边。给出k个能够记录的点，会记录第一次经过该点的时间。现在有L个点，保证这些点都是能够记录的点，且是按照时间从小到大排序的。问根据这些记录能否判断一个人有没有可能已经访问过所有的点。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先可以知道当L != K 时一定为no。</p>\n<ol>\n<li>先把第一个访问到的记录点、以及它能够走到的所有非记录的点标记为已访问过。</li>\n<li>接下来每碰到一个新的访问点，只需要看与它相连的点是否有被访问过，如果有则该点一定可以到达。然后再1的方式往访问过的集合里添加新点。</li>\n<li>最后需要判断是否所有的点都被访问过。</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 1e5 + 100;</div><div class=\"line\">vector&lt;int&gt; g[N];</div><div class=\"line\">int t, n, m, k, l, has[N], is[N];</div><div class=\"line\">void dfs(int u) &#123;</div><div class=\"line\">    has[u] = 1;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (!has[v] &amp;&amp; !is[v]) dfs(v);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;k);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) g[i].clear(), has[i] = is[i] = 0;</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int i = 0; i &lt; k; i++) scanf(&quot;%d&quot;, &amp;u), is[u] = 1;</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v); g[v].pb(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;l);</div><div class=\"line\">        bool flag = true;</div><div class=\"line\">        if (l != k) &#123;</div><div class=\"line\">            flag = false;</div><div class=\"line\">        &#125;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">        dfs(u);</div><div class=\"line\">        l--;</div><div class=\"line\">        while(l--) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">            if (!flag) continue;</div><div class=\"line\">            int s = 0;</div><div class=\"line\">            for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">                v = g[u][i];</div><div class=\"line\">                if (has[v]) &#123;</div><div class=\"line\">                    s = 1;</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (!s) flag = false;</div><div class=\"line\">            else dfs(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (flag) &#123;</div><div class=\"line\">            int s = 0;</div><div class=\"line\">            for (int i = 1; i &lt;= n; i++) if (has[i]) s++;</div><div class=\"line\">            if (s == n) puts(&quot;Yes&quot;);</div><div class=\"line\">            else puts(&quot;No&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else puts(&quot;No&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 5103 RootedTree（状压dp, 树dp）","url":"http://yoursite.com/2015/08/19/hdu5103/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5103\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5103</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一棵树，给定n个节点，问有多少颗有根树，使得每个子树都满足以下条件：子树的根为i，子树上的点数为ti，li&lt;=ti&lt;=ri</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>dp[i][S] 表示以i为根节点，拥有孩子S（二进制数状态的方案数<br>sub[S] 表示S状态下森林的方案数<br>sum[S] 表示S状态的有根树的方案数</p>\n<p>可以知道<br>dp[i][S] = sub[ S^(1&lt;&lt;i) ] {L[i]&lt;=|S|&lt;=R[i]}<br>sum[S] = dp[i][S] { i=0,1,2,3,,,n-1 | S&amp;1&lt;&lt;i!=0  }<br>sub[S] = sub[S] +  sum[H]*sub[S^H]{ H为s的子集 ，这里有可能会计算重复，所以先固定S中的某一个点一定在H中，这样可以避免重复计算}</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int mod = 1e9 + 7;</div><div class=\"line\">ll dp[15][1 &lt;&lt; 15], sum[1 &lt;&lt; 15], sub[1 &lt;&lt; 15];</div><div class=\"line\">int l[15], r[15], n;</div><div class=\"line\">int cal(int s) &#123;</div><div class=\"line\">    int res = 0;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) if (s &gt;&gt; i &amp; 1) res++;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int _;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;_);</div><div class=\"line\">    while(_--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        sub[0] = sum[0] = 1;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, l + i, r + i);</div><div class=\"line\">            dp[i][0] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int tot = (1 &lt;&lt; n);</div><div class=\"line\">        for (int s = 1; s &lt; tot; s++) &#123;</div><div class=\"line\">            sum[s] = sub[s] = 0;</div><div class=\"line\">            int cnt = cal(s);</div><div class=\"line\">            for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">                dp[i][s] = 0;</div><div class=\"line\">                if ((s &gt;&gt; i &amp; 1) &amp;&amp; l[i] &lt;= cnt &amp;&amp; cnt &lt;= r[i]) &#123;</div><div class=\"line\">                    dp[i][s] = sub[s ^ (1 &lt;&lt; i)];</div><div class=\"line\">                    sum[s] = (sum[s] + dp[i][s]) % mod;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            int j = 0;</div><div class=\"line\">            for (j = 0; j &lt; n; j++) if (s &gt;&gt; j &amp; 1) break;</div><div class=\"line\">            for (int left = s; left; left = (left - 1) &amp; s) &#123;</div><div class=\"line\">                if (!(left &gt;&gt; j &amp; 1)) continue;</div><div class=\"line\">                sub[s] = (sub[s] + (sum[left] * sub[s ^ left]) % mod) % mod;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, sum[tot - 1]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14564193  2015-08-19 00:21:01 Accepted    5103    327MS   3680K   1526 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["状压dp"]},{"title":"HDU 5058 Harry And Math Teacher（dp+矩阵+线段树）","url":"http://yoursite.com/2015/08/18/hdu5058/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5058\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5058</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n层楼，每一层有两扇门。从第i层楼到第i+1层楼有4条路，即从i层的每扇门到i+1层的每扇门都有一条路。现在有两种操作，一种是将第i层到第i+1层的某条路给干掉（或者重新修好）。另一种是询问从第i层到第j层有多少不同的路。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>假设到第i层的第一扇门为dp[i][1]种，第二扇们有dp[i][2]中。那么<br>dp[i + 1][1] = a1 <em> dp[i][1] + a2 </em> dp[i][2]<br>dp[i + 1][2] = b1 <em> dp[i][2] + b2 </em> dp[i][2]<br>所以就相当于从第i层到第i+1层只需要乘以一个转换矩阵即可。而一开始转换矩阵中元素都为1。当有一条路被干掉则变为0<br>于是这道题就变成线段树维护矩阵乘积，单点更新，区间求乘积</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int n, m;</div><div class=\"line\">const int N = 50000 + 100;</div><div class=\"line\">const ll mod = 1000000007;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    ll a[2][2];</div><div class=\"line\">    void clr() &#123;</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">    &#125;</div><div class=\"line\">    void uni() &#123;</div><div class=\"line\">        for (int i = 0; i &lt; 2; i++)</div><div class=\"line\">            for (int j = 0; j &lt; 2; j++) a[i][j] = 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void one() &#123;</div><div class=\"line\">        for (int i = 0; i &lt; 2; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; 2; j++) a[i][j] = 0;</div><div class=\"line\">            a[i][i] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    void out() &#123;</div><div class=\"line\">        for (int i = 0; i &lt; 2; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; 2; j++) cout&lt;&lt;a[i][j]&lt;&lt;&quot; &quot;;</div><div class=\"line\">            cout&lt;&lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ll get() &#123;</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt; 2; i++)</div><div class=\"line\">            for (int j = 0; j &lt; 2; j++) ans += a[i][j], ans %= mod;</div><div class=\"line\">        return ans;</div><div class=\"line\">    &#125;</div><div class=\"line\">    node operator * (const node &amp; T) &#123;</div><div class=\"line\">        node tmp;</div><div class=\"line\">        memset(tmp.a, 0, sizeof(tmp.a));</div><div class=\"line\">        for (int i = 0; i &lt; 2; i++)</div><div class=\"line\">            for (int j = 0; j &lt; 2; j++)</div><div class=\"line\">                for (int k = 0; k &lt; 2; k++)</div><div class=\"line\">                    tmp.a[i][j] += a[i][k] * T.a[k][j], tmp.a[i][j] %= mod;</div><div class=\"line\">        return tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;mul[N &lt;&lt; 2], tmp;</div><div class=\"line\">void pushup(int rt) &#123;</div><div class=\"line\">    mul[rt].clr();</div><div class=\"line\">    mul[rt] = mul[rt &lt;&lt; 1] * mul[rt &lt;&lt; 1 | 1];</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        mul[rt].uni();</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int y, int z, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        mul[rt].a[y][z] ^= 1;</div><div class=\"line\">        //mul[rt].out();</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, y, z, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, y, z, rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">node query(int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        return mul[rt];</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    node ret;</div><div class=\"line\">    ret.one();</div><div class=\"line\">    if (L &lt;= m) ret = ret * query(L, R, lson);</div><div class=\"line\">    if (R &gt; m) ret = ret * query(L, R, rson);</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int op, a, b, x, y, z;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        n--;</div><div class=\"line\">        build(1, n, 1);</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;op);</div><div class=\"line\">            if (op == 0) &#123;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</div><div class=\"line\">                tmp = query(a, b - 1, 1, n, 1);</div><div class=\"line\">                printf(&quot;%I64d\\n&quot;, tmp.get());</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;z);</div><div class=\"line\">                if (y == 1 &amp;&amp; z == 1) y = 0, z = 0;</div><div class=\"line\">                else if (y == 1 &amp;&amp; z == 2) y = 0, z = 1;</div><div class=\"line\">                else if (y == 2 &amp;&amp; z == 1) y = 1, z = 0;</div><div class=\"line\">                else y = 1, z = 1;</div><div class=\"line\">                update(x, x, y, z, 1, n, 1);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14562794  2015-08-18 21:47:28 Accepted    5068    795MS   5688K   2508 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["dp","线段树","矩阵"]},{"title":"HDU 5067 Harry And Dig Machine（状压dp）","url":"http://yoursite.com/2015/08/18/hdu5067/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5067\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5067</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n*m的格点，其中有一些点有东西（不超过10个点）。现在需要从左上角出发，每次只能朝相邻的方向走，问把所有的东西都拿到，然后回到起点的最小时间。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>状压dp：dp[i][j]为走过i中所有点（i为二进制），且当前在j这个点的最小值。dp[i | 1 &lt;&lt; k][k] = (dp[i][j] + dist[j][k]) 其中k为之前没有走过的点<br>这道题由于数据比较小，用next_permutation也能过。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int n, m, cnt;</div><div class=\"line\">pair&lt;int, int&gt; s[12];</div><div class=\"line\">int dp[2000][12];</div><div class=\"line\">int get(pair&lt;int, int&gt; x, pair&lt;int, int&gt; y) &#123;</div><div class=\"line\">    return abs(x.fi - y.fi) + abs(x.se - y.se);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        cnt = 0;</div><div class=\"line\">        int u;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++)</div><div class=\"line\">            for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">                scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">                if (u) s[cnt++] = make_pair(i, j);</div><div class=\"line\">            &#125;</div><div class=\"line\">        memset(dp, -1, sizeof(dp));</div><div class=\"line\">        dp[0][0] = 0;</div><div class=\"line\">        int tot = 1 &lt;&lt; cnt;</div><div class=\"line\">        for (int i = 0; i &lt; tot; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; cnt; j++) &#123;</div><div class=\"line\">                if (!i) dp[i | (1 &lt;&lt; j)][j] = get(s[j], &#123;0, 0&#125;);</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    if (!(i &gt;&gt; j &amp; 1)) continue;</div><div class=\"line\">                    if (dp[i][j] != -1) &#123;</div><div class=\"line\">                        for (int k = 0; k &lt; cnt; k++) if (!(i &gt;&gt; k &amp; 1)) &#123;</div><div class=\"line\">                            int st = i | (1 &lt;&lt; k);</div><div class=\"line\">                            if (dp[st][k] == -1) dp[st][k] = dp[i][j] + get(s[j], s[k]);</div><div class=\"line\">                            else dp[st][k] = min(dp[st][k], dp[i][j] + get(s[j], s[k]));</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int ans = INF;</div><div class=\"line\">        for (int i = 0; i &lt; cnt; i++) &#123;</div><div class=\"line\">            ans = min(ans, dp[tot - 1][i] + get(s[i], &#123;0, 0&#125;));</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (cnt == 0) ans = 0;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14562788    2015-08-18 21:47:01    Accepted    5067    0MS    1656K    1379 B    G++    SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["状压dp"]},{"title":"HDU 5060 War（计算几何）","url":"http://yoursite.com/2015/08/18/hdu5060/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5060\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5060</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个球A：x^2+y^2+z^2 &lt;= r^2 以及一个圆柱体B：x^2+y^2 &lt;= hr^2 且 |z|&lt;=hz<br>定义VC为两者相交的体积，VU为两者的体积并。求VC/VU</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>球冠体积：一个球被一个截面所截，其中截面距离球心的距离l。则球冠体积为：π<em>h</em>h*(r-h/3) 其中h=r-l</p>\n<p>这道题先求出VC，然后VU=A+B-VC。VC的求法有5种情况</p>\n<ol>\n<li>hr &gt;= r &amp;&amp; hz &gt;= r （球在圆柱体内）</li>\n<li>hr &gt;= r &amp;&amp; hz &lt; r （球被圆柱体的两个底面分别截去一个球冠）</li>\n<li>hr &lt; r &amp;&amp; hr <em> hr + hz </em> hz &lt;= r * r （圆柱体在球内）</li>\n<li>hr &lt; r &amp;&amp; hz &gt;= r （圆柱体的圆半径小于球半径，但是圆柱体的长度大于球的长度）</li>\n<li>（圆柱体的圆半径小于球半径，但是圆柱体的长度小于球的长度）</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define PI cos(-1.0)</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">double r, hr, hz;</div><div class=\"line\">double vc, vu;</div><div class=\"line\"></div><div class=\"line\">double s(double l) &#123;</div><div class=\"line\">    double h = r - l;</div><div class=\"line\">    return PI * h * h * (r - h / 3);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%lf%lf%lf&quot;, &amp;r, &amp;hr, &amp;hz)) &#123;</div><div class=\"line\">        double sq = 4.0 / 3 * PI * r * r * r;</div><div class=\"line\">        double sz = PI * hr * hr * 2 * hz;</div><div class=\"line\">        if (hr &gt;= r &amp;&amp; hz &gt;= r) &#123;</div><div class=\"line\">            vc = sq;</div><div class=\"line\">            vu = sz;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (hr &gt;= r &amp;&amp; hz &lt; r) &#123;</div><div class=\"line\">            vc = sq - 2 * s(hz);</div><div class=\"line\">            vu = sz + sq - vc;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (hr &lt; r &amp;&amp; hr * hr + hz * hz &lt;= r * r) &#123;</div><div class=\"line\">            vc = sz;</div><div class=\"line\">            vu = sq;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (hr &lt; r &amp;&amp; hz &gt;= r) &#123;</div><div class=\"line\">            double hz1 = sqrt(r * r - hr * hr);</div><div class=\"line\">            vc = PI * hr * hr * 2 * hz1 + 2 * s(hz1);</div><div class=\"line\">            vu = sz + sq - vc;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            double hz1 = sqrt(r * r - hr * hr);</div><div class=\"line\">            vc = PI * hr * hr * 2 * hz1 + 2 * s(hz1) - 2 * s(hz);</div><div class=\"line\">            vu = sz + sq - vc;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%.6lf\\n&quot;, vc / vu);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14562534  2015-08-18 21:30:17 Accepted    5060    2340MS  1596K   1056 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["计算几何","球冠体积"]},{"title":"HDU 5102 The K-th Distance（想法）","url":"http://yoursite.com/2015/08/17/hdu5102/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5067\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5067</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一棵树n个节点，每条边都为1。现在把每两个点之间的距离放在一起，按照从大到小排列。问前k个的和为多少？保证k小于等于min(1e6, n*(n-1)/2)</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>把所有边(u,v)以及(v,u)放入队列，队列每弹出一个元素(u,v)，对于所有与v相邻的点w，如果w≠u，就把(v,w)入队，这样就能一个一个生成前K小的距离。 注意到每条边实际上会入队两次，只要把K翻倍且把ans除以2即可，时间复杂度为O(n+K)</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define INF 1 &lt;&lt; 30</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 1e5 + 100;</div><div class=\"line\">const int M = 1e6 + 100;</div><div class=\"line\">int n, k, m;</div><div class=\"line\">vector&lt;int&gt; g[N];</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int u, v, l;</div><div class=\"line\">&#125;tmp;</div><div class=\"line\">node q[M * 2];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) g[i].clear();</div><div class=\"line\">        int u, v, l;</div><div class=\"line\">        k *= 2;</div><div class=\"line\">        int st = 0, ed = 0;</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v);</div><div class=\"line\">            g[v].pb(u);</div><div class=\"line\">            if (ed &lt; k) q[ed++] = &#123;u, v, 1&#125;, ans++;</div><div class=\"line\">            if (ed &lt; k) q[ed++] = &#123;v, u, 1&#125;, ans++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        while(ed &lt; k) &#123;</div><div class=\"line\">            tmp = q[st++];</div><div class=\"line\">            u = tmp.u, v = tmp.v, l = tmp.l;</div><div class=\"line\">            for (int i = 0; i &lt; g[v].size(); i++) if (g[v][i] != u &amp;&amp; ed &lt; k)&#123;</div><div class=\"line\">                q[ed++] = &#123;v, g[v][i], l + 1&#125;;</div><div class=\"line\">                ans += l + 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans / 2);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14550969  2015-08-17 22:24:35 Accepted    5102    920MS   31204K  1099 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 4986 Little Pony and Alohomora Part I（递推+调和级数）","url":"http://yoursite.com/2015/08/16/hdu4986/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4986\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4986</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个盒子，每个盒子都有唯一一把钥匙可以打开它。现在将钥匙随机放在盒子里，问最少需要撬开几个盒子才能打开所有的盒子，求期望。其实就是求随机排列的期望循环个数。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>递推：假设f[n]为打开n个盒子的期望，当多了一个盒子时，如果该盒子装的是自己的钥匙，则需要多撬一次。如果装的是其他盒子的钥匙，相当于之前有一个循环多了一个数，但是次数不变。所以f[n+1] = (f[n]+1 + f[n]*n)/(n+1) = 1/(n+1) + f[n]。而f[1] = 1<br>这是数列为调和级数：当n很大的时候为log2(n+1) + 0.57721566490153286060651209(欧拉常数)</p>\n<p>一个数位于循环长度为k的概率为1/n(与k无关) 证明如下：<br><img src=\"http://siofive.qiniudn.com/hdu4986.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">double a[200000 + 100];</div><div class=\"line\">#define euler 0.57721566490153286060651209</div><div class=\"line\">int main () &#123;</div><div class=\"line\">\tdouble ans = 0;</div><div class=\"line\">\tfor (int i = 1; i &lt;= 200000; i++) &#123;</div><div class=\"line\">\t\tans += 1.0 / i;</div><div class=\"line\">\t\ta[i] = ans;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tint n;</div><div class=\"line\">\twhile(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">\t\tif (n &lt;= 200000) printf(&quot;%.4f\\n&quot;, a[n]);</div><div class=\"line\">\t\telse printf(&quot;%.4f\\n&quot;, log(n) + euler);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14534921    2015-08-16 17:59:18    Accepted    4986    0MS    3140K    565 B    G++    SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["递推","调和级数","置换"]},{"title":"Codeforces 55D Beautiful numbers（数位DP）","url":"http://yoursite.com/2015/08/16/CF55D/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/55/D\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/55/D</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个数字n，如果n能被它数位上的每一个非零数字整除，这个数就被称为Beautiful number。为给定区间[l, r]内有多少个Beautiful numbers。其中1≤l≤r≤9*1e18</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>一个数能被其所有数位上的非零数字整除，即被他们的最小公倍数整除，而1~9的lcm为2520。所以数位dp时只需要保存前面那些位的最小公倍数即可，到边界就把所有位的lcm求出了，为了判断这个数能不能被lcm整除，还需要保存这个数的值，显然记录是不行的。其实只要记录这个数模2520即可。这样可以设计如下dp：dfs(pos,mod,lcm,f)。pos为当前位，mod为模2520的值，lcm为最小公倍数，f表示前面是否达到上限。但其实1~9的所有最小公倍数只有48个。这样开dp[20][2520][48]的数组即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>标称<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int mod = 2520;</div><div class=\"line\">ll dp[20][mod][48];</div><div class=\"line\">ll l, r;</div><div class=\"line\">int num[mod + 10], cnt, t, bit[20];</div><div class=\"line\">void init() &#123;</div><div class=\"line\">\tfor (int i = 1; i &lt;= mod; i++) if (mod % i == 0) &#123;</div><div class=\"line\">\t\tnum[i] = cnt++;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int gcd(int x, int y) &#123;</div><div class=\"line\">\tif (!y) return x;</div><div class=\"line\">\treturn gcd(y, x % y);</div><div class=\"line\">&#125;</div><div class=\"line\">int lcm(int x, int y) &#123;</div><div class=\"line\">\treturn x / gcd(x, y) * y;</div><div class=\"line\">&#125;</div><div class=\"line\">ll dfs(int pos, int pre, int prelcm, bool flag) &#123;</div><div class=\"line\">\tif (pos == -1) return (pre % prelcm == 0);</div><div class=\"line\">\tll ret = dp[pos][pre][num[prelcm]];</div><div class=\"line\">\tif (!flag &amp;&amp; ret != -1) return ret;</div><div class=\"line\">\tint u = flag ? bit[pos] : 9;</div><div class=\"line\">\tret = 0;</div><div class=\"line\">\tfor (int i = 0; i &lt;= u; i++) &#123;</div><div class=\"line\">\t\tint now = (pre * 10 + i) % mod;</div><div class=\"line\">\t\tint nowlcm = prelcm;</div><div class=\"line\">\t\tif (i) nowlcm = lcm(prelcm, i);</div><div class=\"line\">\t\tret += dfs(pos - 1, now, nowlcm, (i == u ? 1 : 0) &amp;&amp; flag);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif (!flag) dp[pos][pre][num[prelcm]] = ret;</div><div class=\"line\">\treturn ret;</div><div class=\"line\">&#125;</div><div class=\"line\">ll calc(ll x) &#123;</div><div class=\"line\">\tint pos = 0;</div><div class=\"line\">\twhile(x) &#123;</div><div class=\"line\">\t\tbit[pos++] = x % 10;</div><div class=\"line\">\t\tx /= 10;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn dfs(pos - 1, 0, 1, 1);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">\tinit();</div><div class=\"line\">\tmemset(dp, -1, sizeof(dp));</div><div class=\"line\">\tscanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">\twhile(t--) &#123;</div><div class=\"line\">\t\tscanf(&quot;%I64d%I64d&quot;, &amp;l, &amp;r);</div><div class=\"line\">\t\tprintf(&quot;%I64d\\n&quot;, calc(r) - calc(l - 1));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","categories":["ACM"],"tags":["数位dp"]},{"title":"HDU 5057 Argestes and Sequence（树状数组+离线 OR 分块）","url":"http://yoursite.com/2015/08/08/hdu5057/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5057\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5057</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个数，m个询问。每个询问有两种操作，一个改变某一个数，即a[x]=y。还有一个是询问[l,r]区间内从右往左第d位为p的数字个数。<br>1≤n,m≤1e5, 0≤a[i]≤2^31 - 1, 1&lt;=D&lt;=10, 0&lt;=P&lt;=9</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>第一眼想法是给每一位每一个数字种一棵树状数组。这样需要开dp[10][10][100000]，然而这道题比较变态，会爆内存。（可以用char + unsigned short 来表示。刚好可以卡过。。）</p>\n<p>比较好的方式是分块：<br>分成400块，每块256个数。block[i][j][x]表示x块内第i为为p的数字总数。<br>当修改一个数的时候，O(1)的修改块内统计信息即可。<br>当查询一个区间时，如果在区间在同一个块，直接找一遍。如果不在同一个块内，则单独跑左右两块，然后中间整块的直接相加。复杂度为O(sqrt(n))</p>\n<p>还有一个用时间换空间的方式：<br>由于开不了3维的数组，那么我们开2维的数组，然后对每一位都算一遍所有的操作。<br>即把所有的操作离线下来，然后对每一位进行一次操作。不过在每次操作之前需要把数变为一开始的数。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>分块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">int block[400][11][10]; //400 blocks, each 256</div><div class=\"line\">int dig[100100][11];</div><div class=\"line\">int t, n, m, l, r, d, p;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        memset(block, 0, sizeof(block));</div><div class=\"line\">        int u;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">            int x = i &gt;&gt; 8;</div><div class=\"line\">            for (int j = 1; j &lt;= 10; j++) &#123;</div><div class=\"line\">                ++block[x][j][dig[i][j] = u % 10];</div><div class=\"line\">                u /= 10;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        char ch;</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            ch = getchar();</div><div class=\"line\">            while(ch != &apos;S&apos; &amp;&amp; ch != &apos;Q&apos;) ch = getchar();</div><div class=\"line\">            if (ch == &apos;S&apos;) &#123;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;l, &amp;r);</div><div class=\"line\">                int x = l &gt;&gt; 8;</div><div class=\"line\">                for (int j = 1; j &lt;= 10; j++) &#123;</div><div class=\"line\">                    --block[x][j][dig[l][j]];</div><div class=\"line\">                    ++block[x][j][dig[l][j] = r % 10];</div><div class=\"line\">                    r /= 10;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                scanf(&quot;%d%d%d%d&quot;, &amp;l, &amp;r, &amp;d, &amp;p);</div><div class=\"line\">                int bl = ((l - 1) &gt;&gt; 8) + 1, br = r &gt;&gt; 8, ans = 0;</div><div class=\"line\">                if (bl &lt;= br) &#123;</div><div class=\"line\">                    int bls = bl &lt;&lt; 8, brs = br &lt;&lt; 8;</div><div class=\"line\">                    for (int i = l; i &lt; bls; i++) ans += (dig[i][d] == p);</div><div class=\"line\">                    for (int i = brs; i &lt;= r; i++) ans += (dig[i][d] == p);</div><div class=\"line\">                    for (int i = bl; i &lt; br; i++) ans += block[i][d][p];</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    for (int i = l; i &lt;= r; i++) ans += (dig[i][d] == p);</div><div class=\"line\">                &#125;</div><div class=\"line\">                printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>树状数组+离线<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 1e5 + 10;</div><div class=\"line\">int t, n, m;</div><div class=\"line\">int a[10][N];</div><div class=\"line\">int b[N], c[N], ans[N];</div><div class=\"line\">struct node &#123;</div><div class=\"line\">\tint op;</div><div class=\"line\">\tint l, r, d, p;</div><div class=\"line\">&#125;p[N];</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; -x;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int p, int dig, int v) &#123;</div><div class=\"line\">\twhile(p &lt;= n) &#123;</div><div class=\"line\">\t\ta[dig][p] += v;</div><div class=\"line\">\t\tp += lowbit(p);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int get(int p, int dig) &#123;</div><div class=\"line\">\tint res = 0;</div><div class=\"line\">\twhile(p) &#123;</div><div class=\"line\">\t\tres += a[dig][p];</div><div class=\"line\">\t\tp -= lowbit(p);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn res;</div><div class=\"line\">&#125;</div><div class=\"line\">void clr() &#123;</div><div class=\"line\">\tfor (int i = 0; i &lt; 10; i++)</div><div class=\"line\">\t\tfor (int j = 0; j &lt;= n; j++) a[i][j] = 0;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        int u;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, b + i), c[i] = b[i];</div><div class=\"line\">        char ch;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">\t\t\tch = getchar();</div><div class=\"line\">\t\t\twhile(ch != &apos;S&apos; &amp;&amp; ch != &apos;Q&apos;) ch = getchar();</div><div class=\"line\">            if (ch == &apos;Q&apos;) &#123;</div><div class=\"line\">\t\t\t\tp[i].op = 1;</div><div class=\"line\">                scanf(&quot;%d%d%d%d&quot;, &amp;p[i].l, &amp;p[i].r, &amp;p[i].d, &amp;p[i].p);</div><div class=\"line\">                p[i].d--;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">            \tp[i].op = 0;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;p[i].l, &amp;p[i].r);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int now = 1;</div><div class=\"line\">        for (int i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">\t\t\tclr();</div><div class=\"line\">\t\t\tfor (int j = 1; j &lt;= n; j++) &#123;</div><div class=\"line\">\t\t\t\tb[j] = c[j];</div><div class=\"line\">\t\t\t\tadd(j, (b[j] / now) % 10, 1);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tfor (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">\t\t\t\tif (p[j].op == 1) &#123;</div><div class=\"line\">\t\t\t\t\tif (p[j].d != i) continue;</div><div class=\"line\">\t\t\t\t\tans[j] = get(p[j].r, p[j].p) - get(p[j].l - 1, p[j].p);</div><div class=\"line\">\t\t\t\t&#125; else &#123;</div><div class=\"line\">\t\t\t\t\tint x = (b[p[j].l] / now) % 10;</div><div class=\"line\">\t\t\t\t\tadd(p[j].l, x, -1);</div><div class=\"line\">\t\t\t\t\tx = (p[j].r / now) % 10;</div><div class=\"line\">\t\t\t\t\tadd(p[j].l, x, 1);</div><div class=\"line\">\t\t\t\t\tb[p[j].l] = p[j].r;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tnow *= 10;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) if (p[i].op) printf(&quot;%d\\n&quot;, ans[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14402325    2015-08-07 23:47:34    Accepted    5057    904MS    6060K    1808 B    G++    SIO__Five 分块</li>\n<li>14402693    2015-08-08 01:01:00    Accepted    5057    967MS    8624K    1894 B    G++    SIO__Five 树状数组+离线</li>\n</ul>\n","categories":["ACM"],"tags":["分块","树状数组","离线"]},{"title":"HDU 4994 Revenge of Nim（博弈）","url":"http://yoursite.com/2015/08/04/hdu4994/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4994\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4994</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n堆石头，从左往右排列，每堆石头有ai个石头（ai&gt;0)。现在两个人轮流取石头，规定每次只能从最左边的一堆取若干个（可以取完，最少取一个）。问先手赢还是输？</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>假设当前堆的石头个数大于1，那么这个人必赢。因为除了这堆、剩下的如果为必败态，那么可以将这堆取完，让对手面临必败态，反之，可以取到只剩下一个，然后让对手取一个石头，自己面临必胜态。注意有可能全是1的情况</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">int t, n, a[1111];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        int x = 1111;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            if (a[i] != 1) x = min(i, x);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (x == 1111) &#123;</div><div class=\"line\">            if (n % 2) puts(&quot;Yes&quot;);</div><div class=\"line\">            else puts(&quot;No&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (x % 2) puts(&quot;Yes&quot;);</div><div class=\"line\">        else puts(&quot;No&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14346124  2015-08-04 21:34:58 Accepted    4994    15MS    1576K   569 B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["博弈"]},{"title":"HDU 5303 Delicious Apples（贪心+背包）","url":"http://yoursite.com/2015/07/31/hdu5303/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5303\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5303</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个长度为L的圆形场地，有n种苹果树，每种苹果树距离原点距离为xi，有ai个苹果。现在有人从原点开始摘苹果，篮子最多装k个苹果，且每次摘完之后必须回到原点才能清空篮子。问他最少需要走多少距离。<br>保证总的苹果小于等于10^5</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>如果从中点断开，把圆分成两半，则两边的贪心取，然后折道返回，可以得到解。但是这不是最优解，有可能最后剩下一些苹果，一次性绕一个圆形取完。可以发现，最多只能绕一圈。但是发现这个结论之后，还是不好处理。一个巧妙的想法是：<br>把每一个苹果当做一个点，分成左右两部分，然后分别处理。举左边一半为例，以sum[i]表示把前i个苹果全部取回的最小代价，则有：<br>sum[i] = d<a href=\"i &lt;= k\">i</a><br>sum[i] = sum[i - k] + d<a href=\"i &gt; k\">i</a><br>之后枚举需要走一圈摘的苹果（可以发现这些苹果一定是离原点最远的k个点）</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int t, n, k, m, l;</div><div class=\"line\">const int N = 1e5 + 10;</div><div class=\"line\">vector&lt;int&gt; a, b;</div><div class=\"line\">ll s1[N], s2[N];</div><div class=\"line\">void work(vector&lt;int&gt; &amp;a, ll * s) &#123;</div><div class=\"line\">    for (int i = 0; i &lt; a.size(); i++) &#123;</div><div class=\"line\">        if (i &lt; k) s[i + 1] = a[i];</div><div class=\"line\">        else s[i + 1] = s[i + 1 - k] + a[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d%d&quot;, &amp;l, &amp;n, &amp;k);</div><div class=\"line\">        int u, v;</div><div class=\"line\">        a.clear();</div><div class=\"line\">        b.clear();</div><div class=\"line\">        m = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            m += v;</div><div class=\"line\">            if (u &gt; l / 2) &#123;</div><div class=\"line\">                u = l - u;</div><div class=\"line\">                while(v--) b.pb(u);</div><div class=\"line\">            &#125; else while(v--) a.pb(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(a.begin(), a.end());</div><div class=\"line\">        sort(b.begin(), b.end());</div><div class=\"line\">        work(a, s1);</div><div class=\"line\">        work(b, s2);</div><div class=\"line\">        ll ans = s1[a.size()] * 2 + s2[b.size()] * 2;</div><div class=\"line\">        if (m &lt;= k) ans = min(ans, (ll)l);</div><div class=\"line\">        else &#123;</div><div class=\"line\">            for (int i = 0; i &lt; a.size() &amp;&amp; i &lt;= k; i++) &#123;</div><div class=\"line\">                ll res = s1[a.size() - i] * 2 + s2[b.size() - (k - i)] * 2 + l;</div><div class=\"line\">                ans = min(ans, res);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14277804  2015-07-31 17:14:30 Accepted    5303    889MS   3308K   1345 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法","贪心","背包"]},{"title":"HDU 5301 Buildings（数学, 想法）","url":"http://yoursite.com/2015/07/29/hdu5301/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5301\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5301</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n<em>m的矩形，其中在(x,y)位置有一个坏的1</em>1的矩形不能用，现在问要将该矩阵用其他小矩阵填满，且这些小矩阵至少要和大矩阵的四条边中的一条边有一些公共部分。现在要是这些小矩形中最大的面积最小，求该面积。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先如果没有坏的矩形，假设最后分得的矩形为a<em>b，那么一定还可以继续分为1</em>b或者1<em>a的形式，答案一定为min(n + 1, m + 1)/2。<br>现在加入了一个坏的矩形，如下图所示：<br><img src=\"http://siofive.qiniudn.com/hdu5301.png\" alt=\"\"><br>其中up和down都不包括小矩形，而left和right都包括该小矩形。<br>假设不考虑坏矩形，答案应该为ans=(n+1)/2<br>考虑坏矩形，如果min(left, right) &lt;= ans, 那么左半边或者右边边直接用n</em>min(left, right)划分，另一边则还按照原先的划分。<br>如果min(left,right) &gt; ans，那么就应该用min(max(up, down), min(left, right))中的来划分。（这里还要注意如果up==down的话，最小值还是ans）<br>最后有一个trick：如果n==m &amp;&amp; x == y &amp;&amp; 2 * x + 1 == n 那么答案应该为 n/2</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">int n, m, x, y;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d%d%d&quot;, &amp;n, &amp;m, &amp;x, &amp;y)) &#123;</div><div class=\"line\">        if (n &gt; m) swap(n, m), swap(x, y);</div><div class=\"line\">        int t = (n + 1) / 2;</div><div class=\"line\">        int up = x - 1;</div><div class=\"line\">        int dw = n - x;</div><div class=\"line\">        int lf = y;</div><div class=\"line\">        int rg = m - y + 1;</div><div class=\"line\">        if (min(lf, rg) &gt; t &amp;&amp; up != dw) t = min(max(up, dw), min(lf, rg));</div><div class=\"line\">        if ((n == m) &amp;&amp; (n % 2 == 1) &amp;&amp; (x == y) &amp;&amp; (x * 2 - 1 == n)) t = n / 2;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, t);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14246606  2015-07-29 21:59:37 Accepted    5301    15MS    1564K   625 B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["数学","想法"]},{"title":"HDU 5305 Friends（搜索）","url":"http://yoursite.com/2015/07/29/hdu5305/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5305\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5305</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个人，如果两两之间是朋友，这种友情有两种性质，一是离线朋友，二是在线朋友。现在有m个朋友关系，问每一个人的离线朋友和在线朋友数相等的情况数。<br>其中1≤n≤8,0≤m≤n*(n-1)/2</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我的想法是：这个图会有很多个联通块，所以对于每一个联通块，进行搜索。搜索时，每找到一个人，便枚举其离线和在线的所有情况，然后找下一个人，最后所有人都分配好之后答案加1。不同联通块之间答案相乘。需要注意如果m为0答案为1。</p>\n<p>看了标程之后，不得不佩服，代码写的非常犀利。具体是；<br>从第一个点开始，如果和其他点有边相连，则先把边赋值为+1，然后搜索与第一个点相连的下一个点，并对边继续赋值。如果最后全部赋值完之后，该点的边符合条件，则继续搜下一个点。在回溯的时候在把该边赋值为-1。这样从第一个点搜到最后一个点即可得到答案。（dfs的过程不好描述。。具体看代码）</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>标称<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">int T, a[10][10], n, m, ans, du[10];</div><div class=\"line\">void dfs(int x, int y) &#123;</div><div class=\"line\">    if (x &gt; n) ans++; //找到一个答案</div><div class=\"line\">    else if (y &gt; n) &#123; //x点的所有边已经赋值完</div><div class=\"line\">        if (du[x]) return ; //du[x] != 0 表示赋值失败</div><div class=\"line\">        dfs(x + 1, x + 2); //成功，搜索下一个点</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        if (a[x][y]) &#123;</div><div class=\"line\">            du[x]++;</div><div class=\"line\">            du[y]++;</div><div class=\"line\">            dfs(x, y + 1);</div><div class=\"line\">            du[x] -= 2;</div><div class=\"line\">            du[y] -= 2;</div><div class=\"line\">            dfs(x, y + 1);</div><div class=\"line\">            du[x]++;</div><div class=\"line\">            du[y]++;</div><div class=\"line\">        &#125; else dfs(x, y + 1);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;T;</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++)</div><div class=\"line\">            for (int j = 1; j &lt;= n; j++)</div><div class=\"line\">                a[i][j] = 0;</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            a[u][v] = a[v][u] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        dfs(1, 2);</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>比赛写的搜索+二进制枚举<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">int a[8][8], n, m, T;</div><div class=\"line\">int b[8];</div><div class=\"line\">vector&lt;int&gt; g[8];</div><div class=\"line\">int cnt;</div><div class=\"line\">int l[8];</div><div class=\"line\">void dfs(int u) &#123;</div><div class=\"line\">    l[cnt++] = u;</div><div class=\"line\">    b[u] = 1;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (!b[v]) dfs(v);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int fk = 0;</div><div class=\"line\">void work(int i) &#123;</div><div class=\"line\">    if (i == cnt) &#123;</div><div class=\"line\">        fk++;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (i &gt; cnt) return ;</div><div class=\"line\">    int od = 0, ev = 0, u = l[i];</div><div class=\"line\">    int out[8], cc = 0;</div><div class=\"line\">    for (int ii = 0; ii &lt; g[u].size(); ii++) &#123;</div><div class=\"line\">        int v = g[u][ii];</div><div class=\"line\">        if (a[u][v] == 1) od++;</div><div class=\"line\">        else if (a[u][v] == 2) ev++;</div><div class=\"line\">        else if (a[u][v] == 0) out[cc++] = v;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (cc == 0) &#123;</div><div class=\"line\">        if (od == ev) work(i + 1);</div><div class=\"line\">        else return ;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        int t = 1 &lt;&lt; cc;</div><div class=\"line\">        for (int j = 0; j &lt; t; j++) &#123;</div><div class=\"line\">            int ck = 0;</div><div class=\"line\">            for (int k = 0; k &lt; cc; k++) if (j &gt;&gt; k &amp; 1) ck++;</div><div class=\"line\">            if (ck + od != g[u].size() / 2) continue;</div><div class=\"line\">            int sb[8];</div><div class=\"line\">            for (int ii = 0; ii &lt; n; ii++)</div><div class=\"line\">                sb[ii] = a[u][ii];</div><div class=\"line\">            int k = 0;</div><div class=\"line\">            for (k = 0; k &lt; cc; k++) &#123;</div><div class=\"line\">                int v = out[k];</div><div class=\"line\">                if (j &gt;&gt; k &amp; 1) &#123;</div><div class=\"line\">                    a[u][v] = a[v][u] = 1;</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    a[u][v] = a[v][u] = 2;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            for (int k = 0; k &lt; cc; k++) &#123;</div><div class=\"line\">                int v = out[k];</div><div class=\"line\">            &#125;</div><div class=\"line\">            work(i + 1);</div><div class=\"line\">            for (int ii = 0; ii &lt; n; ii++)</div><div class=\"line\">                a[u][ii] = a[ii][u] = sb[ii];</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;T;</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) g[i].clear();</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int l = 0; l &lt; m; l++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            u--, v--;</div><div class=\"line\">            g[u].pb(v);</div><div class=\"line\">            g[v].pb(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (m == 0) &#123;</div><div class=\"line\">            puts(&quot;1&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (m % 2) &#123;</div><div class=\"line\">            puts(&quot;0&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        bool flag = false;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) if (g[i].size() % 2) &#123;</div><div class=\"line\">                puts(&quot;0&quot;);</div><div class=\"line\">                flag = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        if (flag) continue;</div><div class=\"line\">        memset(b, 0, sizeof(b));</div><div class=\"line\">        memset(a, 0, sizeof(a));</div><div class=\"line\">        int ans = 1;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) if (!b[i] &amp;&amp; g[i].size()) &#123;</div><div class=\"line\">                cnt = 0;</div><div class=\"line\">                dfs(i);</div><div class=\"line\">                fk = 0;</div><div class=\"line\">                work(0);</div><div class=\"line\">                ans *= fk;</div><div class=\"line\">            &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14244955  2015-07-29 20:27:28 Accepted    5305    31MS    1408K   672 B   G++ SIO__Five 标称</li>\n<li>14244711  2015-07-29 20:16:34 Accepted    5305    93MS    1616K   2849 B  G++ SIO__Five 二进制枚举</li>\n</ul>\n","categories":["ACM"],"tags":["搜索"]},{"title":"HDU 5297 Y sequence（数论，容斥，迭代）","url":"http://yoursite.com/2015/07/29/hdu5297/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5297\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5297</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>定义一个序列，其中每一个数都不能表示为a^b(其中2≤b≤r)。现在给定n和r。问排在第n位的数字是多少？<br>其中n≤2*1e18,2≤r≤62</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>乍一看这道题完全没有想法。<br>其实可以先考虑任意给定一个数字n，求n排在第几位。这就需要把2, 3, …… r次方的数都删去。可以发现删去2次方时，4次方，8次方，以此类推的都被删过了。所以我们只需要考虑质数即可。<br>当然，这样还是有问题，比如6次方在删2次方、3次方时被多干掉一次，所以需要用容斥定理。我之前一直以为容斥要用dfs来搜。今天学到了一个新姿势。详细见代码<br>需要注意的细节是1肯定不行，所以最后要删去。<br>求出来数字n是多少位之后，就可以搞了。常见的想法是二分，但是这道题目的区间特别大，二分并不合适。<br>这里采用了迭代的思想，假设当前now排在第m位，距离第n位还有n-m位，那么就再算now+m排在第几位，以此类推直到找到最后的答案。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">using namespace std;</div><div class=\"line\">ll n;</div><div class=\"line\">int r;</div><div class=\"line\">vector&lt;ll&gt; p;</div><div class=\"line\">vector&lt;ll&gt; f;</div><div class=\"line\">void getprime() &#123;</div><div class=\"line\">    for (int i = 2; i &lt;= 61; i++) &#123;</div><div class=\"line\">        bool flag = true;</div><div class=\"line\">        for (int j = 2; j &lt;= sqrt(i + 0.5); j++) if (i % j == 0) &#123;</div><div class=\"line\">            flag = false;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (flag) p.push_back(-i);//, cout&lt;&lt;i&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void getfac() &#123;</div><div class=\"line\">    f.clear();</div><div class=\"line\">    for (int i = 0; i &lt; p.size() &amp;&amp; abs(p[i]) &lt;= r; i++) &#123;</div><div class=\"line\">        int num = f.size();</div><div class=\"line\">        for (int j = 0; j &lt; num; j++) &#123;</div><div class=\"line\">            if (abs(f[j] * p[i]) &gt; 63) continue; //2的64次就已经超过了最大值</div><div class=\"line\">            f.push_back(f[j] * p[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        f.push_back(p[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll cal(ll n) &#123;</div><div class=\"line\">    ll res = n;</div><div class=\"line\">    for (int i = 0; i &lt; f.size(); i++) &#123;</div><div class=\"line\">        ll p = (ll)pow(n + 0.5, 1.0 / abs(f[i])) - 1;</div><div class=\"line\">        if (f[i] &gt; 0) res += p;</div><div class=\"line\">        else res -= p;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res - 1;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    getprime();</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%I64d%d&quot;, &amp;n, &amp;r);</div><div class=\"line\">        getfac();</div><div class=\"line\">        ll now = n, ans;</div><div class=\"line\">        while(1) &#123;</div><div class=\"line\">            ans = cal(now);</div><div class=\"line\">            if (ans == n) break;</div><div class=\"line\">            now += n - ans;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, now);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">/*</div><div class=\"line\">10</div><div class=\"line\">20000000000000000 63</div><div class=\"line\">*/</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14238099  2015-07-29 15:31:11 Accepted    5297    358MS   1580K   1221 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["数论","容斥","迭代"]},{"title":"HDU 4957 Poor Mitsui（贪心, 大数, 想法）","url":"http://yoursite.com/2015/07/27/hdu 4957/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4957\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4957</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个水龙头，单位时间出水为V。有n个破的水桶，每个水桶漏水的速度为ai，每个水桶要接到bi的水。现在问能否在某一时刻使得各个水桶符合条件，求最小的该时刻。<br>其中1≤n,v,ai,bi≤40</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>考虑两个水桶，第一个为ai,bi，第二个为aj,bj。<br>把第一个排在前面的时间为： $\\frac{b_j}{v-a_j}+\\frac{\\frac{a_i*b_j}{v-a_j}+b_i}{v-a_i}$</p>\n<p>把第二个排在前面的时间为： $\\frac{b_i}{v-a_i}+\\frac{\\frac{a_j*b_i}{v-a_i}+b_j}{v-a_j}$</p>\n<p>所以可以发现只需要比较 ${b_i}\\times{a_j}$ 和 ${b_j}\\times{a_i}$</p>\n<p>的大小即可</p>\n<p>这道题有几个坑点：</p>\n<ol>\n<li>如果水桶需要的水量不为零，且水桶漏水的速度大于v不行</li>\n<li>如果水桶需要的水量为0时，所需要的时间应该是为0.</li>\n<li>这道题的最后的答案可能非常大，超double了。我用了java中的BigDecimal</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">BigDecimal除一个数得到无限循环小数时会有问题，用：</div><div class=\"line\">    BigDecimal.divide(BigDecimal, k, BigDecimal.ROUND_HALF_UP); 来保留k为小数</div><div class=\"line\">BigDecimal四舍五入：</div><div class=\"line\">    BigDecimal.setScale(0, BigDecimal.ROUND_HALF_UP);</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.*;</div><div class=\"line\">import java.math.*;</div><div class=\"line\"></div><div class=\"line\">public class Main &#123;</div><div class=\"line\">    static final int N = 50;</div><div class=\"line\">    public static void main(String args[]) &#123;</div><div class=\"line\">        int[] a = new int[N];</div><div class=\"line\">         int[] b = new int[N];</div><div class=\"line\">        Scanner in = new Scanner(System.in);</div><div class=\"line\">        int test_count = in.nextInt();</div><div class=\"line\">        int n, v;</div><div class=\"line\">        while (test_count -- &gt; 0) &#123;</div><div class=\"line\">            n = in.nextInt();</div><div class=\"line\">            v = in.nextInt();</div><div class=\"line\">            int flag = 1;</div><div class=\"line\">            for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">                a[i] = in.nextInt();</div><div class=\"line\">            &#125;</div><div class=\"line\">            for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">                b[i] = in.nextInt();</div><div class=\"line\">                if (a[i] &gt;= v &amp;&amp; b[i] != 0) flag = 0;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (flag == 0) &#123;</div><div class=\"line\">                System.out.println(-1);</div><div class=\"line\">                continue;</div><div class=\"line\">            &#125;</div><div class=\"line\">            for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">                for (int j = i + 1; j &lt; n; j++) &#123;</div><div class=\"line\">                    if (b[i] * a[j] &gt;= b[j] * a[i]) &#123;</div><div class=\"line\">                        int tmp;</div><div class=\"line\">                        tmp = a[i]; a[i] = a[j]; a[j] = tmp;</div><div class=\"line\">                        tmp = b[i]; b[i] = b[j]; b[j] = tmp;</div><div class=\"line\">                        //swap(a[i], a[j]);</div><div class=\"line\">                        //swap(b[i], b[j]);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            BigDecimal tot = BigDecimal.ZERO;</div><div class=\"line\">            BigDecimal now;</div><div class=\"line\">            for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">                if (b[i] == 0) continue;</div><div class=\"line\">                now = tot.multiply(BigDecimal.valueOf(a[i])).add(BigDecimal.valueOf(b[i]));</div><div class=\"line\">                now = now.divide(BigDecimal.valueOf(v - a[i]), 200, BigDecimal.ROUND_HALF_UP);</div><div class=\"line\">                tot = tot.add(now);</div><div class=\"line\">            &#125;</div><div class=\"line\">            tot =  tot.setScale(0, BigDecimal.ROUND_HALF_UP);</div><div class=\"line\">            System.out.println(tot);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14209027  2015-07-27 23:02:04 Accepted    4957    436MS   13616K  1672 B  Java    SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法","大数","贪心"]},{"title":"HDU 4932 Miaomiao's Geometry（想法）","url":"http://yoursite.com/2015/07/27/hdu 4932/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4932\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4932</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一些点，要用一些等长的线段去覆盖这些点。问这些线段最长可以为多少？这些线段不能够相交，并且点只能够在线段的两个端点。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我一上来就是二分。wa成狗。。<br>其实二分是不对的，如0,1,4,5 答案为3，但是2不行<br>仔细想想，其实会发现答案一定其中两个相邻点之间距离或者距离的一半。因为如果距离小于一半，那么可以扩大，扩到一半，这样两个线段相交。如果大于一半，小于该距离，同样可以扩大到该距离位置。对每个可行值进行判断即可。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#define eps 1e-7</div><div class=\"line\">int t, n;</div><div class=\"line\">double a[100];</div><div class=\"line\">using namespace std;</div><div class=\"line\">bool check(double x) &#123;</div><div class=\"line\">    double now = a[0];</div><div class=\"line\">    for (int i = 1; i &lt; n - 1; i++) &#123;</div><div class=\"line\">        if (now == a[i]) continue;</div><div class=\"line\">        if (a[i] - now &gt;= x) now = a[i];</div><div class=\"line\">        else if (a[i] + x &lt;= a[i + 1]) now = a[i] + x;</div><div class=\"line\">        else return false;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%lf&quot;, a + i);</div><div class=\"line\">        sort(a, a + n);</div><div class=\"line\">        /*  二分有问题</div><div class=\"line\">        double l = 1.0, r = a[n - 1] * 1.0 - a[0], mid;</div><div class=\"line\">        while(fabs(l - r) &gt; eps) &#123;</div><div class=\"line\">            mid = (l + r) / 2;</div><div class=\"line\">            if (check(mid)) l = mid;</div><div class=\"line\">            else r = mid;</div><div class=\"line\">        &#125;</div><div class=\"line\">        */</div><div class=\"line\">        double ans = 0;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            double tmp = a[i] - a[i - 1];</div><div class=\"line\">            if (check(tmp)) ans = max(ans, tmp);</div><div class=\"line\">            else if (check(tmp / 2)) ans = max(ans, tmp / 2);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%.3f\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14208548  2015-07-27 22:17:31 Accepted    4932    15MS    1608K   1022B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 5312 Sequence（想法, 三角形数）","url":"http://yoursite.com/2015/07/27/BC1st-3 hdu 5312/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5312\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5312</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个数列，第n(n≥1)项是3n*(n-1)+1. 现在他想知道对于一个给定的整数m, 是否可以表示成若干项上述数列的和. 如果可以, 那么需要的最小项数是多少?<br>其中1≤m≤1e9</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><img src=\"http://siofive.qiniudn.com/hdu5312.png\" alt=\"\"><br>神奇：一个自然数最多只需要3个三角形数即可表示。<br>我一开始用mp处理，然后T了。。mp果然速度慢。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 200000;</div><div class=\"line\">int t, m, cnt;</div><div class=\"line\">int a[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    for (int i = 1; ; i++) &#123;</div><div class=\"line\">        a[cnt++] = 3 * i * (i - 1) + 1;</div><div class=\"line\">        if (a[cnt - 1] &gt; 1e9) break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;m);</div><div class=\"line\">        if (m % 6 == 0) &#123;</div><div class=\"line\">            puts(&quot;6&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (m % 6 == 1) &#123;</div><div class=\"line\">            int id = lower_bound(a, a + cnt, m) - a;</div><div class=\"line\">            if (a[id] == m) puts(&quot;1&quot;);</div><div class=\"line\">            else puts(&quot;7&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        bool flag = false;</div><div class=\"line\">        if (m % 6 == 2) &#123;</div><div class=\"line\">            for (int i = 0; 2 * a[i] &lt;= m; i++) &#123;</div><div class=\"line\">                int id = lower_bound(a, a + cnt, m - a[i]) - a;</div><div class=\"line\">                if (a[id] == m - a[i]) &#123;</div><div class=\"line\">                    puts(&quot;2&quot;);</div><div class=\"line\">                    flag = true;</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (!flag) puts(&quot;8&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, m % 6);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14208127  2015-07-27 21:45:34 Accepted    5312    1014MS  1656K   1075 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法","三角形数"]},{"title":"HDU 5313 Bipartite Graph（二分图染色, dp, bitset）","url":"http://yoursite.com/2015/07/27/BC1st-4 hdu 5313/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5313\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5313</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一张图，有n个点，m条边，保证其连通的部分是二分图。问要使该图成为完全二分图，问最多能够加多少条边。<br>其中2≤n≤10000,0≤m≤100000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先，当点数固定时，两点之间越接近，完全二分图的边数越大。所以对每一个子图进行二分图染色，得到[ai, bi]的对。其中在X部有ai点，在Y部有bi点。把单一的点处理成[1, 0]。<br>用bitset<n>dp来表示状态，一开始dp[0] = 1，表示X部选了0个点是可行的。然后每次考虑pair对，转移方程为dp = (dp &lt;&lt; ai) | (dp &lt;&lt; aj)。即X部可以加上ai或者aj个点。最后选择差值最小的即可。</n></p>\n<p>我比赛的时候用set来处理，结果在BC的评测平台上T了。赛后HDU上过了。。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;bitset&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int maxn = 10000 + 10;</div><div class=\"line\">int n, m;</div><div class=\"line\">bool has[maxn];</div><div class=\"line\">int in[maxn];</div><div class=\"line\">int od, ev, cc;</div><div class=\"line\">vector&lt;int&gt; g[maxn];</div><div class=\"line\">pair&lt;int, int&gt; gg[maxn];</div><div class=\"line\">void dfs(int u) &#123;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (!in[v]) &#123;</div><div class=\"line\">            in[v] = in[u] + 1;</div><div class=\"line\">            if (in[v] == 3) in[v] = 1;</div><div class=\"line\">            if (in[v] == 2) ev++;</div><div class=\"line\">            else od++;</div><div class=\"line\">            dfs(v);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">bitset&lt;maxn&gt; dp;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) g[i].clear(), has[i] = false, in[i] = 0;</div><div class=\"line\">        int u, v ;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v), g[v].pb(u);</div><div class=\"line\">            has[u] = has[v] = true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int cc = 0;</div><div class=\"line\">        for (int u = 1; u &lt;= n; u++) if (!in[u] &amp;&amp; has[u]) &#123;</div><div class=\"line\">                od = 1, ev = 0;</div><div class=\"line\">                in[u] = 1;</div><div class=\"line\">                dfs(u);</div><div class=\"line\">                gg[cc++] = &#123;od, ev&#125;;</div><div class=\"line\">        &#125;</div><div class=\"line\">        //bitset优化</div><div class=\"line\">        dp[0] = 1;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) if (!has[i]) gg[cc++] = &#123;1, 0&#125;;</div><div class=\"line\">        for (int i = 0; i &lt; cc; i++)</div><div class=\"line\">            dp = (dp &lt;&lt; gg[i].first) | (dp &lt;&lt; gg[i].second);</div><div class=\"line\">        int ans;</div><div class=\"line\">        for (int i = n/ 2; i &gt;= 0; i--)&#123;</div><div class=\"line\">            if (dp[i]) &#123;</div><div class=\"line\">                ans = i;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans * (n - ans) - m);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14206240  2015-07-27 20:14:49 Accepted    5313    546MS   3280K   1767 B  C++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["dp","二分图染色","bitset"]},{"title":"HDU 5293 Tree chain problem（树dp，lca，树状数组）","url":"http://yoursite.com/2015/07/27/hdu 5293/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5293\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5293</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个点的树，其中m条链有权值。现在需要选择一些链，使得其和最大。并且任意两条链之间没有公共点。1 ≤ n, m ≤ 100000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>题解：<br><img src=\"http://siofive.qiniudn.com/hdu5293.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div></pre></td><td class=\"code\"><pre><div class=\"line\">#pragma comment(linker, &quot;/STACK:1024000000,1024000000&quot;)</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 100000 + 100;</div><div class=\"line\">int t, n, m, cnt, lev;</div><div class=\"line\">int l[N], r[N], dep[N];</div><div class=\"line\">int f[20][N];</div><div class=\"line\">vector&lt;int&gt; g[N];</div><div class=\"line\">void dfs(int u, int fa) &#123;</div><div class=\"line\">    l[u] = ++cnt;</div><div class=\"line\">    dep[u] = dep[fa] + 1;</div><div class=\"line\">    if (fa != 0) f[0][u] = fa;</div><div class=\"line\">    else f[0][u] = 1;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (v == fa) continue;</div><div class=\"line\">        dfs(v, u);</div><div class=\"line\">    &#125;</div><div class=\"line\">    r[u] = ++cnt;</div><div class=\"line\">&#125;</div><div class=\"line\">void st() &#123;</div><div class=\"line\">    int i, j;</div><div class=\"line\">    for (j = 1; 1 &lt;&lt; j &lt; n; j++)</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++)</div><div class=\"line\">            f[j][i] = f[j - 1][f[j - 1][i]];</div><div class=\"line\">    lev = j - 1;</div><div class=\"line\">&#125;</div><div class=\"line\">int lca(int x, int y) &#123;</div><div class=\"line\">    if (dep[x] &lt; dep[y]) swap(x, y);</div><div class=\"line\">    int d = dep[x] - dep[y];</div><div class=\"line\">    for (int i = lev; i &gt;= 0; i--)</div><div class=\"line\">        if (d &gt;&gt; i &amp; 1)</div><div class=\"line\">            x = f[i][x];</div><div class=\"line\">    if (x == y) return x;</div><div class=\"line\">    for (int i = lev; i &gt;= 0; i--)</div><div class=\"line\">        if (f[i][x] != f[i][y])</div><div class=\"line\">            x = f[i][x], y = f[i][y];</div><div class=\"line\">    return f[0][x];</div><div class=\"line\">&#125;</div><div class=\"line\">int cs[N * 2], cd[N * 2];</div><div class=\"line\">int sum[N], d[N];</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int u, v, lca, val;</div><div class=\"line\">&#125;p[N];</div><div class=\"line\">vector&lt;int&gt; e[N];</div><div class=\"line\">int lowbit(int x) &#123;</div><div class=\"line\">    return x &amp; (-x);</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int p, int va, int *c) &#123;</div><div class=\"line\">    while(p &lt;= 2 * n) &#123;</div><div class=\"line\">        c[p] += va;</div><div class=\"line\">        p += lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int getsum(int p, int *c) &#123;</div><div class=\"line\">    int res = 0;</div><div class=\"line\">    while(p) &#123;</div><div class=\"line\">        res += c[p];</div><div class=\"line\">        p -= lowbit(p);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div><div class=\"line\">void solve(int u, int fa) &#123;</div><div class=\"line\">    sum[u] = d[u] = 0;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i];</div><div class=\"line\">        if (v == fa) continue;</div><div class=\"line\">        solve(v, u);</div><div class=\"line\">        sum[u] += d[v];</div><div class=\"line\">    &#125;</div><div class=\"line\">    d[u] = sum[u];</div><div class=\"line\">    for (int i = 0; i &lt; e[u].size(); i++) &#123;</div><div class=\"line\">        int x = p[e[u][i]].u;</div><div class=\"line\">        int y = p[e[u][i]].v;</div><div class=\"line\">        int tmp = getsum(l[x], cs) + getsum(l[y], cs) - getsum(l[x], cd) - getsum(l[y], cd) + sum[u];</div><div class=\"line\">        d[u] = max(d[u], tmp + p[e[u][i]].val);</div><div class=\"line\">    &#125;</div><div class=\"line\">    add(l[u], d[u], cd);</div><div class=\"line\">    add(r[u], -d[u], cd);</div><div class=\"line\">    add(l[u], sum[u], cs);</div><div class=\"line\">    add(r[u], -sum[u], cs);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        cs[0] = cd[0] = 0;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            int j = 2 * i - 1;</div><div class=\"line\">            cs[j] = cs[j + 1] = cd[j] = cd[j + 1] = 0;</div><div class=\"line\">            g[i].clear();</div><div class=\"line\">            e[i].clear();</div><div class=\"line\">        &#125;</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v); g[v].pb(u);</div><div class=\"line\">        &#125;</div><div class=\"line\">        cnt = 0;</div><div class=\"line\">        dep[0] = 0;</div><div class=\"line\">        dfs(1, 0);</div><div class=\"line\">        st();</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;p[i].u, &amp;p[i].v, &amp;p[i].val);</div><div class=\"line\">            p[i].lca = lca(p[i].u, p[i].v);</div><div class=\"line\">            e[p[i].lca].pb(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">        solve(1, 0);</div><div class=\"line\">        printf(&quot;%d\\n&quot;, d[1]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14199151  2015-07-27 15:26:38 Accepted    5293    1388MS  22824K  2513 B  C++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["树状数组","LCA","倍增法","树dp"]},{"title":"CF 313C Gerald and Giant Chess（组合数学+dp）","url":"http://yoursite.com/2015/07/25/CF313C/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/contest/559/problem/C\" target=\"_blank\" rel=\"external\">http://codeforces.com/contest/559/problem/C</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一张H*W的网格图，有N个坏点，求左上角走到右下角对10^9+7取模。<br>1 ≤ H , W ≤ 10^5， 1 ≤ n ≤ 2000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p><img src=\"http://siofive.qiniudn.com/CF313C.png\" alt=\"\"><br>来自：<a href=\"http://blog.csdn.net/popoqqq/article/details/46121519\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/popoqqq/article/details/46121519</a><br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define debug puts(&quot;=====================&quot;);</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">int h, w, n;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int x, y;</div><div class=\"line\">&#125;p[2010];</div><div class=\"line\">bool cmp(node s, node v) &#123;</div><div class=\"line\">    if (s.x == v.x) return s.y &lt; v.y;</div><div class=\"line\">    return s.x &lt; v.x;</div><div class=\"line\">&#125;</div><div class=\"line\">const int N = 200100;</div><div class=\"line\">const ll mod = 1e9 + 7;</div><div class=\"line\">ll inv[N], f[N], ff[N], dp[2010];</div><div class=\"line\">void init(int n) &#123;</div><div class=\"line\">    inv[0] = inv[1] = 1;</div><div class=\"line\">    f[0] = f[1] = 1;</div><div class=\"line\">    ff[0] = ff[1] = 1;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">        f[i] = f[i - 1] * i % mod;</div><div class=\"line\">        inv[i] = inv[mod % i] * (mod - mod / i) % mod;</div><div class=\"line\">        ff[i] = ff[i - 1] * inv[i] % mod;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ll C(int n, int m) &#123;</div><div class=\"line\">    return (f[n] * ff[m] % mod) * ff[n - m] % mod;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;h&gt;&gt;w&gt;&gt;n;</div><div class=\"line\">    init(h + w);</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;p[i].x, &amp;p[i].y);</div><div class=\"line\">        p[i].x--, p[i].y--;</div><div class=\"line\">    &#125;</div><div class=\"line\">    p[n].x = h - 1, p[n].y = w - 1;</div><div class=\"line\">    sort(p, p + n + 1, cmp);</div><div class=\"line\">    for (int i = 0; i &lt;= n; i++) &#123;</div><div class=\"line\">        dp[i] = C(p[i].x + p[i].y, p[i].x);</div><div class=\"line\">        for (int j = 0; j &lt; i; j++) &#123;</div><div class=\"line\">            if (p[j].y &gt; p[i].y) continue;</div><div class=\"line\">            dp[i] = (dp[i] - C(p[i].x + p[i].y - p[j].x - p[j].y, p[i].x - p[j].x) * dp[j] % mod + mod) % mod;</div><div class=\"line\">        &#125;</div><div class=\"line\">        //cout&lt;&lt;dp[i]&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;dp[n]&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>12220472  2015-07-25 05:40:33 SIO__Five#  C - Gerald and Giant Chess  GNU C++ Accepted    139 ms  4700 KB</li>\n</ul>\n","categories":["ACM"],"tags":["dp","组合数学"]},{"title":"HDU 5296 Annoying problem（LCA+点到链的最短距离）","url":"http://yoursite.com/2015/07/22/hdu 5296/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5296\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5296</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定n个点的树，q个询问。维护一个集合s，有两种操作<br>1 u，表示选中树上的点u，加入集合<br>2 u，表示取消选中点u，从集合中删除<br>对于每个操作输出：<br>使得选中的点联通的边权和是多少。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>题解：<br><img src=\"http://siofive.qiniudn.com/hdu 5296.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 100010;</div><div class=\"line\">int dep[N], dfn[N], rdfn[N], f[17][N], lev, dist[N];</div><div class=\"line\">bool in[N];</div><div class=\"line\">vector&lt; pair&lt;int, int&gt; &gt; g[N];</div><div class=\"line\">int T, n, q, cnt;</div><div class=\"line\">set&lt;int&gt; s;</div><div class=\"line\">void dfs(int u, int fa) &#123;</div><div class=\"line\">    dfn[u] = ++cnt;</div><div class=\"line\">    rdfn[cnt] = u;</div><div class=\"line\">    dep[u] = dep[fa] + 1;</div><div class=\"line\">    f[0][u] = fa;</div><div class=\"line\">    for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">        int v = g[u][i].fi, w = g[u][i].se;</div><div class=\"line\">        if (v == fa) continue;</div><div class=\"line\">        dist[v] = dist[u] + w;</div><div class=\"line\">        dfs(v, u);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void st() &#123;</div><div class=\"line\">    int i, j;</div><div class=\"line\">    for (j = 1; 1 &lt;&lt; j &lt; n; j++)</div><div class=\"line\">        for (i = 1; i &lt;= n; i++)</div><div class=\"line\">            f[j][i] = f[j - 1][f[j - 1][i]];</div><div class=\"line\">    lev = j - 1;</div><div class=\"line\">&#125;</div><div class=\"line\">int lca(int x, int y) &#123;</div><div class=\"line\">    if (dep[x] &lt; dep[y]) swap(x, y);</div><div class=\"line\">    int d = dep[x] - dep[y];</div><div class=\"line\">    for (int i = lev; i &gt;= 0; i--)</div><div class=\"line\">        if (d &gt;&gt; i &amp; 1)</div><div class=\"line\">            x = f[i][x];</div><div class=\"line\">    if (x == y) return x;</div><div class=\"line\">    for (int i = lev; i &gt;= 0; i--)</div><div class=\"line\">        if (f[i][x] != f[i][y])</div><div class=\"line\">            x = f[i][x], y = f[i][y];</div><div class=\"line\">    return f[0][x];</div><div class=\"line\">&#125;</div><div class=\"line\">int add(int u) &#123;</div><div class=\"line\">    if (s.empty()) return 0;</div><div class=\"line\">    set&lt;int&gt; :: iterator it = s.lower_bound(dfn[u]), it1 = it;</div><div class=\"line\">    it1--;</div><div class=\"line\">    if (it == s.begin() || it == s.end()) &#123;</div><div class=\"line\">        it = s.begin();</div><div class=\"line\">        it1 = s.end();</div><div class=\"line\">        it1--;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int x = *it, y = *it1;</div><div class=\"line\">    x = rdfn[x], y =rdfn[y];</div><div class=\"line\">    return dist[u] - dist[lca(x, u)] - dist[lca(y, u)] + dist[lca(x, y)];</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    for (int cas = 1; cas &lt;= T; cas++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) g[i].clear(), in[i] = false;</div><div class=\"line\">        int u, v, w;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;w);</div><div class=\"line\">            g[u].pb(&#123;v, w&#125;);</div><div class=\"line\">            g[v].pb(&#123;u, w&#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;Case #%d:\\n&quot;, cas);</div><div class=\"line\">        cnt = 0;</div><div class=\"line\">        dfs(1, 0);</div><div class=\"line\">        st();</div><div class=\"line\">        s.clear();</div><div class=\"line\">        int ans = 0;</div><div class=\"line\">        while(q--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;v, &amp;u);</div><div class=\"line\">            if (v == 1) &#123;</div><div class=\"line\">                if (!in[u]) &#123;</div><div class=\"line\">                    ans += add(u);</div><div class=\"line\">                    s.insert(dfn[u]);</div><div class=\"line\">                    in[u] = true;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                if (in[u]) &#123;</div><div class=\"line\">                    s.erase(dfn[u]);</div><div class=\"line\">                    ans -= add(u);</div><div class=\"line\">                    in[u] = false;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14120982    2015-07-22 22:49:10 Accepted    5296    2433MS  21724K  2510 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["LCA","倍增法","点到链的最短距离"]},{"title":"HDU 5289 Assignment（st表 单调队列）","url":"http://yoursite.com/2015/07/22/hdu 5289/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5289\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5289</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给你n个数和一个数k，求存在多少个区间，区间内最大值减最小值小于k<br>其中 n ≤ 100000; a[i], k ≤ 10^9</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>st表：<br>用st表来维护区间最小值最大值。维护一个队列，从左往右开始遍历，每次要将一个数放进队列时，判断是否符合条件，符合则加入，不符合则将队首的元素移出，直到符合位置。每次要移出元素时，答案加上当前队列个数。<br>也可以用二分+st表来实现的，对于每一个数，二分查找其最靠右的符合条件的数，但复杂度略高。</p>\n<p>单调队列：<br>维护两个单调队列，一个递增，一个递减。从左往右遍历，每次将数字加入两个队列队尾。然后判断队首的最大、最小值是否符合条件，符合则加入，不符合则将排在前面的数字移出队列，每次移出是更新答案。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>st表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;iomanip&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#define inf 1000000000</div><div class=\"line\">#define pi acos(-1.0)</div><div class=\"line\">#define eps 1e-8</div><div class=\"line\">#define seed 131</div><div class=\"line\">using namespace std;</div><div class=\"line\">typedef pair&lt;int,int&gt; pii;</div><div class=\"line\">typedef unsigned long long ull;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int N = 100000 + 100;</div><div class=\"line\">int T, n, k;</div><div class=\"line\">int a[N];</div><div class=\"line\">int maxsum[20][N], minsum[20][N];</div><div class=\"line\">void rmq(int num) &#123;</div><div class=\"line\">    for (int i = 1; i != 20; i++) &#123;</div><div class=\"line\">        for (int j = 1; j &lt;= num; j++)</div><div class=\"line\">        if (j + (1 &lt;&lt; i) - 1 &lt;= num) &#123;</div><div class=\"line\">            maxsum[i][j] = max(maxsum[i - 1][j], maxsum[i - 1][j + (1 &lt;&lt; i &gt;&gt; 1)]);</div><div class=\"line\">            minsum[i][j] = min(minsum[i - 1][j], minsum[i - 1][j + (1 &lt;&lt; i &gt;&gt; 1)]);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int getmx(int st, int ed) &#123;</div><div class=\"line\">    int k = (int) log2(ed - st + 1.0);</div><div class=\"line\">    int mx = max(maxsum[k][st], maxsum[k][ed - (1 &lt;&lt; k) + 1]);</div><div class=\"line\">    return mx;</div><div class=\"line\">&#125;</div><div class=\"line\">int getmn(int st, int ed) &#123;</div><div class=\"line\">    int k = (int) log2(ed - st + 1.0);</div><div class=\"line\">    int mn = min(minsum[k][st], minsum[k][ed - (1 &lt;&lt; k) + 1]);</div><div class=\"line\">    return mn;</div><div class=\"line\">&#125;</div><div class=\"line\">int mx, mn;</div><div class=\"line\">ll ans;</div><div class=\"line\">bool check(int l, int r, int x) &#123;</div><div class=\"line\">    if (l &gt; r) return false;</div><div class=\"line\">    mx = getmx(l, r), mn = getmn(l, r);</div><div class=\"line\">    if (abs(x - mx) &lt; k &amp;&amp; abs(x - mn) &lt; k) return true;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\">queue&lt;int&gt; q;</div><div class=\"line\">int main() &#123;</div><div class=\"line\">    cin&gt;&gt;T;</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            minsum[0][i] = maxsum[0][i] = a[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        rmq(n);</div><div class=\"line\">        int l = 1, r = 1;</div><div class=\"line\">        while(!q.empty()) q.pop();</div><div class=\"line\">        q.push(a[1]);</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">            if (check(l, r, a[i])) &#123;</div><div class=\"line\">                q.push(a[i]);</div><div class=\"line\">                r++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                while(!q.empty()) &#123;</div><div class=\"line\">                    ans += q.size();</div><div class=\"line\">                    q.pop();</div><div class=\"line\">                    l++;</div><div class=\"line\">                    if (check(l, r, a[i])) break;</div><div class=\"line\">                &#125;</div><div class=\"line\">                q.push(a[i]);</div><div class=\"line\">                r++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ll tmp = q.size();</div><div class=\"line\">        ans += tmp * (tmp + 1) / 2;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>单调队列：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">using namespace std;</div><div class=\"line\">deque&lt; pair&lt;int, int&gt; &gt; q1, q2;</div><div class=\"line\">const int N = 100010;</div><div class=\"line\">int n, k, T, a[N];</div><div class=\"line\">ll ans;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        while(!q1.empty()) q1.pop_back();</div><div class=\"line\">        while(!q2.empty()) q2.pop_back();</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        int head = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">            while(!q1.empty()) &#123;</div><div class=\"line\">                if (q1.back().first &lt; a[i]) q1.pop_back();</div><div class=\"line\">                else break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            q1.push_back(&#123;a[i], i&#125;);</div><div class=\"line\">            while(!q2.empty()) &#123;</div><div class=\"line\">                if (q2.back().first &gt; a[i]) q2.pop_back();</div><div class=\"line\">                else break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            q2.push_back(&#123;a[i], i&#125;);</div><div class=\"line\">            while(1) &#123;</div><div class=\"line\">                if (q1.front().first - q2.front().first &lt; k) break;</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    if (q1.front().second &lt; q2.front().second) &#123;</div><div class=\"line\">                        head = q1.front().second + 1;</div><div class=\"line\">                        q1.pop_front();</div><div class=\"line\">                    &#125; else &#123;</div><div class=\"line\">                        head = q2.front().second + 1;</div><div class=\"line\">                        q2.pop_front();</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ans += i - head + 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14110637  2015-07-22 15:29:58 Accepted    5289    374MS   12444K  2211 B  G++ SIO__Five st表</li>\n<li>14113375  2015-07-22 16:33:02 Accepted    5289    468MS   1940K   1105 B  G++ SIO__Five 单调队列</li>\n</ul>\n","categories":["ACM"],"tags":["想法","单调队列","st表"]},{"title":"HDU 5288 OO’s Sequence（数学）","url":"http://yoursite.com/2015/07/22/hdu 5288/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5288\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5288</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>在闭区间[l,r]内有一个数a[i]，a[i]不能整除除去自身以外的其他的数，f(l,r)表示在这区间内a[i]这样的数的个数，，现给你n个数，求所有区间的f(l,r)的和。<br>其中 n ≤ 100000; a[i] ≤ 10000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>对于一个数a[i]，找到两端离他最近的因子l[i], r[i]，那么它能够贡献的答案就是(r[i] - i) * (i - l[i])。枚举每一个数的因子，然后用该数更行l，r数组。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">const int INF = 0x3f3f3f3f;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int mod = 1e9 + 7;</div><div class=\"line\">const int N = 1e5 + 100;</div><div class=\"line\">int a[N], l[N], r[N], n, p[10010];</div><div class=\"line\">ll ans;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d&quot;, &amp;n)) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">        memset(p, -1, sizeof(p));</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        p[a[0]] = 0, l[0] = 0;</div><div class=\"line\">        for (int i = 1; i &lt; n; i++) &#123;</div><div class=\"line\">            int q = sqrt(a[i] + 0.5);</div><div class=\"line\">            l[i] = -1;</div><div class=\"line\">            for (int j = 1; j &lt;= q; j++) if (a[i] % j == 0)&#123;</div><div class=\"line\">                l[i] = max(l[i], p[a[i] / j]);</div><div class=\"line\">                l[i] = max(l[i], p[j]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (l[i] == -1) l[i] = 0;</div><div class=\"line\">            else l[i]++;</div><div class=\"line\">            p[a[i]] = i;</div><div class=\"line\">            //cout&lt;&lt;l[i]&lt;&lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">        memset(p, INF, sizeof(p));</div><div class=\"line\">        p[a[n - 1]] = n - 1, r[n - 1] = n - 1;</div><div class=\"line\">        ans = (n - 1 - l[n - 1] + 1) * (r[n - 1] - (n - 1) + 1);</div><div class=\"line\">        //cout&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">        for (int i = n - 2; i &gt;= 0; i--) &#123;</div><div class=\"line\">            int q = sqrt(a[i] + 0.5);</div><div class=\"line\">            r[i] = INF;</div><div class=\"line\">            for (int j = 1; j &lt;= q; j++) if (a[i] % j == 0) &#123;</div><div class=\"line\">                r[i] = min(r[i], p[a[i] / j]);</div><div class=\"line\">                r[i] = min(r[i], p[j]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (r[i] == INF) r[i] = n - 1;</div><div class=\"line\">            else r[i]--;</div><div class=\"line\">            p[a[i]] = i;</div><div class=\"line\">            //cout&lt;&lt;r[i]&lt;&lt;endl;</div><div class=\"line\">            ans =(ans + (ll)(i - l[i] + 1) * (r[i] - i + 1)) % mod;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%I64d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14110337  2015-07-22 15:23:36 Accepted    5288    967MS   2788K   1324 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 5294 Tricks Device（网络流 最短路）","url":"http://yoursite.com/2015/07/22/hdu 5294/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5294\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5294</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一张图，其中n个点，m条双向边，边有权值。所以从起点1走到终点n有一个最短时间。问：<br>（1）最少去掉多少条边，使得从起点到终点的时间大于最短时间（走不到也算）<br>（2）最多去掉多少条边，使得从起点到终点的时间仍然为最短时间。<br>其中 n ≤ 2000; m ≤ 60000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>spfa时找到最少边数的最短路，总边数减去最少变数即为第二问答案。<br>第一问中，根据在最短路的边构造边流量为1的新图，对新图求最大流即为第一问答案。</p>\n<p>比赛的时候思路非常清晰，但是看到n和m这么大，感觉网络流肯定T，然后就没有敲。。。实际上新图的规模很小</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">const int INF = (1 &lt;&lt; 30);</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 2010;</div><div class=\"line\">const int M = 60010;</div><div class=\"line\">vector&lt; pair&lt;int, int&gt; &gt; G[N];</div><div class=\"line\">int n, m;</div><div class=\"line\">const int maxn = 2010;</div><div class=\"line\">const int maxm = 60010;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int v;    // vertex</div><div class=\"line\">    int cap;    // capacity</div><div class=\"line\">    int flow;   // current flow in this arc</div><div class=\"line\">    int nxt;</div><div class=\"line\">&#125; e[maxm * 2];</div><div class=\"line\">int g[maxn], cnt;</div><div class=\"line\">int st, ed;</div><div class=\"line\">int dd[maxn], cc[maxn];</div><div class=\"line\">queue&lt;int&gt; Q;</div><div class=\"line\">void spfa(int st, int ed) &#123;</div><div class=\"line\">    dd[st] = cc[st] = 0;</div><div class=\"line\">    bool in[maxn] = &#123;0&#125;;</div><div class=\"line\">    while(!Q.empty()) Q.pop();</div><div class=\"line\">    in[st] = true;</div><div class=\"line\">    Q.push(st);</div><div class=\"line\">    while(!Q.empty()) &#123;</div><div class=\"line\">        int u = Q.front(); Q.pop();</div><div class=\"line\">        in[u] = false;</div><div class=\"line\">        for (int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class=\"line\">            int v = G[u][i].first, c = G[u][i].second;</div><div class=\"line\">            if (dd[u] + c == dd[v]) cc[v] = min(cc[v], cc[u] + 1);</div><div class=\"line\">            if (dd[u] + c &lt; dd[v]) &#123;</div><div class=\"line\">                cc[v] = cc[u] + 1;</div><div class=\"line\">                dd[v] = dd[u] + c;</div><div class=\"line\">                if (!in[v]) Q.push(v), in[v] = true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">void add(int u, int v, int c) &#123;</div><div class=\"line\">    e[++cnt].v = v;</div><div class=\"line\">    e[cnt].cap = c;</div><div class=\"line\">    e[cnt].flow = 0;</div><div class=\"line\">    e[cnt].nxt = g[u];</div><div class=\"line\">    g[u] = cnt;</div><div class=\"line\"></div><div class=\"line\">    e[++cnt].v = u;</div><div class=\"line\">    e[cnt].cap = 0;</div><div class=\"line\">    e[cnt].flow = 0;</div><div class=\"line\">    e[cnt].nxt = g[v];</div><div class=\"line\">    g[v] = cnt;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">void init() &#123;</div><div class=\"line\">    memset(g, 0, sizeof(g));</div><div class=\"line\">    cnt = 1;</div><div class=\"line\">    st = 1, ed = n;</div><div class=\"line\">    for (int u = 1; u &lt;= n; u++) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class=\"line\">            if (dd[u] + G[u][i].second == dd[G[u][i].first]) add(u, G[u][i].first, 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int dist[maxn], numbs[maxn], q[maxn];</div><div class=\"line\">void rev_bfs() &#123;</div><div class=\"line\">    int font = 0, rear = 1;</div><div class=\"line\">    for (int i = 0; i &lt;= n; i++) &#123; //n为总点数</div><div class=\"line\">        dist[i] = maxn;</div><div class=\"line\">        numbs[i] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    q[font] = ed;</div><div class=\"line\">    dist[ed] = 0;</div><div class=\"line\">    numbs[0] = 1;</div><div class=\"line\">    while(font != rear) &#123;</div><div class=\"line\">        int u = q[font++];</div><div class=\"line\">        for (int i = g[u]; i; i = e[i].nxt) &#123;</div><div class=\"line\">            if (e[i ^ 1].cap == 0 || dist[e[i].v] &lt; maxn) continue;</div><div class=\"line\">            dist[e[i].v] = dist[u] + 1;</div><div class=\"line\">            ++numbs[dist[e[i].v]];</div><div class=\"line\">            q[rear++] = e[i].v;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int maxflow() &#123;</div><div class=\"line\">    n += 3;</div><div class=\"line\">    rev_bfs();</div><div class=\"line\">    int u, totalflow = 0;</div><div class=\"line\">    int curg[maxn], revpath[maxn];</div><div class=\"line\">    for(int i = 0; i &lt;= n; ++i) curg[i] = g[i];</div><div class=\"line\">    u = st;</div><div class=\"line\">    while(dist[st] &lt; n) &#123;</div><div class=\"line\">        if(u == ed) &#123;   // find an augmenting path</div><div class=\"line\">            int augflow = INF;</div><div class=\"line\">            for(int i = st; i != ed; i = e[curg[i]].v)</div><div class=\"line\">                augflow = min(augflow, e[curg[i]].cap);</div><div class=\"line\">            for(int i = st; i != ed; i = e[curg[i]].v) &#123;</div><div class=\"line\">                e[curg[i]].cap -= augflow;</div><div class=\"line\">                e[curg[i] ^ 1].cap += augflow;</div><div class=\"line\">                e[curg[i]].flow += augflow;</div><div class=\"line\">                e[curg[i] ^ 1].flow -= augflow;</div><div class=\"line\">            &#125;</div><div class=\"line\">            totalflow += augflow;</div><div class=\"line\">            u = st;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int i;</div><div class=\"line\">        for(i = curg[u]; i; i = e[i].nxt)</div><div class=\"line\">            if(e[i].cap &gt; 0 &amp;&amp; dist[u] == dist[e[i].v] + 1) break;</div><div class=\"line\">        if(i) &#123;   // find an admissible arc, then Advance</div><div class=\"line\">            curg[u] = i;</div><div class=\"line\">            revpath[e[i].v] = i ^ 1;</div><div class=\"line\">            u = e[i].v;</div><div class=\"line\">        &#125; else &#123;    // no admissible arc, then relabel this vertex</div><div class=\"line\">            if(0 == (--numbs[dist[u]])) break;    // GAP cut, Important!</div><div class=\"line\">            curg[u] = g[u];</div><div class=\"line\">            int mindist = n;</div><div class=\"line\">            for(int j = g[u]; j; j = e[j].nxt)</div><div class=\"line\">                if(e[j].cap &gt; 0) mindist = min(mindist, dist[e[j].v]);</div><div class=\"line\">            dist[u] = mindist + 1;</div><div class=\"line\">            ++numbs[dist[u]];</div><div class=\"line\">            if(u != st)</div><div class=\"line\">                u = e[revpath[u]].v;    // Backtrack</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    n -= 3;</div><div class=\"line\">    return totalflow;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            G[i].clear();</div><div class=\"line\">            dd[i] = cc[i] = INF;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int u, v, l;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;l);</div><div class=\"line\">            G[u].push_back(&#123;v, l&#125;);</div><div class=\"line\">            G[v].push_back(&#123;u, l&#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        spfa(1, n);</div><div class=\"line\">        init();</div><div class=\"line\">        printf(&quot;%d %d\\n&quot;, maxflow(), m - cc[n]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14108329  2015-07-22 14:29:43 Accepted    5294    93MS    4992K   3960 B  C++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["最短路","网络流"]},{"title":"HDU 4909 String（组合数学）","url":"http://yoursite.com/2015/07/20/BC3-3 hdu 4909/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4909\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4909</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有长度为n的由小写字母组成字符串，其中可能有一个’?’或没有。求其非空子串（包括自身）的个数，且子串必须满足其中出现的字符的个数均为偶数。如果有’?’，则可以将其删去或者变为任意一个字母。其中 1 ≤ n ≤ 20000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>将每个字符表示为二进制中的一位，如果出现偶数个，则其异或后为0.<br>假如字符串不包含’?’，则求每一个前缀的异或值，如果两个前缀异或之后为0，这表示两者相差的字符串为符合条件的串。所以只需要对每种异或值求C(n, 2)并累加即可。<br>如果字符串包含’?’，那么有三种情况：</p>\n<ol>\n<li>子串在?之前</li>\n<li>子串在?之后</li>\n<li>子串包括?<br>对于前两种计算方式和不包含’?’的相同，第三种情况中，?可以有27种情况，变为26个字母或为空。枚举一下即可</li>\n</ol>\n<p>注意：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">不能用ans += mp[x] 这种写法。虽然mp[x]为0时也正确，但是mp[x]每次都会把x加入到map中</div><div class=\"line\">应该用 if(mp.count(x)) ans += mp[x];</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">map&lt;int, int&gt; mp;</div><div class=\"line\">map&lt;int, int&gt; mp2;</div><div class=\"line\">int T, n;</div><div class=\"line\">int w[30];</div><div class=\"line\">const int N = 20010;</div><div class=\"line\">char s[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%s&quot;, s);</div><div class=\"line\">        mp.clear();</div><div class=\"line\">        mp[0] = 1;</div><div class=\"line\">        n = strlen(s);</div><div class=\"line\">        int x = 0, i, cnt = 0;</div><div class=\"line\">        bool flag = false;</div><div class=\"line\">        for (i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            if (s[i] == &apos;?&apos;) &#123;</div><div class=\"line\">                flag = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            x = x ^ (1 &lt;&lt; (s[i] - &apos;a&apos;));</div><div class=\"line\">            mp[x]++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        map&lt;int, int&gt; :: iterator it;</div><div class=\"line\">        int ans = 0;</div><div class=\"line\">        for (it = mp.begin(); it != mp.end(); it++) &#123;</div><div class=\"line\">            int t = (*it).second;</div><div class=\"line\">            //cout&lt;&lt;(*it).first&lt;&lt;&quot; &quot;&lt;&lt;(*it).second&lt;&lt;endl;</div><div class=\"line\">            if (t &lt; 2) continue;</div><div class=\"line\">            ans += t * (t - 1) / 2;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!flag) &#123;</div><div class=\"line\">            printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i++;</div><div class=\"line\">        int xx = 0;</div><div class=\"line\">        mp2.clear();</div><div class=\"line\">        mp2[0]++;</div><div class=\"line\">        for (; i &lt; n; i++) &#123;</div><div class=\"line\">            xx = xx ^ (1 &lt;&lt; (s[i] - &apos;a&apos;));</div><div class=\"line\">            mp2[xx]++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        //puts(&quot;-------------&quot;);</div><div class=\"line\">        for (it = mp2.begin(); it != mp2.end(); it++) &#123;</div><div class=\"line\">            int t = (*it).second;</div><div class=\"line\">            //cout&lt;&lt;(*it).first&lt;&lt;&quot; &quot;&lt;&lt;(*it).second&lt;&lt;endl;</div><div class=\"line\">            if (t &lt; 2) continue;</div><div class=\"line\">            ans += t * (t - 1) / 2;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; 27; i++) &#123;</div><div class=\"line\">            for (it = mp.begin(); it != mp.end(); it++) &#123;</div><div class=\"line\">                int tmp = x ^ (1 &lt;&lt; i);</div><div class=\"line\">                if (i == 26) tmp = x;</div><div class=\"line\">                //cout&lt;&lt;(*it).first&lt;&lt;&quot; &quot;&lt;&lt;(*it).second&lt;&lt;&quot; &quot;&lt;&lt;mp2[tmp ^ (*it).first]&lt;&lt;endl;</div><div class=\"line\">                if (mp2.count(tmp ^ (*it).first))</div><div class=\"line\">                    ans += (*it).second * (mp2[tmp ^ (*it).first]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14079251  2015-07-20 19:50:08 Accepted    4909    1216MS  3132K   1948 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["组合数学","map","异或"]},{"title":"HDU 4908 BestCoder Sequence（数学）","url":"http://yoursite.com/2015/07/20/BC3-2 hdu 4908/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4908\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4908</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有n个数的序列，求其连续的、且中位数为M的、长度为奇数的子序列个数。其中 1 ≤ n ≤ 40000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>只需要将大于M的数标记为+1，小于M的为-1，M为0。然后从M左边开始长度为奇数（偶数）的子序列与M右边开始长度为奇数（偶数）的子序列的和为0，组成的序列便是一个答案。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int n, m, a[40010];</div><div class=\"line\">int odd[40010 * 2], even[40010 * 2];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        int x;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;a[i]);</div><div class=\"line\">            if (a[i] == m) x = i, a[i] = 0;</div><div class=\"line\">            else if (a[i] &gt; m) a[i] = 1;</div><div class=\"line\">            else a[i] = -1;</div><div class=\"line\">            odd[i] = odd[i + n] = 0;</div><div class=\"line\">            even[i] = even[i + n] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int ans = 1;</div><div class=\"line\">        for (int i = x + 1; i &lt; n; i++) &#123;</div><div class=\"line\">            a[i] = a[i - 1] + a[i];</div><div class=\"line\">            if ((i - x) % 2 == 1) odd[a[i] + n]++;</div><div class=\"line\">            else even[a[i] + n]++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans += even[n];</div><div class=\"line\">        for (int i = x - 1; i &gt;= 0; i--) &#123;</div><div class=\"line\">            a[i] = a[i + 1] + a[i];</div><div class=\"line\">            if ((x - i) % 2 == 1) ans += odd[n - a[i]];</div><div class=\"line\">            else &#123;</div><div class=\"line\">                ans += even[n - a[i]];</div><div class=\"line\">                if (a[i] == 0) ans++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14073501  2015-07-20 15:18:25 Accepted    4908    171MS   2344K   855 B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["数学","想法"]},{"title":"HDU 4885 TIANKENG’s travel（三点共线 最短路）","url":"http://yoursite.com/2015/07/20/BC2-3 hdu 4885/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4885\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4885</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给你一个起点，一个终点和n个加油站。只能走直线，只能到达这三种点，经过加油站必须加油，一次加油可以走L的距离，问最少经过加油站几次可以从起点到达终点。1 ≤ n ≤ 1000</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>只需要把距离小于等于L的两个点连一条边，然后跑最短路即可。<br>需要注意的是，有可能出现三点共线，此时从这三点的一端到另一端，要经过三个点。所以必须要处理三点共线的情况。<br>方法是：<br>将所有的点按照x从小到大排序，然后对于每个点，维护一个set。对于第i个点，只需要判断它后面的点与其构成线段的斜率是否已经存在，已存在则不加入。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#define pi pair&lt;int, int&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 1010;</div><div class=\"line\">const int INF = 0x3f3f3f3f;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int x, y, id;</div><div class=\"line\">&#125;p[N];</div><div class=\"line\">bool cmp(node s, node v) &#123;</div><div class=\"line\">    return s.x &lt; v.x;</div><div class=\"line\">&#125;</div><div class=\"line\">int T, n, l;</div><div class=\"line\">int head[N], nxt[N * N], pre[N * N], e;</div><div class=\"line\">void init() &#123;</div><div class=\"line\">    memset(head, -1, sizeof(int) * (n + 5));</div><div class=\"line\">    e = 0;</div><div class=\"line\">&#125;</div><div class=\"line\">void add(int u, int v) &#123;</div><div class=\"line\">    pre[e] = v, nxt[e] = head[u], head[u] = e++;</div><div class=\"line\">&#125;</div><div class=\"line\">bool dis(double x, double y) &#123;</div><div class=\"line\">    double L = sqrt(x * x + y * y);</div><div class=\"line\">    if (L &lt;= l) return true;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\">int dist[N];</div><div class=\"line\">int bfs(int s, int e) &#123;</div><div class=\"line\">    memset(dist, 0x3f, sizeof(int) * (n + 5));</div><div class=\"line\">    dist[s] = 0;</div><div class=\"line\">//    priority_queue&lt; pair&lt;int, int&gt; &gt; q;</div><div class=\"line\">//    q.push(&#123;0, s&#125;);</div><div class=\"line\">    queue&lt;int&gt; q;</div><div class=\"line\">    q.push(s);</div><div class=\"line\">    while(!q.empty()) &#123;</div><div class=\"line\">//        int u = q.top().first; q.pop();</div><div class=\"line\">//        if (u == e) return dist[e];</div><div class=\"line\">        int u = q.front(); q.pop();</div><div class=\"line\">        for (int i = head[u]; i != -1; i = nxt[i]) &#123;</div><div class=\"line\">            int v = pre[i];</div><div class=\"line\">            if (dist[u] + 1 &lt; dist[v]) &#123;</div><div class=\"line\">                dist[v] = dist[u] + 1;</div><div class=\"line\">                //q.push(&#123;dist[v], v&#125;);</div><div class=\"line\">                q.push(v);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return dist[e];</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;l);</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;p[0].x, &amp;p[0].y);</div><div class=\"line\">        p[0].id = 0;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;p[n + 1].x, &amp;p[n + 1].y);</div><div class=\"line\">        p[n + 1].id = n + 1;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;p[i].x, &amp;p[i].y);</div><div class=\"line\">            p[i].id = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(p, p + n + 2, cmp);</div><div class=\"line\">        init();</div><div class=\"line\">        for (int i = 0; i &lt;= n + 1; i++) &#123;</div><div class=\"line\">            set&lt; pi &gt; s;</div><div class=\"line\">            for (int j = i + 1; j &lt;= n + 1; j++) &#123;</div><div class=\"line\">                int dx = p[j].x - p[i].x, dy = p[j].y - p[i].y;</div><div class=\"line\">                if (!dis(dx, dy)) continue;</div><div class=\"line\">                int gcd = abs(__gcd(dx, dy));</div><div class=\"line\">                pi tmp = make_pair(dx / gcd, dy / gcd);</div><div class=\"line\">                if (s.count(tmp)) continue;</div><div class=\"line\">                add(i, j);</div><div class=\"line\">                add(j, i);</div><div class=\"line\">                s.insert(tmp);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int s, e;</div><div class=\"line\">        for (int i = 0; i &lt;= n + 1; i++) &#123;</div><div class=\"line\">            if (p[i].id == 0) s = i;</div><div class=\"line\">            if (p[i].id == n + 1) e = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int ans = bfs(s, e);</div><div class=\"line\">        if (ans == INF) puts(&quot;impossible&quot;);</div><div class=\"line\">        else printf(&quot;%d\\n&quot;, ans - 1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14070053  2015-07-20 11:56:32 Accepted    4885    93MS    1716K   2073 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["计算几何","最短路"]},{"title":"HDU 4886 TIANKENG’s restaurant(Ⅱ)","url":"http://yoursite.com/2015/07/19/BC2-4 hdu 4886 TIANKENG’s restaurant(Ⅱ)/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4886\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4886</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个字符串S。只有ABCDEFGH这八个字符组成。现在需要找一个最小的由这八个字符组成的子串T，使其不是S的子串。<br>数据范围：1 ≤ n ≤ 1000000 其中n为S的长度</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>假设结果长度为L，那么当8^L &gt;= Length(S)时必有结果，所以可以确定L的最大值。暴力枚举长度为1，长度为2…长度为L。在枚举过程中，先对S中所有枚举长度的子串求hash值，然后再搜索对应长度的所有子串，O(1)判断即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int T, n, len, a[100];</div><div class=\"line\">const int N = 1000000 + 100;</div><div class=\"line\">char s[N];</div><div class=\"line\">bool ha[N];</div><div class=\"line\">bool dfs(int k, int x) &#123;</div><div class=\"line\">    //cout&lt;&lt;k&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</div><div class=\"line\">    if (k == len) &#123;</div><div class=\"line\">        if (!ha[x]) return 1;</div><div class=\"line\">        return 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int i = 0; i &lt; 8; i++) &#123;</div><div class=\"line\">        a[k] = i;</div><div class=\"line\">        if (dfs(k + 1, x * 8 + i)) return 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%s&quot;, s);</div><div class=\"line\">        n = strlen(s);</div><div class=\"line\">        for (len = 1; ; len++) &#123;</div><div class=\"line\">            memset(ha, 0, sizeof(ha));</div><div class=\"line\">            for (int i = 0; i + len - 1 &lt; n; i++) &#123;</div><div class=\"line\">                int x = 0;</div><div class=\"line\">                for (int j = 0; j &lt; len; j++)</div><div class=\"line\">                    x *= 8, x += s[i + j] - &apos;A&apos;;</div><div class=\"line\">                ha[x] = 1;</div><div class=\"line\">                //cout&lt;&lt;x&lt;&lt;endl;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (!dfs(0, 0)) continue;</div><div class=\"line\">            for (int i = 0; i &lt; len; i++)</div><div class=\"line\">                printf(&quot;%c&quot;, &apos;A&apos; + a[i]);</div><div class=\"line\">            puts(&quot;&quot;);</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14049001  2015-07-18 12:23:03 Accepted    4886    1466MS  3536K   1092 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["枚举","哈希"]},{"title":"HDU 4884 TIANKENG's rice shop（模拟）","url":"http://yoursite.com/2015/07/19/BC2-2 hdu 4884 TIANKENG’s rice shop/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4884\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4884</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一家餐厅，有n种炒饭，每次炒一次饭需要t时间，其中炒一次饭有k碗。有m个人来到在某一个时间来到餐厅，他点了num碗第id种的炒饭。问每一个客人最早离开餐厅的时间。<br>在炒饭过程中，保证先来先服务。但是每次炒会炒尽可能多的份数，不过不会有多余的。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>这道模拟题特别恶心。。<br>举个例子，比如每次可以炒5份，每次5分钟。<br>第一个顾客08:00进来，点了2份A，<br>第二个顾客08:04进来，点了3份A。<br>在08:00开始炒的话，由于这个时候第二个顾客还没进来，所以就只炒2份，第一个顾客在08:05离开，这时才炒第二个的3份，所以第二个离开时间是08:10。</p>\n<p>同样是每次可以炒5份，每次5分钟。<br>第一个顾客08:00进来，点了6份A，<br>第二个顾客08:01进来，点了5份B，<br>第三个顾客08:02进来，点了4份A。<br>同样地，先炒5份给第一个，还差一份，这是已经是08:05了，第三个顾客也进来了，所以这时直接炒5份A（因为会尽可能多地炒），08：10第一个和第三个可以同时离开。接着才炒第二个的。</p>\n<p>我的做法时，每次服务某个客人时，判断最多能够多炒几份饭，然后分给后来的客人。<br>这道题还有一个坑的地方是，客人最后离开的时间可能会超过24小时，需要取模。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int T, n, t, k, m;</div><div class=\"line\">int a[1010], id[1010], num[1010], out[1010], kind[1010];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d%d%d&quot;, &amp;n ,&amp;t, &amp;k, &amp;m);</div><div class=\"line\">        //memset(kind, 0, sizeof(kind));</div><div class=\"line\">        int x, y, now = 0;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d:%d%d%d&quot;, &amp;x, &amp;y, &amp;id[i], &amp;num[i]);</div><div class=\"line\">            a[i] = x * 60 + y;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            if (!i) now = 0;</div><div class=\"line\">            else now = max(now, a[i - 1]);</div><div class=\"line\">            //cout&lt;&lt;num[i]&lt;&lt;endl;</div><div class=\"line\">            if (!num[i]) continue;</div><div class=\"line\">            now = out[i] = max(now, a[i]) + (num[i] + k - 1) / k * t;</div><div class=\"line\">            int tmp = k - num[i] % k;</div><div class=\"line\">            if (tmp == k) continue;</div><div class=\"line\">            for (int j = i + 1; j &lt; m; j++) &#123;</div><div class=\"line\">                if (a[j] &gt; out[i] - t) break;</div><div class=\"line\">                if (id[j] == id[i]) &#123;</div><div class=\"line\">                    if (num[j] &lt;= tmp) &#123;</div><div class=\"line\">                        tmp -= num[j];</div><div class=\"line\">                        num[j] = 0;</div><div class=\"line\">                        out[j] = max(out[i], a[j]);</div><div class=\"line\">                    &#125; else &#123;</div><div class=\"line\">                        num[j] -= tmp;</div><div class=\"line\">                        tmp = 0;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    //cout&lt;&lt;j&lt;&lt;&quot;-------------&quot;&lt;&lt;tmp&lt;&lt;endl;</div><div class=\"line\">                    if (!tmp) break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) printf(&quot;%02d:%02d\\n&quot;, (out[i] % 1440) / 60, (out[i] % 1440) % 60);</div><div class=\"line\">        if (T) puts(&quot;&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14055192  2015-07-18 21:42:51 Accepted    4884    93MS    1608K   1565 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["模拟"]},{"title":"HDU 4883 TIANKENG's restaurant","url":"http://yoursite.com/2015/07/19/BC2-1 hdu 4883 TIANKENG’s restaurant/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4883\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4883</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一家餐厅，有n组人，每组包括Xi个人，在某一个时间段来到餐厅。问餐厅最少需要多少张凳子可以让每一个时刻所有在餐厅的人都有位子。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>把到达的和离开的时间按照从小到大排序，遇到到达时加上来的人数，遇到离开时减去离开的人数，遍历求出最大值即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 10000 + 10;</div><div class=\"line\">int n, t;</div><div class=\"line\">pair&lt;int, int&gt; a[N + N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    int c, x, xx, y, yy, cnt;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        cnt = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d:%d%d:%d&quot;, &amp;c, &amp;x, &amp;xx, &amp;y, &amp;yy);</div><div class=\"line\">            a[cnt++] = make_pair(x * 60 + xx, c);</div><div class=\"line\">            a[cnt++] = make_pair(y * 60 + yy, -c);</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(a, a + cnt);</div><div class=\"line\">        int ans = 0, sum = 0;</div><div class=\"line\">        for (int i = 0; i &lt; cnt; i++) &#123;</div><div class=\"line\">            sum += a[i].second;</div><div class=\"line\">            ans = max(ans, sum);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14040955  2015-07-17 16:01:31 Accepted    4883    577MS   1748K   643 B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["想法"]},{"title":"HDU 4858 项目管理（分块）","url":"http://yoursite.com/2015/07/19/BC1-2 hdu 4858 项目管理(分块)/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4858\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4858</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个项目有n个点，项目是连通的。有m条边，可能有重边，但没有自环。<br>接下来有Q次询问，每次询问分两种操作，操作符为0，表示给某一个点加上一个值。操作符为1，询问某一个点相邻项目值之和（如果多条边就算多次）<br>数据范围：1 ≤ n ≤ 100000，1 ≤ m ≤ n + 10</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我只想到了暴力的方法，刚好可以水过。。<br>正确的姿势是采用分块的思想，由于这个图比较稀疏，总度数为2<em>m，又由于整个图是连通的，所以每个点的度数至少为1。这是还剩下2</em>m-n个度数可以分配，故度数大于sqrt(n)的点的个数和sqrt(n)比较接近。<br>因此我们将点分为两类，度数大于sqrt(n)的点为重点，度数小于sqrt(n)的点为轻点。每个重点维护与其相邻的所有轻点值之和。</p>\n<ol>\n<li>每次修改轻点时，更新自己的值，并且更新与其相邻的所有重点相邻轻点和。复杂度为O(sqrt(n))</li>\n<li>每次修改重点时，只更新自己的值。复杂度为O(1)</li>\n<li>每次询问轻点时，只需要把与轻点的邻居相加。复杂度为O(sqrt(n))</li>\n<li>每次询问重点时，只需要把与其相连的重点的值相加，再加上维护的其相邻轻点的和即可。复杂度为O(sqrt(n))</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#define pb push_back</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 100000 + 100;</div><div class=\"line\">int n, m, T;</div><div class=\"line\">vector&lt;int&gt; g[N], gb[N];</div><div class=\"line\">int d[N], sum[N], w[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class=\"line\">            g[i].clear(), gb[i].clear();</div><div class=\"line\">            d[i] = sum[i] = w[i] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int u, v;</div><div class=\"line\">        for (int i = 0; i &lt; m; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[u].pb(v); g[v].pb(u);</div><div class=\"line\">            d[u]++, d[v]++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int sq = sqrt(n) + 1.0;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; g[i].size(); j++) &#123;</div><div class=\"line\">                int r = g[i][j];</div><div class=\"line\">                if (d[r] &gt; sq) gb[i].pb(r);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        int Q, op;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;Q);</div><div class=\"line\">        while(Q--) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;op);</div><div class=\"line\">            if (!op) &#123;</div><div class=\"line\">                scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">                w[u] += v;</div><div class=\"line\">                if (d[u] &lt;= sq) &#123;</div><div class=\"line\">                    for (int j = 0; j &lt; gb[u].size(); j++) sum[gb[u][j]] += v;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                scanf(&quot;%d&quot;, &amp;u);</div><div class=\"line\">                int ans = 0;</div><div class=\"line\">                if (d[u] &lt;= sq) &#123;</div><div class=\"line\">                    for (int j = 0; j &lt; g[u].size(); j++) ans += w[g[u][j]];</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    ans += sum[u];</div><div class=\"line\">                    for (int j = 0; j &lt; gb[u].size(); j++) ans += w[gb[u][j]];</div><div class=\"line\">                &#125;</div><div class=\"line\">                printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>13943476  2015-07-02 16:54:16 Accepted    4858    514MS   12008K  1646 B  G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["分块"]},{"title":"HDU 4857 逃生（拓扑排序 逆向思考）","url":"http://yoursite.com/2015/07/19/BC1-1 hdu 4857 逃生(拓扑排序 逆向思考)/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=4857\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=4857</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>现在有n个人，从1标号到n。要把他们排成一排。同时有m个约束条件，每个都形如：a必须在b之前。此外这些人中1号最富，2号第二富，以此类推。在排顺序时，尽量让越有钱的人越靠前。即先让1尽量靠前，再让2尽量靠前，以此类推。求出这个序列。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先肯定想到拓扑排序。但是按照正常的拓扑排序之后得到的是字典序最小的序列。无法保证让越富有的人越靠前的情况。<br>举个例子：有4个人，2个限制：1在4之前，4在2之前。<br>按照正常的拓扑排序得到：1 3 4 2<br>但是符合要求的序列则为：1 4 2 3<br>所以正确的想法是：建边时逆向建边，然后每次选取最大的数排在前面，这样子便可以保证小数（富有的人）尽可能的排在后面。然后逆序输出序列即可。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 30000 + 100;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int x;</div><div class=\"line\">    bool operator &lt; (const node &amp;T) const &#123;</div><div class=\"line\">        return x &lt; T.x;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">vector&lt;int&gt; g[N];</div><div class=\"line\">int n, m, du[N], out[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    cin&gt;&gt;t;</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        priority_queue&lt;node&gt; q;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</div><div class=\"line\">        for (int i = 0; i &lt;= n; i++) g[i].clear(), du[i] = 0;</div><div class=\"line\">        int u, v;</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;u, &amp;v);</div><div class=\"line\">            g[v].push_back(u);</div><div class=\"line\">            du[u]++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 1; i &lt;= n; i++) if (!du[i]) q.push(&#123;i&#125;);</div><div class=\"line\">        int ct = 0;</div><div class=\"line\">        while(!q.empty()) &#123;</div><div class=\"line\">            u = q.top().x;</div><div class=\"line\">            q.pop();</div><div class=\"line\">            out[ct++] = u;</div><div class=\"line\">            for (int i = 0; i &lt; g[u].size(); i++) &#123;</div><div class=\"line\">                v = g[u][i];</div><div class=\"line\">                du[v]--;</div><div class=\"line\">                if (!du[v]) q.push(&#123;v&#125;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = n - 1; i &gt;= 0; i--) printf(&quot;%d%c&quot;, out[i], i == 0 ? &apos;\\n&apos; : &apos; &apos;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>14037388  2015-07-17 11:07:34 Accepted    4857    436MS   4616K   937 B   G++ SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["拓扑排序","逆向思考"]},{"title":"CF练习赛4","url":"http://yoursite.com/2014/11/12/拉练4/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><ul>\n<li>Problem A [CodeForces 9A] Die Roll</li>\n<li>Problem B [CodeForces 8A] Train and Peter</li>\n<li>Problem C [CodeForces 7A] Kalevitch and Chess</li>\n<li>Problem D [CodeForces 7C] Line (扩展欧几里得)</li>\n<li>Problem E [CodeForces 8C] Looking for Order (bitmasks, dp)</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Problem-A-Die-Roll\"><a href=\"#Problem-A-Die-Roll\" class=\"headerlink\" title=\"Problem A Die Roll\"></a>Problem A Die Roll</h2><p>给定三个骰子，已知前两个的数字，问有多大的概率使得第三个骰子的值不小于前两个的最大值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">int main () &#123;</div><div class=\"line\">    int x, y;</div><div class=\"line\">    cin&gt;&gt;x&gt;&gt;y;</div><div class=\"line\">    if (x &gt; y) swap(x, y);</div><div class=\"line\">    x = 6 - y + 1;</div><div class=\"line\">    int g = __gcd(x, 6);</div><div class=\"line\">    if (x == 0) puts(&quot;0/1&quot;);</div><div class=\"line\">    else cout&lt;&lt;x / g&lt;&lt;&quot;/&quot;&lt;&lt;6 / g&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-B-Train-and-Peter\"><a href=\"#Problem-B-Train-and-Peter\" class=\"headerlink\" title=\"Problem B Train and Peter\"></a>Problem B Train and Peter</h2><p>给定三个字符串A，B，C。问B和C是否按照顺序出现在A中（B和C分别为A的子串，且不重复）<br>如果只有从左到右可以，输出forward<br>如果只有从右到左可以，输出backward<br>如果都可以，输出both<br>否则输出fantasy</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">const int N = 1e5 + 10;</div><div class=\"line\">char str[N];</div><div class=\"line\">char a[111], b[111];</div><div class=\"line\">int n, la, lb;</div><div class=\"line\">int get(char a[], char b[], char str[]) &#123;</div><div class=\"line\">    char *t = strstr(str, a);</div><div class=\"line\">    if (!t) return -1;</div><div class=\"line\">    if (strstr(t + la, b)) return 1;</div><div class=\"line\">    return -1;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%s%s%s&quot;, str, a, b);</div><div class=\"line\">    n = strlen(str);</div><div class=\"line\">    la = strlen(a); lb = strlen(b);</div><div class=\"line\">    int x = get(a, b, str);</div><div class=\"line\">    reverse(str, str + n);</div><div class=\"line\">    int y = get(a, b, str);</div><div class=\"line\">    if (x == 1 &amp;&amp; y == 1) puts(&quot;both&quot;);</div><div class=\"line\">    else if (x == 1 &amp;&amp; y == -1) puts(&quot;forward&quot;);</div><div class=\"line\">    else if (x == -1 &amp;&amp; y == 1) puts(&quot;backward&quot;);</div><div class=\"line\">    else puts(&quot;fantasy&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-C-Kalevitch-and-Chess\"><a href=\"#Problem-C-Kalevitch-and-Chess\" class=\"headerlink\" title=\"Problem C Kalevitch and Chess\"></a>Problem C Kalevitch and Chess</h2><p>给定一张8X8的地图，一开始全是白色，每次可以选择一行或一列将其全部染为黑色。现给定一个最终状态的地图，问最少需要染色多少次。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">int mp[10][10];</div><div class=\"line\">int b[10][10];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int tot = 1 &lt;&lt; 16;</div><div class=\"line\">    int mn = 100;</div><div class=\"line\">    char ch;</div><div class=\"line\">    rep(i, 0, 8) &#123;</div><div class=\"line\">        rep(j, 0, 8) &#123;</div><div class=\"line\">            cin&gt;&gt;ch;</div><div class=\"line\">            if (ch == &apos;B&apos;) mp[i][j] = 1;</div><div class=\"line\">            else mp[i][j] = 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int i = 0; i &lt; tot; i++) &#123;</div><div class=\"line\">        memset(b, 0, sizeof(b));</div><div class=\"line\">        int t = 0;</div><div class=\"line\">        for (int j = 0; j &lt; 16; j++) if ((i &gt;&gt; j) &amp; 1) &#123;</div><div class=\"line\">            t++;</div><div class=\"line\">            if (j &gt;= 8) for (int l = 0; l &lt; 8; l++) b[l][j - 8] = 1;</div><div class=\"line\">            else rep(l, 0, 8) b[j][l] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (t &lt; mn) &#123;</div><div class=\"line\">            bool ok = 1;</div><div class=\"line\">            rep(l, 0, 8) rep(q, 0, 8) if (mp[l][q] != b[l][q]) &#123;</div><div class=\"line\">                ok = 0;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (ok) mn = t;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mn&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-D-Line-扩展欧几里得\"><a href=\"#Problem-D-Line-扩展欧几里得\" class=\"headerlink\" title=\"Problem D Line (扩展欧几里得)\"></a>Problem D Line (扩展欧几里得)</h2><p>给定一条直线：$Ax+By+C=0$。请在$[-5{\\cdot}10^{18},5{\\cdot}10^{18}]$的范围内找到任意一个在该直线上的整点，否则输出-1<br>数据范围：$-2{\\cdot}10^9{\\leq}A,B,C{\\leq}2{\\cdot}10^9$</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>扩展欧几里得，如果C % gcd(A, B) != 0，无整数点，否则有解。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">ll x, y;</div><div class=\"line\">ll extend_gcd(ll a, ll b, ll &amp;x, ll &amp;y) &#123;</div><div class=\"line\">    if (b == 0) &#123;</div><div class=\"line\">        x = 1, y = 0;</div><div class=\"line\">        return a;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        ll r = extend_gcd(b, a % b, y, x);</div><div class=\"line\">        y -= x * (a / b);</div><div class=\"line\">        return r;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll A, B, C;</div><div class=\"line\">    cin&gt;&gt;A&gt;&gt;B&gt;&gt;C;</div><div class=\"line\">    if (A == 0) &#123;</div><div class=\"line\">        if (C % B) puts(&quot;-1&quot;);</div><div class=\"line\">        else &#123;</div><div class=\"line\">            cout&lt;&lt;0&lt;&lt;&quot; &quot;&lt;&lt;-C / B&lt;&lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; else if (B == 0) &#123;</div><div class=\"line\">        if (C % A) puts(&quot;-1&quot;);</div><div class=\"line\">        else &#123;</div><div class=\"line\">            cout&lt;&lt;-C / A&lt;&lt;&quot; &quot;&lt;&lt;0&lt;&lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        ll d = __gcd(A, B);</div><div class=\"line\">        if (C % d) puts(&quot;-1&quot;);</div><div class=\"line\">        else &#123;</div><div class=\"line\">            extend_gcd(A, B, x, y);</div><div class=\"line\">            ll tx = x * (-C / d), ty = y * (-C / d);</div><div class=\"line\">            cout&lt;&lt;tx&lt;&lt;&quot; &quot;&lt;&lt;ty&lt;&lt;endl;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-E-Exposition-bitmasks-dp\"><a href=\"#Problem-E-Exposition-bitmasks-dp\" class=\"headerlink\" title=\"Problem E Exposition (bitmasks, dp)\"></a>Problem E Exposition (bitmasks, dp)</h2><p>给定起点，以及$n$个物品的位置。现在规定每次从起点出发，可以选择一个物品，并且将其带回起点；或者选择两个物品，先后走到两个物品处，将其带回起点。问将所有物品带回起点的最少时间，每段路程的时间为该路程值的平方。<br>数据范围：$1{\\leq}n{\\leq}24$<br><a href=\"http://siofive.github.io/2014/11/12/拉练4_E/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/12/拉练4_E/</a></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-12 AK</li>\n</ul>\n","categories":["ACM","Contest"],"tags":[]},{"title":"CF 8C Looking for Order (bitmasks, dp)","url":"http://yoursite.com/2014/11/12/拉练4_E/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/8/C\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/8/C</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定起点，以及$n$个物品的位置。现在规定每次从起点出发，可以选择一个物品，并且将其带回起点；或者选择两个物品，先后走到两个物品处，将其带回起点。问将所有物品带回起点的最少时间，每段路程的时间为该路程值的平方。并且输出路径。<br>数据范围：$1{\\leq}n{\\leq}24$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>用dp[i]表示i状态时所花的最短时间。<br>那么从i状态出发，可以选择一个没有选过的物品v，即$j = i | 1 &lt;&lt; v$, 转移方程为：$dp[j] = min(dp[j], dp[i] + dis[v] * 2)$<br>或者选择两个没有选过的物品v，l，即$j = i | 1 &lt;&lt; v | 1 &lt;&lt; l$, 转移方程为：$dp[j] = min(dp[j], dp[i] + dis[v] + a[v][l] + dis[l])$<br>但这样做还时间复杂度很大，会TLE。这里有个神奇的剪枝，因为所有的物品先取后取不影响结果，所以我们可以人为的规定一个取物品的顺序（从小到大）。（详见代码）</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">#define sqr(x) (x) * (x)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int maxn = 1e5 + 10;</div><div class=\"line\">int sx, sy;</div><div class=\"line\">int x[25], y[25], n;</div><div class=\"line\">int dp[1 &lt;&lt; 24], pre[1 &lt;&lt; 24];</div><div class=\"line\">int a[24][24], d[25];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d%d%d&quot;, &amp;sx, &amp;sy, &amp;n);</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) scanf(&quot;%d%d&quot;, x + i, y + i);</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        d[i] = sqr(x[i] - sx) + sqr(y[i] - sy);</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) a[i][j] = sqr(x[i] - x[j]) + sqr(y[i] - y[j]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    int tot = 1 &lt;&lt; n;</div><div class=\"line\">    for (int i = 0; i &lt; tot; i++) if (i == 0 || dp[i]) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) if (!((i &gt;&gt; j) &amp; 1))&#123;</div><div class=\"line\">            int v = i | (1 &lt;&lt; j);</div><div class=\"line\">            int s = d[j] * 2;</div><div class=\"line\">            if (!dp[v] || dp[v] &gt; dp[i] + s) dp[v] = dp[i] + s, pre[v] = i;</div><div class=\"line\">            for (int l = j + 1; l &lt; n; l++) if (!((i &gt;&gt; l) &amp; 1)) &#123;</div><div class=\"line\">                s = d[j] + a[j][l] + d[l];</div><div class=\"line\">                v = i | (1 &lt;&lt; l) | (1 &lt;&lt; j);</div><div class=\"line\">                if (!dp[v] || dp[v] &gt; dp[i] + s) dp[v] = dp[i] + s, pre[v] = i;</div><div class=\"line\">            &#125;</div><div class=\"line\">            break; //每次只选择最小的进行状态的更新，然后就跳出</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    printf(&quot;%d\\n&quot;, dp[tot - 1]);</div><div class=\"line\">    cout&lt;&lt;0;</div><div class=\"line\">    for (int t = tot - 1; t; t = pre[t]) &#123;</div><div class=\"line\">        int s = t ^ pre[t];</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) if ((s &gt;&gt; i) &amp; 1) cout&lt;&lt;&quot; &quot;&lt;&lt;i + 1;</div><div class=\"line\">        cout&lt;&lt;&quot; &quot;&lt;&lt;0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-12 AC</li>\n</ul>\n","categories":["ACM"],"tags":["dp","bitmasks"]},{"title":"CF练习赛3","url":"http://yoursite.com/2014/11/09/拉练3/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><ul>\n<li>Problem A [CodeForces 6A] Triangle (水题)</li>\n<li>Problem B [CodeForces 6C] Alice, Bob and Chocolate (水题) </li>\n<li>Problem C [CodeForces 6B] President’s Office (水题)</li>\n<li>Problem D [CodeForces 5C] Longest Regular Bracket Sequence (贪心)</li>\n<li>Problem E [CodeForces 6E] Exposition (二分, RMQ)</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Problem-A-Triangle-水题\"><a href=\"#Problem-A-Triangle-水题\" class=\"headerlink\" title=\"Problem A Triangle (水题)\"></a>Problem A Triangle (水题)</h2><p>给出四个数字，从中任意选取三个，问能否构成三角形。如果不能，能否构成退化的三角形（即两边之和等于第三遍）</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>每次选出三个数字，试试看能否构成三角形。试的时候可以先将数字排序一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">int a, b, c, d;</div><div class=\"line\">int get(int x, int y, int z) &#123;</div><div class=\"line\">    if (x &gt; y) swap(x, y);</div><div class=\"line\">    if (x &gt; z) swap(x, z);</div><div class=\"line\">    if (y &gt; z) swap(y, z);</div><div class=\"line\">    if (x + y &gt; z) return 1;</div><div class=\"line\">    if (x + y == z) return 0;</div><div class=\"line\">    return -1;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</div><div class=\"line\">    int q = get(a, b, c);</div><div class=\"line\">    int w = get(a, b, d);</div><div class=\"line\">    int x = get(a, c, d);</div><div class=\"line\">    int y = get(b, c, d);</div><div class=\"line\">    if (q == 1 || w == 1 || x == 1 || y == 1) puts(&quot;TRIANGLE&quot;);</div><div class=\"line\">    else if (q == 0 || w == 0 || x == 0 || y == 0) puts(&quot;SEGMENT&quot;);</div><div class=\"line\">    else puts(&quot;IMPOSSIBLE&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-B-Alice-Bob-and-Chocolate-水题\"><a href=\"#Problem-B-Alice-Bob-and-Chocolate-水题\" class=\"headerlink\" title=\"Problem B Alice, Bob and Chocolate (水题)\"></a>Problem B Alice, Bob and Chocolate (水题)</h2><p>有一排巧克力，Alice和Bob分别从两头开始吃巧克力，Alice从左边，Bob右边。每个巧克力要消耗不同的时间，两个人不能同时吃一块巧克力。当两人要同时开始吃一块时，Bob会让Alice吃，问Alice和Bob各可以吃几块巧克力。</p>\n<h2 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>模拟一下就行。或者直接从中间时间找一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">const int N = 1e5 + 10;</div><div class=\"line\">int n;</div><div class=\"line\">int a[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;n;</div><div class=\"line\">    a[0] = 0;</div><div class=\"line\">    int x;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">        a[i] = a[i - 1] + x;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (n == 1) &#123;</div><div class=\"line\">        cout&lt;&lt;1&lt;&lt;&quot; &quot;&lt;&lt;0&lt;&lt;endl;</div><div class=\"line\">        return 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int id = lower_bound(a + 1, a + n + 1, a[n] / 2) - a;</div><div class=\"line\">    for (int j = max(id - 3, 1); j &lt;= min(id + 3, n); j++) &#123;</div><div class=\"line\">        if (a[j - 1] &gt; a[n] - a[j]) &#123;</div><div class=\"line\">            cout&lt;&lt;j - 1&lt;&lt;&quot; &quot;&lt;&lt;n - j + 1&lt;&lt;endl;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-C-President’s-Office-水题\"><a href=\"#Problem-C-President’s-Office-水题\" class=\"headerlink\" title=\"Problem C President’s Office (水题)\"></a>Problem C President’s Office (水题)</h2><p>给定一个地图，’R’表示boss的地盘，’.’表示空地，其他字符表示小怪的地盘。问与’R’相邻的小怪有多少种。</p>\n<h2 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>对于每个’R’，上下左右搜一下，统计一下小怪数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">int n, m;</div><div class=\"line\">char mp[111][111];</div><div class=\"line\">int dx[4] = &#123;0, 0, 1, -1&#125;, dy[4] = &#123;1, -1, 0, 0&#125;;</div><div class=\"line\">char p;</div><div class=\"line\">int pos[10010][2], cnt;</div><div class=\"line\">map&lt;char, int&gt; has;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;p;</div><div class=\"line\">    cnt = 0;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; m; j++) &#123;</div><div class=\"line\">            cin&gt;&gt;mp[i][j];</div><div class=\"line\">            if (mp[i][j] == p) &#123;</div><div class=\"line\">                pos[cnt][0] = i, pos[cnt++][1] = j;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int sum = 0;</div><div class=\"line\">    has.clear();</div><div class=\"line\">    has[p] = 1;</div><div class=\"line\">    for (int t = 0; t &lt; cnt; t++) &#123;</div><div class=\"line\">        int x = pos[t][0], y = pos[t][1];</div><div class=\"line\">        for (int i = 0; i &lt; 4; i++) &#123;</div><div class=\"line\">            int tx = x + dx[i], ty = y + dy[i];</div><div class=\"line\">            if (POSIN(tx, ty) &amp;&amp; mp[tx][ty] != &apos;.&apos;) &#123;</div><div class=\"line\">                int d = ++has[mp[tx][ty]];</div><div class=\"line\">                if (d == 1) sum++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;sum&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-D-Longest-Regular-Bracket-Sequence-贪心\"><a href=\"#Problem-D-Longest-Regular-Bracket-Sequence-贪心\" class=\"headerlink\" title=\"Problem D Longest Regular Bracket Sequence (贪心)\"></a>Problem D Longest Regular Bracket Sequence (贪心)</h2><p>给定一串括号，长度为$n$, 求最长的能够匹配的(符合规则)的子序列，输出最长的长度，以及该长度的个数。如果没有匹配的，输出0 1<br>数据范围：$1{\\leq}n{\\leq}10^6$<br><a href=\"http://siofive.github.io/2014/11/09/拉练3_D/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/09/拉练3_D/</a></p>\n<h2 id=\"Problem-E-Exposition-二分-RMQ-set\"><a href=\"#Problem-E-Exposition-二分-RMQ-set\" class=\"headerlink\" title=\"Problem E Exposition (二分, RMQ, set)\"></a>Problem E Exposition (二分, RMQ, set)</h2><p>给定$n$个数，每个数为$h_i$，以及一个$k$。求最长的区间，使得该区间内所有数字的差值不超过$k$。第一行输出区间长度以及区间的个数，第二行输出每个区间$[l_i, r_i]$<br>数据范围：$1{\\leq}n{\\leq}10^5, 0{\\leq}k, h_i{\\leq}10^6$<br><a href=\"http://siofive.github.io/2014/11/09/拉练3_E/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/09/拉练3_E/</a></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-9 AK</li>\n</ul>\n","categories":["ACM","Contest"],"tags":[]},{"title":"CF 6E Exposition (二分, RMQ, set)","url":"http://yoursite.com/2014/11/09/拉练3_E/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/6/E\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/6/E</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定$n$个数，每个数为$h_i$，以及一个$k$。求最长的区间，使得该区间内所有数字的差值不超过$k$。第一行输出区间长度以及区间的个数，第二行输出每个区间$[l_i, r_i]$<br>数据范围：$1{\\leq}n{\\leq}10^5, 0{\\leq}k, h_i{\\leq}10^6$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><h2 id=\"二分-RMQ\"><a href=\"#二分-RMQ\" class=\"headerlink\" title=\"二分 + RMQ\"></a>二分 + RMQ</h2><p>首先用RMQ预处理出任意区间[l, r]的最大值和最小值。然后二分答案，如果该长度下，存在最大值减最小值的差值不超过$k$，便有解。</p>\n<h2 id=\"Multiset\"><a href=\"#Multiset\" class=\"headerlink\" title=\"Multiset\"></a>Multiset</h2><p>也可以用Multiset来实现，从左到右依次将数字存入Multiset中。每加入一个数，如果此时出现最大值与最小值的差超过$k$，就要从头开始删数字，直到符合条件位置。</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"二分-RMQ-1\"><a href=\"#二分-RMQ-1\" class=\"headerlink\" title=\"二分 + RMQ\"></a>二分 + RMQ</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">const int maxn = 1e5 + 10;</div><div class=\"line\">int n, k, mx[20][maxn], mn[20][maxn];</div><div class=\"line\">void RMQ(int num) &#123;</div><div class=\"line\">    for (int i = 1; i &lt;= log2(num) + 1; i++)</div><div class=\"line\">        for (int j = 1; j &lt;= num; j++) if (j + (1 &lt;&lt; i) - 1 &lt;= num) &#123;</div><div class=\"line\">                mx[i][j] = max(mx[i - 1][j], mx[i - 1][j + (1 &lt;&lt; i &gt;&gt; 1)]);</div><div class=\"line\">                mn[i][j] = min(mn[i - 1][j], mn[i - 1][j + (1 &lt;&lt; i &gt;&gt; 1)]);</div><div class=\"line\">            &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int get(int st, int ed) &#123;</div><div class=\"line\">    int k = (int) log2(ed - st + 1.0);</div><div class=\"line\">    int mxans = max(mx[k][st], mx[k][ed - (1 &lt;&lt; k) + 1]);</div><div class=\"line\">    int mnans = min(mn[k][st], mn[k][ed - (1 &lt;&lt; k) + 1]);</div><div class=\"line\">    return mxans - mnans;</div><div class=\"line\">&#125;</div><div class=\"line\">bool check(int mid) &#123;</div><div class=\"line\">    for (int i = 1; i &lt;= n - mid + 1; i++) &#123;</div><div class=\"line\">        if (get(i, i + mid - 1) &lt;= k) return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;mx[0][i]);</div><div class=\"line\">        mn[0][i] = mx[0][i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    RMQ(n);</div><div class=\"line\">    int l = 0, r = n, mid;</div><div class=\"line\">    while(l &lt; r) &#123;</div><div class=\"line\">        mid = (l + r) &gt;&gt; 1;</div><div class=\"line\">        if (check(mid)) l = mid;</div><div class=\"line\">        else r = mid - 1;</div><div class=\"line\">        if (l + 1 == r) break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (check(r)) l = r;</div><div class=\"line\">    vector&lt; pair&lt;int, int&gt; &gt; g;</div><div class=\"line\">    for (int i = 1; i &lt;= n - l + 1; i++) &#123;</div><div class=\"line\">        if (get(i, i + l - 1) &lt;= k) g.pb(make_pair(i, i + l - 1));</div><div class=\"line\">    &#125;</div><div class=\"line\">    printf(&quot;%d %d\\n&quot;, l, g.size());</div><div class=\"line\">    for (int i = 0; i &lt; g.size(); i++) cout&lt;&lt;g[i].first&lt;&lt;&quot; &quot;&lt;&lt;g[i].second&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Multiset-1\"><a href=\"#Multiset-1\" class=\"headerlink\" title=\"Multiset\"></a>Multiset</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int N = 1e5 + 10;</div><div class=\"line\">multiset&lt;int&gt; s;</div><div class=\"line\">int n, k, h[N], r[N], mx, cnt, t;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;n&gt;&gt;k;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, h + i);</div><div class=\"line\">        s.insert(h[i]);</div><div class=\"line\">        while(*s.rbegin() - *s.begin() &gt; k) s.erase(s.find(h[t++]));</div><div class=\"line\">        int len = i - t + 1;</div><div class=\"line\">        if (len &gt; mx) &#123;</div><div class=\"line\">            mx = len, cnt = 0;</div><div class=\"line\">            r[cnt++] = t;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (len == mx) r[cnt++] = t;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;&quot; &quot;&lt;&lt;cnt&lt;&lt;endl;</div><div class=\"line\">    for (int i = 0; i &lt; cnt; i++) printf(&quot;%d %d\\n&quot;, r[i] + 1, r[i] + mx);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-9 AC</li>\n</ul>\n","categories":["ACM"],"tags":["二分","RMQ","set"]},{"title":"CF 5C Longest Regular Bracket Sequence (贪心)","url":"http://yoursite.com/2014/11/09/拉练3_D/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/5/C\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/5/C</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一串括号，长度为$n$, 求最长的能够匹配的(符合规则)的子序列，输出最长的长度，以及该长度的个数。如果没有匹配的，输出0 1<br>数据范围：$1{\\leq}n{\\leq}10^6$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>对于字符串串中的每个’)’我们定义两个值：</p>\n<ol>\n<li>pos[i]表示’)’对应匹配的’(‘的位置，如果不匹配则为-1。pos[i]可以用栈来存储’(‘的位置实现。</li>\n<li>f[i]表示以该’)’结尾能够匹配的最长子序列。<br>首先，我们可以知道如果pos[i]不等于-1，那么(pos[i], i)这个子串一定可以。<br>其次，如果上述符合，再观察pos[i] - 1的位置，如果该位置也为’)’，且也被匹配到了，那么该子序列就可以继续向前匹配到f[pos[i] - 1]</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">const int N = 1e6 + 10;</div><div class=\"line\">char str[N];</div><div class=\"line\">int pos[N], f[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    gets(str);</div><div class=\"line\">    int n = strlen(str);</div><div class=\"line\">    int mx = 0, m = 1, cnt = 0;</div><div class=\"line\">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (str[i - 1] == &apos;(&apos;) pos[++cnt] = i;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            if (!cnt) continue;</div><div class=\"line\">            f[i] = f[pos[cnt] - 1] + i - pos[cnt] + 1;</div><div class=\"line\">            cnt--;</div><div class=\"line\">            if (f[i] &gt; mx) mx = f[i], m = 1;</div><div class=\"line\">            else if (f[i] == mx) m++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;&quot; &quot;&lt;&lt;m&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-9 AC</li>\n</ul>\n","categories":["ACM"],"tags":["dp","贪心"]},{"title":"CF练习赛2","url":"http://yoursite.com/2014/11/07/拉练2/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><ul>\n<li>Problem A [CodeForces 5A] Chat Server’s Outgoing Traffic (水题)</li>\n<li>Problem B [CodeForces 5B] Center Alignment (水题) </li>\n<li>Problem C [CodeForces 4D] Mysterious Present (dp, 最长上升子序列)</li>\n<li>Problem D [CodeForces 3B] Lorry (贪心)</li>\n<li>Problem E [CodeForces 2C] Commentator problem (几何, 模拟退火)</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"Problem-A-Chat-Server’s-Outgoing-Traffic-水题\"><a href=\"#Problem-A-Chat-Server’s-Outgoing-Traffic-水题\" class=\"headerlink\" title=\"Problem A Chat Server’s Outgoing Traffic (水题)\"></a>Problem A Chat Server’s Outgoing Traffic (水题)</h2><p>有一个聊天系统，每次可以进来一个人，出去一个人，或是在系统内的一个人说一些话。而在系统内说的话，所有人（包括自己）的屏幕上都会出现。问所有人的屏幕上总共出现了多少字符。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>统计一下人数就好。总数就是每段话的字符串乘以人数的乘积和。</p>\n<h2 id=\"Problem-B-Center-Alignment-水题\"><a href=\"#Problem-B-Center-Alignment-水题\" class=\"headerlink\" title=\"Problem B Center Alignment (水题)\"></a>Problem B Center Alignment (水题)</h2><p>有一段文字，现在要把这段文字放在一个方框里，并且居中。如果不能绝对居中的，按照先靠左，再靠右的格式居中。</p>\n<h2 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>用一个变量来区分靠左还是靠右。</p>\n<h2 id=\"Problem-C-Mysterious-Present-dp-最长上升子序列\"><a href=\"#Problem-C-Mysterious-Present-dp-最长上升子序列\" class=\"headerlink\" title=\"Problem C Mysterious Present (dp, 最长上升子序列)\"></a>Problem C Mysterious Present (dp, 最长上升子序列)</h2><p>有一个明信片，宽度为$w$，高度为$h$。以及$n$个信封，每个的宽度为$w_i$，高度为$h_i$，信封$A$的宽度和高度均大于$B$时，$B$可以装进$A$。现在要把明信片装进信封里（规则与信封嵌套一样），且要求信封嵌套的层数最多。问最多能有多少层，并输出嵌套方案。<br>数据范围：$1{\\leq}n{\\leq}5000, 1{\\leq}w_i, h_i{\\leq}10^6$<br><a href=\"http://siofive.github.io/2014/11/07/拉练2_C/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/07/拉练2_C/</a></p>\n<h2 id=\"Problem-D-Lorry-贪心\"><a href=\"#Problem-D-Lorry-贪心\" class=\"headerlink\" title=\"Problem D Lorry (贪心)\"></a>Problem D Lorry (贪心)</h2><p>有两种船，$A$船的体积为$1$，$B$船的体积为$2$。而每条船的价值不同。现在有$n$条船，给出每条船的体积$t_i$和价值$p_i$。问一个体积为$v$的仓库，怎样存放可以使得价值最大。求最大的价值，并输出存放的船。<br>数据范围：$1{\\leq}n{\\leq}10^5, 1{\\leq}v{\\leq}10^9, 1{\\leq}t_i{\\leq}2, 1{\\leq}p_i{\\leq}10^4$</p>\n<h2 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>将$A$类型和$B$类型分开，然后按照价值排序。<br>如果按照正常的思路：如果两个$A$船的价值和大于$B$船，那么选择两个$A$船，否则选$B$。然后依次处理。<br>但上述方法需要处理很多细节，很容易出现问题。其实可以换个思路考虑，枚举选取的$A$船的个数，然后剩下的体积全部装$B$船，找出最大值即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">int n, v;</div><div class=\"line\">int ca, cb;</div><div class=\"line\">const int N = 100000 + 10;</div><div class=\"line\">struct ka &#123;</div><div class=\"line\">    int c, id;</div><div class=\"line\">&#125;a[N];</div><div class=\"line\">struct sb &#123;</div><div class=\"line\">    int c, id;</div><div class=\"line\">&#125;b[N];</div><div class=\"line\">bool cmp1(ka s, ka v) &#123;</div><div class=\"line\">    return s.c &gt; v.c;</div><div class=\"line\">&#125;</div><div class=\"line\">bool cmp2(sb s, sb v) &#123;</div><div class=\"line\">    return s.c &gt; v.c;</div><div class=\"line\">&#125;</div><div class=\"line\">vector&lt;int&gt; g;</div><div class=\"line\">int s_a[N], s_b[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;n&gt;&gt;v;</div><div class=\"line\">    int t, c;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;t, &amp;c);</div><div class=\"line\">        if (t == 1) a[ca].c = c, a[ca++].id = i + 1;</div><div class=\"line\">        else b[cb].c = c, b[cb++].id = i + 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    sort(a, a + ca, cmp1);</div><div class=\"line\">    sort(b, b + cb, cmp2);</div><div class=\"line\">    s_a[0] = 0;</div><div class=\"line\">    for (int i = 0; i &lt; ca; i++) &#123;</div><div class=\"line\">        s_a[i + 1] = s_a[i] + a[i].c;</div><div class=\"line\">    &#125;</div><div class=\"line\">    s_b[0] = 0;</div><div class=\"line\">    for (int i = 0; i &lt; cb; i++) &#123;</div><div class=\"line\">        s_b[i + 1] = s_b[i] + b[i].c;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int na = 0, nb = 0;</div><div class=\"line\">    int sum = 0;</div><div class=\"line\">    int mx = 0;</div><div class=\"line\">    for (int i = 0; i &lt;= ca; i++) &#123;</div><div class=\"line\">        if (i &gt; v) break;</div><div class=\"line\">        int les = (v - i) / 2;</div><div class=\"line\">        if (les &gt;= cb) les = cb;</div><div class=\"line\">        int tmp = s_a[i] + s_b[les];</div><div class=\"line\">        if (tmp &gt; mx) &#123;</div><div class=\"line\">            na = i, nb = les;</div><div class=\"line\">            mx = tmp;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">    for (int i = 0; i &lt; na; i++) printf(&quot;%d &quot;, a[i].id);</div><div class=\"line\">    for (int i = 0; i &lt; nb; i++) printf(&quot;%d &quot;, b[i].id);</div><div class=\"line\">    cout&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Problem-E-Commentator-problem-几何-模拟退火\"><a href=\"#Problem-E-Commentator-problem-几何-模拟退火\" class=\"headerlink\" title=\"Problem E Commentator problem (几何, 模拟退火)\"></a>Problem E Commentator problem (几何, 模拟退火)</h2><p>给定三个圆的圆心坐标$(x_i, y_i)$和半径$r_i$，求点使得在该点看三个圆的视角相同，如果有多个点，取视角最大的点。<br>数据范围：$-10^3{\\leq}x_i, y_i{\\leq}10^3, 1{\\leq}r_i{\\leq}10^3$<br><a href=\"http://siofive.github.io/2014/11/07/拉练2_E/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/07/拉练2_E/</a></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-7 AK</li>\n</ul>\n","categories":["ACM","Contest"],"tags":[]},{"title":"CF 2C Commentator problem (几何, 模拟退火)","url":"http://yoursite.com/2014/11/07/拉练2_E/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/2/C\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/2/C</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定三个圆的圆心坐标$(x_i, y_i)$和半径$r_i$，求点使得在该点看三个圆的视角相同，如果有多个点，取视角最大的点。<br>数据范围：$-10^3{\\leq}x_i, y_i{\\leq}10^3, 1{\\leq}r_i{\\leq}10^3$</p>\n<a id=\"more\"></a>\n<h1 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h1><p>从某个点观察某个圆的视角为：$2asin\\frac{r}{d}$，其中$r$为圆的半径，$d$为点到圆心的半径。<br>所以对于两个圆来说：<br>两者的半径相同，那么观察视角相同的点所形成的曲线为一条直线，即两圆心所在直线的垂直平分线。<br>两者的半径不同，那么曲线为圆。为什么为圆呢，将圆心所在的直线设为$x$轴，其中一个圆心为原点，然后设视角相同的点为$(x, y)$，根据前面提到的视角相同的条件列出方程，会发现$x^2, y^2$的系数相同且不为0。所以曲线为圆。<br>知道这个线索之后，接下来题目就容易了。(只是理论AC容易了好么..)<br>圆$1$，圆$2$的曲线和圆$2$，圆$3$的曲线的交点即是所求的点，如果有多个点，取视角最大的即可。<br>问题就是以下几个情况：</p>\n<ul>\n<li>两直线求交点</li>\n<li>直线和圆求交点</li>\n<li>圆和圆求交点</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">挖个坑，这个方法还没有AC。</div></pre></td></tr></table></figure>\n<h1 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h1><p>神奇的模拟退火！<br>模拟退火是一个随机算法，原理大致是：在某个局部解的周围随机的探测，如果有更优解，则更新。(这点和大多数贪心很相似)但与普通贪心不同的是，模拟退火有一个跳出局部解的机制，即会选择非最优解也进行进一步的探测。</p>\n<p>先来一份CF上看到的题解，选取重心为最开始的探测点，然后上下左右四个方向进行探测。但该方法没有一般性。后面有较为一般性的模拟退火<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">#define sqr(x) (x) * (x)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">double x[3], y[3], r[3], g[3];</div><div class=\"line\">int dx[4] = &#123;-1, 0, 1, 0&#125;, dy[4] = &#123;0, 1, 0, -1&#125;;</div><div class=\"line\">double f(double ax, double ay) &#123; //f函数是三个视角中两两差的平方和，用来衡量解的优劣</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++)</div><div class=\"line\">        g[i] = sqrt(sqr(x[i] - ax) + sqr(y[i] - ay)) / r[i];</div><div class=\"line\">    double tmp = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++)</div><div class=\"line\">        tmp += sqr(g[i] - g[(i + 1) % 3]);</div><div class=\"line\">    return tmp;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    double dt = 1, ax = 0, ay = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">        scanf(&quot;%lf%lf%lf&quot;, x + i, y + i, r + i);</div><div class=\"line\">        ax += x[i], ay += y[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    ax /= 3, ay /= 3; //选择重心进行探测</div><div class=\"line\">    while(dt &gt; eps) &#123;</div><div class=\"line\">        int fg = -1;</div><div class=\"line\">        double now = f(ax, ay);</div><div class=\"line\">        for (int i = 0; i &lt; 4; i++) &#123; //从四个方向进行探测</div><div class=\"line\">            double nxt = f(ax + dx[i] * dt, ay + dy[i] * dt);</div><div class=\"line\">            if (nxt &lt; now) now = nxt, fg = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (fg == -1) dt *= 0.5; //如果四个方向都没有找到最优解，则减小步长</div><div class=\"line\">        else ax += dx[fg] * dt, ay += dy[fg] * dt; //否则更新探测中心</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (f(ax, ay) &lt; eps) printf(&quot;%.5lf %.5lf\\n&quot;, ax, ay);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>上述的探测方式没有一般性，下面是较为一般性的探测方式。(ps 还没有写完)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">我又来挖坑了==|</div></pre></td></tr></table></figure></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-7 AC</li>\n</ul>\n","categories":["ACM"],"tags":["几何","模拟退火"]},{"title":"CF 4D Mysterious Present (dp, 最长上升子序列)","url":"http://yoursite.com/2014/11/07/拉练2_C/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/4/D\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/4/D</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个明信片，宽度为$w$，高度为$h$。以及$n$个信封，每个的宽度为$w_i$，高度为$h_i$，信封$A$的宽度和高度均大于$B$时，$B$可以装进$A$。现在要把明信片装进信封里（规则与信封嵌套一样），且要求信封嵌套的层数最多。问最多能有多少层，并输出嵌套方案。<br>数据范围：$1{\\leq}n{\\leq}5000, 1{\\leq}w_i, h_i{\\leq}10^6$</p>\n<a id=\"more\"></a>\n<h1 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h1><p>由于n才5000，所以可以采用记忆化搜索来做，$dp[i]$表示以$i$信封为最内层，可以有多少层。<br>每搜到一个信封$i$，如果之前已经搜索过了，返回$dp[i]$。<br>否则先操作$dp[i] = 1$(因为一个信封为$1$层)。然后对其他所有信封进行搜索，如果其中有信封$j$能作为$i$信封的外层，且$dp[j] + 1 &gt; dp[i]$，更新$dp[i]$。<br>从明信片开始搜索。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int N = 5010;</div><div class=\"line\">int n, w[N], h[N], nxt[N], dp[N];</div><div class=\"line\">int gao(int x) &#123;</div><div class=\"line\">    if (dp[x]) return dp[x];</div><div class=\"line\">    dp[x] = 1;</div><div class=\"line\">    for (int i = 0; i &lt;= n; i++) if (w[i] &gt; w[x] &amp;&amp; h[i] &gt; h[x]) &#123;</div><div class=\"line\">        if (gao(i) + 1 &gt; dp[x]) &#123;</div><div class=\"line\">            nxt[x] = i;</div><div class=\"line\">            dp[x] = dp[i] + 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return dp[x];</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    cin&gt;&gt;n;</div><div class=\"line\">    for (int i = 0; i &lt;= n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, w + i, h + i);</div><div class=\"line\">        nxt[i] = -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    gao(0);</div><div class=\"line\">    cout&lt;&lt;dp[0] - 1&lt;&lt;endl;</div><div class=\"line\">    for (int i = nxt[0]; i != -1; i = nxt[i]) printf(&quot;%d &quot;, i);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h1><p>首先先将信封进行筛选，即去除那些装不了明信片的。然后求二维偏序集$(x,y)$的最长上升子序列即可。<br>求法是：先按照其中一维进行从小到大排序，第一维相同，按第二维从小到大排序，这样排序的目的是保证只有排在后面的信封才有可能装排在前面的信封。<br>然后按照$O(N^2)$的思想找到最长上升子序列即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int N = 5010;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    int w, h, id;</div><div class=\"line\">&#125;e[N];</div><div class=\"line\">bool cmp(node s, node v) &#123;</div><div class=\"line\">    if (s.w != v.w) return s.w &lt; v.w;</div><div class=\"line\">    return s.h &lt; v.h;</div><div class=\"line\">&#125;</div><div class=\"line\">int dp[N], pre[N];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int n, w, h;</div><div class=\"line\">    scanf(&quot;%d%d%d&quot;, &amp;n, &amp;w, &amp;h);</div><div class=\"line\">    int x, y, cnt = 0;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;x, &amp;y);</div><div class=\"line\">        if (x &gt; w &amp;&amp; y &gt; h) e[cnt++] = &#123;x, y, i + 1&#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    sort(e, e + cnt, cmp);</div><div class=\"line\">    int mx = 0, fg = -1;</div><div class=\"line\">    for (int i = 0; i &lt; cnt; i++) &#123;</div><div class=\"line\">        pre[i] = -1;</div><div class=\"line\">        dp[i] = 1;</div><div class=\"line\">        for (int j = 0; j &lt; i; j++) if (e[j].w &lt; e[i].w &amp;&amp; e[j].h &lt; e[i].h) &#123;</div><div class=\"line\">            if (dp[i] &lt; dp[j] + 1) &#123;</div><div class=\"line\">                dp[i] = dp[j] + 1;</div><div class=\"line\">                pre[i] = j;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (dp[i] &gt; mx) mx = dp[i], fg = i;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">    vector&lt;int&gt; v;</div><div class=\"line\">    for (int i = fg; i != -1; i = pre[i]) v.pb(e[i].id);</div><div class=\"line\">    reverse(v.begin(), v.end());</div><div class=\"line\">    for (int i = 0; i &lt; v.size(); i++) cout&lt;&lt;v[i]&lt;&lt;&quot; &quot;;</div><div class=\"line\">    if (fg != -1) cout&lt;&lt;endl;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-7 AC</li>\n</ul>\n","categories":["ACM"],"tags":["dp","最长上升子序列"]},{"title":"BestCoder Round 16","url":"http://yoursite.com/2014/11/04/BC16/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/search.php?field=problem&amp;key=BestCoder+Round+%2316&amp;source=1&amp;searchmode=source\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/search.php?field=problem&amp;key=BestCoder+Round+%2316&amp;source=1&amp;searchmode=source</a></p>\n<ul>\n<li>5086 Revenge of Segment Tree (水题)</li>\n<li>5087 Revenge of LIS II (dp)</li>\n<li>5088 Revenge of Nim II (高斯消元)</li>\n<li>5089 Revenge of iSea (数学 概率)</li>\n</ul>\n<p>BC第16场，感觉题目质量还可以。最近状态不太好，以前组队赛太依赖孟神的dp了，导致现在完全不会dp。。这是个忧伤的故事</p>\n<a id=\"more\"></a>\n<h1 id=\"1001-Revenge-of-Segment-Tree-水题\"><a href=\"#1001-Revenge-of-Segment-Tree-水题\" class=\"headerlink\" title=\"1001 Revenge of Segment Tree (水题)\"></a>1001 Revenge of Segment Tree (水题)</h1><p>求一个序列的所有连续子序列的序列和的和。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>考虑每个数出现在多少个子序列之中，假设第i个数为$A_i$，区间为[L,R]。那么包含$A_i$的区间满足$L{\\leq}i{\\bigcap}R{\\geq}i$。累加$(L+1){\\times}(N−R){\\times}A[i]$就可以了。<br>复杂度：O(N)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int N = 447000 + 30;</div><div class=\"line\">const int mod = 1000000007;</div><div class=\"line\">int n;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        ll ans = 0;</div><div class=\"line\">        int k;</div><div class=\"line\">        for (int i = 1;i &lt;= n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;k);</div><div class=\"line\">            ll s = i, ed = (n - i) + 1;</div><div class=\"line\">            ll p = (((s * ed) % mod) * k) % mod;</div><div class=\"line\">            ans = (ans + p) % mod;</div><div class=\"line\">        &#125;</div><div class=\"line\">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"1002-Revenge-of-LIS-II-dp\"><a href=\"#1002-Revenge-of-LIS-II-dp\" class=\"headerlink\" title=\"1002 Revenge of LIS II (dp)\"></a>1002 Revenge of LIS II (dp)</h1><p>求序列第二长的上升子序列。<br><a href=\"http://siofive.github.io/2014/11/04/BC16_2/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/04/BC16_2/</a></p>\n<h1 id=\"Revenge-of-Nim-II-高斯消元\"><a href=\"#Revenge-of-Nim-II-高斯消元\" class=\"headerlink\" title=\"Revenge of Nim II (高斯消元)\"></a>Revenge of Nim II (高斯消元)</h1><p>Nim游戏的后手作弊移走一些整堆的物体（不能全拿走），可以保证先手必败吗？<br><a href=\"http://siofive.github.io/2014/11/04/BC16_3/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/04/BC16_3/</a></p>\n<h1 id=\"Revenge-of-iSea-数学-概率\"><a href=\"#Revenge-of-iSea-数学-概率\" class=\"headerlink\" title=\"Revenge of iSea (数学 概率)\"></a>Revenge of iSea (数学 概率)</h1><p>给出N道难度递增的题目，难度用可能做出的百分比表示，选出K道题目使得做出K-1道题目的概率最大。<br><a href=\"http://siofive.github.io/2014/11/04/BC16_4/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/04/BC16_4/</a></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-4 AK</li>\n</ul>\n","categories":["ACM","Contest"],"tags":[]},{"title":"hdu 5089 Revenge of iSea (数学 概率)","url":"http://yoursite.com/2014/11/04/BC16_4/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5089\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5089</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给出N道难度递增的题目，难度用可能做出的百分比表示，选出K道题目使得做出K-1道题目的概率最大。</p>\n<a id=\"more\"></a>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>假设最优解已经包含了k-1个了，现在来选取最后一个。K-1个全部做出的概率是$P_a(k-1)$，有一道未做出的概率是$P_l(k−1)$，现在选取的是$P_k$，那么做出K-1道的概率是<br>$P_a(k−1){\\times}(1−P_k)+P_l(k−1){\\times}P_k=P_a(k−1)+P_k{\\times}(P_l(k−1)−P_a(k−1))$<br>这是一个关于$P_k$的一次函数，如果$P_l(k−1)−P_a(k−1)$为正，选取最大的$P_k$，否则选取最小的。<br>这样，可以证明答案一定是选取两边的概率，枚举比较一下就可以算出最大的概率了。<br>还有最后一个问题，需要求字典序最小的。对于左边选取的$P_i$，当然index越小越好，对于右边的，如果存在相同的value，应该选取index较小的。比如90 80 30 30，如果答案是第一个和最后一个，为了取得最小的字典序，需要用第三个来替换一下第四个。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-8</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">double p[50];</div><div class=\"line\">int vis[50];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t, n, k;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%lf&quot;, p + i);</div><div class=\"line\">            p[i] /= 100;</div><div class=\"line\">        &#125;</div><div class=\"line\">        memset(vis, 0, sizeof(vis));</div><div class=\"line\">        int pos[50], cnt = 0, tot = 0;</div><div class=\"line\">        double ans = 0;</div><div class=\"line\">        for (int i = 0; i &lt;= k; i++) &#123;</div><div class=\"line\">            cnt = 0;</div><div class=\"line\">            for (int j = 0; j &lt; i; j++) pos[cnt++] = j;</div><div class=\"line\">            for (int j = 0; j &lt; k - i; j++) pos[cnt++] = n - j - 1;</div><div class=\"line\">            double res = 0;</div><div class=\"line\">            for (int j = 0; j &lt; cnt; j++) &#123;</div><div class=\"line\">                double tmp = 1;</div><div class=\"line\">                for (int l = 0; l &lt; cnt; l++) &#123;</div><div class=\"line\">                    if (l != j) tmp *= p[pos[l]];</div><div class=\"line\">                    else tmp *= (1 - p[pos[l]]);</div><div class=\"line\">                &#125;</div><div class=\"line\">                res += tmp;</div><div class=\"line\">            &#125;</div><div class=\"line\">            //cout&lt;&lt;res&lt;&lt;endl;</div><div class=\"line\">            if (res - ans &gt; -eps) &#123; //这里为-eps是为了保证选的为最小字典序</div><div class=\"line\">                ans = res;</div><div class=\"line\">                tot = i;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; tot; i++) vis[i] = 1;</div><div class=\"line\">        int now;</div><div class=\"line\">        for (int i = n - (k - tot); i &lt; n; i++) &#123;</div><div class=\"line\">            now = i;</div><div class=\"line\">            for (int j = i; j &gt;= 0; j--) &#123;</div><div class=\"line\">                if (vis[j] || p[j] &gt; p[i]) break;</div><div class=\"line\">                now = j;</div><div class=\"line\">            &#125;</div><div class=\"line\">            vis[now] = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0, j = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            if (vis[i]) &#123;</div><div class=\"line\">                j++;</div><div class=\"line\">                printf(&quot;%d%c&quot;, i + 1, j == k ? &apos;\\n&apos; : &apos; &apos;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-4 AK</li>\n</ul>\n","categories":["ACM"],"tags":["数学","概率"]},{"title":"hdu 5088 Revenge of Nim II (高斯消元)","url":"http://yoursite.com/2014/11/04/BC16_3/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5088\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5088</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>Nim游戏的后手作弊移走一些整堆的物体（不能全拿走），可以保证先手必败吗？</p>\n<a id=\"more\"></a>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>Nim游戏先手必败的条件是$XORSum(a[i])=0$。后手的目的就是找到这样的一个非空子集。把这里的a[i]看做一个每位为0或1的行，所有的数字组成一个矩阵，矩阵空间的运算是XOR。<br>可以发现，$10^{12}$最多为40位二进制，所以当数字个数大于40时，对该矩阵高斯消元之后，一定有某些行全为0，代表着该数字和其他数字异或之后为0。<br>当数字个数小于等于40时，对该矩阵进行高斯消元，如果矩阵的秩小于数字个数，代表能异或为0。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int maxn = 65;</div><div class=\"line\">const int N = 1010;</div><div class=\"line\">ll a[N];</div><div class=\"line\">int b[maxn][maxn];</div><div class=\"line\">int rnk(int a[maxn][maxn], int n, int m) &#123;</div><div class=\"line\">    int ret = 0;</div><div class=\"line\">    for (int i = 0, pivot = 0; i &lt; n &amp;&amp; pivot &lt; m; ++pivot) &#123;</div><div class=\"line\">        int pos = -1;</div><div class=\"line\">        for (int j = i; j &lt; n; j++) &#123;</div><div class=\"line\">            if (a[j][pivot] == 1) &#123;</div><div class=\"line\">                pos = j;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (pos == -1) continue;</div><div class=\"line\">        if (pos != i) &#123;</div><div class=\"line\">            for (int j = pivot; j &lt; m; j++) swap(a[i][j], a[pos][j]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ++ret;</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) &#123;</div><div class=\"line\">            if (a[j][pivot] &amp;&amp; j != i) &#123;</div><div class=\"line\">                for (int k = pivot; k &lt; m; k++) a[j][k] ^= a[i][k];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t, n;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        ll sum = 0;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%I64d&quot;, a + i);</div><div class=\"line\">            sum ^= a[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (n &gt; maxn || sum == 0) &#123;</div><div class=\"line\">            puts(&quot;Yes&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; maxn; j++) &#123;</div><div class=\"line\">                b[i][j] = a[i] &gt;&gt; j &amp; 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (rnk(b, n, maxn) &lt; n) puts(&quot;Yes&quot;);</div><div class=\"line\">        else puts(&quot;No&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-4 AK</li>\n</ul>\n","categories":["ACM"],"tags":["博弈","高斯消元"]},{"title":"hdu 5087 Revenge of LIS II (dp)","url":"http://yoursite.com/2014/11/04/BC16_2/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=5087\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=5087</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求序列第二长的上升子序列。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>LIS的$O(N^2)$做法是$dp[i]=max(dp[j]|a[j]&lt;a[i])+1$。如果需要第二大的，额外开一维，记录到该位的最大长度能否由多个序列得到。<br>复杂度：$O(N^2)$</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int maxn = 1100;</div><div class=\"line\">int a[maxn], dp[maxn][2], mx, ok, n;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int t;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;t);</div><div class=\"line\">    while(t--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, a + i);</div><div class=\"line\">        mx = -1;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            dp[i][0] = 1, dp[i][1] = 0;</div><div class=\"line\">            for (int j = 0; j &lt; i; j++) if (a[i] &gt; a[j]) &#123;</div><div class=\"line\">                if (dp[i][0] &lt; dp[j][0] + 1) dp[i][0] = dp[j][0] + 1, dp[i][1] = dp[j][1];</div><div class=\"line\">                else if (dp[i][0] == dp[j][0] + 1) dp[i][1] = 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">            //cout&lt;&lt;dp[i][0]&lt;&lt;&quot; &quot;&lt;&lt;dp[i][1]&lt;&lt;endl;</div><div class=\"line\">            if (dp[i][0] &gt; mx) mx = dp[i][0];</div><div class=\"line\">        &#125;</div><div class=\"line\">        ok = 0;</div><div class=\"line\">        int has = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) if (dp[i][0] == mx) &#123;</div><div class=\"line\">            ok++;</div><div class=\"line\">            if (dp[i][1]) has = 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (ok &gt; 1 || has) cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">        else cout&lt;&lt;mx - 1&lt;&lt;endl;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">/*</div><div class=\"line\">6</div><div class=\"line\">3 5 2 5 1 6</div><div class=\"line\">*/</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-4 AC</li>\n</ul>\n","categories":["ACM"],"tags":["dp","最长上升子序列"]},{"title":"CF练习赛1","url":"http://yoursite.com/2014/11/02/拉练1/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hust.edu.cn/vjudge/contest/view.action?cid=61581#overview\" target=\"_blank\" rel=\"external\">http://acm.hust.edu.cn/vjudge/contest/view.action?cid=61581#overview</a></p>\n<ul>\n<li>Problem A Before an Exam (水题)</li>\n<li>Problem B The least round way (DP)</li>\n<li>Problem C Tic-tac-toe (模拟)</li>\n<li>Problem D    Ancient Berland Circus (几何)</li>\n<li>Problem E    Least Cost Bracket Sequence (贪心)</li>\n</ul>\n<p>这场比赛做的很挫，水过A之后，看到学弟出了D，就去看D，发现可敲（不知道怎么发现的。。）敲一半不知道怎么处理圆心角了（赛后发现n才100！NM呀，这么重要的范围我竟然自动跳过了。n这么小枚举即可）。之后去做B，发现是个水DP（我这个不搞DP的都会，一定是水DP），但是在记录路径的时候写错坐标了。。一直没发现错。。然后听说C是模拟，便去看C。脑洞大开，以为接下来不管双方怎么走都赢不了才算平局，没什么太好的办法，只能二进制枚举一下。。然后死活不对。。最后时刻被告之是理解错题了。。sad。E比赛时候没时间看了。</p>\n<a id=\"more\"></a>\n<h1 id=\"Problem-A-Before-an-Exam\"><a href=\"#Problem-A-Before-an-Exam\" class=\"headerlink\" title=\"Problem A Before an Exam\"></a>Problem A Before an Exam</h1><p>给定$d$天，每天可以学习$[min_i,max_i]$个小时，问如果一共学习了$sum$个小时，能否合理安排每天的学习，使得满足要求。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>求一下最小值和，最大值和，如果sum在之间，一定满足。</p>\n<h1 id=\"Problem-B-The-least-round-way\"><a href=\"#Problem-B-The-least-round-way\" class=\"headerlink\" title=\"Problem B The least round way\"></a>Problem B The least round way</h1><p>给定一个$n × n$的矩阵，每个格子上有一个数字。现在从左上角走到右下角，规定每次只能向右、向下走，每走到一格，得到该格子上的数字。问怎么走，能够使得这些数字的乘积末尾0最少。给出最少的0和路径。</p>\n<h1 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>对于每一个数字，进行处理，我们只需要知道这个数字分别是2、5的多少次方。<br>先每次走的时候，先保证取2最小，（2一样的时候，5要最小），且在走的过程中记录路径。<br>然后反着来一遍，先保证取5最小，（5一样的时候，2要最小），且在走的过程中记录路径。<br>最后的答案就是上面两个的最小值。<br>这道题有个trick：有可能数字为0。如果起点或终点为0，乘积一定为0，否则上述得到的最小值大于1，那么便不取，而是选择走0那条路径。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">const int N = 1000 + 10;</div><div class=\"line\">int a[N][N][2];</div><div class=\"line\">int dp[N][N];</div><div class=\"line\">int ss[N][N];</div><div class=\"line\">int pre[N][N][2];</div><div class=\"line\">int pre1[N][N][2];</div><div class=\"line\">string str;</div><div class=\"line\">void out(int o, int x, int y) &#123;</div><div class=\"line\">    //cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</div><div class=\"line\">    if (x == -1 &amp;&amp; y == -1) &#123;</div><div class=\"line\">        reverse(str.begin(), str.end());</div><div class=\"line\">        cout&lt;&lt;str&lt;&lt;endl;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        if (o == 2) &#123;</div><div class=\"line\">            int tx = pre[x][y][0], ty = pre[x][y][1];</div><div class=\"line\">            if (tx == -1 || ty == -1) ;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                if (tx == x - 1) str += &apos;D&apos;;</div><div class=\"line\">                else str += &apos;R&apos;;</div><div class=\"line\">            &#125;</div><div class=\"line\">            out(2, tx, ty);</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            int tx = pre1[x][y][0], ty = pre1[x][y][1];</div><div class=\"line\">            if (tx == -1 || ty == -1) ;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                if (tx == x - 1) str += &apos;D&apos;;</div><div class=\"line\">                else str += &apos;R&apos;;</div><div class=\"line\">            &#125;</div><div class=\"line\">            out(1, tx, ty);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int n;</div><div class=\"line\">    cin &gt;&gt; n;</div><div class=\"line\">    int sx = -1, sy = -1;</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) &#123;</div><div class=\"line\">            int x, s = 0, b = 0;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;x);</div><div class=\"line\">            while(x % 2 == 0 &amp;&amp; x) &#123;</div><div class=\"line\">                s++;</div><div class=\"line\">                x /= 2;</div><div class=\"line\">            &#125;</div><div class=\"line\">            while(x % 5 == 0 &amp;&amp; x) &#123;</div><div class=\"line\">                b++;</div><div class=\"line\">                x /= 5;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (x == 0) &#123;</div><div class=\"line\">                sx = i, sy = j;</div><div class=\"line\">                a[i][j][0] = INF, a[i][j][1] = INF;</div><div class=\"line\">            &#125;a[i][j][0] = s, a[i][j][1] = b;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (a[0][0][0] == INF || a[n - 1][n - 1][0] == INF) &#123;</div><div class=\"line\">        cout&lt;&lt;1&lt;&lt;endl;</div><div class=\"line\">        for (int i = 0; i &lt; n - 1; i++) cout&lt;&lt;&quot;D&quot;;</div><div class=\"line\">        for (int i = 0; i &lt; n - 1; i++) cout&lt;&lt;&quot;R&quot;;</div><div class=\"line\">        return 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    dp[0][0] = a[0][0][0], ss[0][0] = a[0][0][1];</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) &#123;</div><div class=\"line\">            if (!i &amp;&amp; !j) continue;</div><div class=\"line\">            dp[i][j] = INF, ss[i][j] = INF;</div><div class=\"line\">            if (i) &#123;</div><div class=\"line\">                if ((dp[i][j] &gt; dp[i - 1][j] + a[i][j][0]) || ((dp[i][j] == dp[i - 1][j] + a[i][j][0]) &amp;&amp; ss[i][j] &gt; ss[i - 1][j] + a[i][j][1]))&#123;</div><div class=\"line\">                    dp[i][j] = dp[i - 1][j] + a[i][j][0];</div><div class=\"line\">                    ss[i][j] = ss[i - 1][j] + a[i][j][1];</div><div class=\"line\">                    pre[i][j][0] = i - 1, pre[i][j][1] = j;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (j) &#123;</div><div class=\"line\">                if ((dp[i][j] &gt; dp[i][j - 1] + a[i][j][0]) || ((dp[i][j] == dp[i][j - 1] + a[i][j][0]) &amp;&amp; ss[i][j] &gt; ss[i][j - 1] + a[i][j][1]))&#123;</div><div class=\"line\">                    dp[i][j] = dp[i][j - 1] + a[i][j][0];</div><div class=\"line\">                    ss[i][j] = ss[i][j - 1] + a[i][j][1];</div><div class=\"line\">                    pre[i][j][0] = i, pre[i][j][1] = j - 1;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int mx1 = min(dp[n - 1][n - 1], ss[n - 1][n - 1]);</div><div class=\"line\"></div><div class=\"line\">    dp[0][0] = a[0][0][1], ss[0][0] = a[0][0][0];</div><div class=\"line\">    for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; n; j++) &#123;</div><div class=\"line\">            if (!i &amp;&amp; !j) continue;</div><div class=\"line\">            dp[i][j] = INF, ss[i][j] = INF;</div><div class=\"line\">            if (i) &#123;</div><div class=\"line\">                if ((dp[i][j] &gt; dp[i - 1][j] + a[i][j][1]) || ((dp[i][j] == dp[i - 1][j] + a[i][j][1]) &amp;&amp; ss[i][j] &gt; ss[i - 1][j] + a[i][j][0]))&#123;</div><div class=\"line\">                    dp[i][j] = dp[i - 1][j] + a[i][j][1];</div><div class=\"line\">                    ss[i][j] = ss[i - 1][j] + a[i][j][0];</div><div class=\"line\">                    pre1[i][j][0] = i - 1, pre1[i][j][1] = j;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (j) &#123;</div><div class=\"line\">                if ((dp[i][j] &gt; dp[i][j - 1] + a[i][j][1]) || ((dp[i][j] == dp[i][j - 1] + a[i][j][1]) &amp;&amp; ss[i][j] &gt; ss[i][j - 1] + a[i][j][0]))&#123;</div><div class=\"line\">                    dp[i][j] = dp[i][j - 1] + a[i][j][1];</div><div class=\"line\">                    ss[i][j] = ss[i][j - 1] + a[i][j][0];</div><div class=\"line\">                    pre1[i][j][0] = i, pre1[i][j][1] = j - 1;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int mx2 = min(dp[n - 1][n - 1], ss[n - 1][n - 1]);</div><div class=\"line\">    int mx = min(mx1, mx2);</div><div class=\"line\">    if (sx != -1 &amp;&amp; mx &gt; 0) &#123;</div><div class=\"line\">        cout&lt;&lt;1&lt;&lt;endl;</div><div class=\"line\">        for (int i = 0; i &lt; sx; i++) cout&lt;&lt;&quot;D&quot;;</div><div class=\"line\">        for (int i = 0; i &lt; n - 1; i++) cout&lt;&lt;&quot;R&quot;;</div><div class=\"line\">        for (int i = sx; i &lt; n - 1; i++) cout&lt;&lt;&quot;D&quot;;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        pre[0][0][0] = pre[0][0][1] = -1;</div><div class=\"line\">        pre1[0][0][0] = pre1[0][0][1] = -1;</div><div class=\"line\">        cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">        if (mx1 == mx) out(2, n - 1, n - 1);</div><div class=\"line\">        else out(1, n - 1, n - 1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Problem-C-Tic-tac-toe\"><a href=\"#Problem-C-Tic-tac-toe\" class=\"headerlink\" title=\"Problem C Tic-tac-toe\"></a>Problem C Tic-tac-toe</h1><p>有一个游戏，给定一个3 X 3的棋盘，两个人连续在棋盘上放棋子（第一个人为X，第二个人为0），如果出现某行某列或者对角线上全为同样的棋子，那么该人获胜。<br>现在的问题是：给定一个棋盘，以及棋盘上的状态（空为.），问分别为以下哪种情况？</p>\n<ul>\n<li>illegal 棋盘不可能出现这种情况</li>\n<li>the first player won 第一个人赢</li>\n<li>the second player won 第二个人赢</li>\n<li>draw 平局</li>\n<li>first 接下来轮到第一个人走</li>\n<li>second 接下来轮到第二个人走 -</li>\n</ul>\n<h1 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>其实理解对题意了，就是道很水的题。。<br>主要illegal的情况比较多：</p>\n<ul>\n<li>双方棋子数不符合规则</li>\n<li>双方都赢了</li>\n<li>先手赢了，后手还放棋子</li>\n<li>后手赢了，先手还放棋子<br>然后是判断先手赢、后手赢或是平局（摆满了才有平局。。）最后都不符合，判断该谁走。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">char mp[4][4];</div><div class=\"line\">int fi, se;</div><div class=\"line\">int win(char mp[4][4], int t) &#123;</div><div class=\"line\">    char ch;</div><div class=\"line\">    if (t == 1) ch = &apos;X&apos;;</div><div class=\"line\">    else ch = &apos;0&apos;;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">        int x = 0;</div><div class=\"line\">        for (int j = 0; j &lt; 3; j++) &#123;</div><div class=\"line\">            if (mp[i][j] == ch) x++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (x == 3) return 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int j = 0; j &lt; 3; j++) &#123;</div><div class=\"line\">        int x = 0;</div><div class=\"line\">        for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">            if (mp[i][j] == ch) x++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (x == 3) return 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int x = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">        if (mp[i][i] == ch) x++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (x == 3) return 1;</div><div class=\"line\">    x = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">        if (mp[i][2 - i] == ch) x++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (x == 3) return 1;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div><div class=\"line\">int check() &#123;</div><div class=\"line\">    int x = win(mp, 1);</div><div class=\"line\">    int y = win(mp, 2);</div><div class=\"line\">    //cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</div><div class=\"line\">    if (x == 1 &amp;&amp; y == 1) return 0;</div><div class=\"line\">    if (x == 1 &amp;&amp; fi == se) return 0;</div><div class=\"line\">    if (y == 1 &amp;&amp; fi == se + 1) return 0;</div><div class=\"line\">    if (x == 1) return 1;</div><div class=\"line\">    if (y == 1) return 2;</div><div class=\"line\">    if (fi + se == 9) return 3;</div><div class=\"line\">    return 4;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    fi = se = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; 3; j++) &#123;</div><div class=\"line\">            cin&gt;&gt;mp[i][j];</div><div class=\"line\">            if (mp[i][j] == &apos;X&apos;) fi++;</div><div class=\"line\">            else if (mp[i][j] == &apos;0&apos;) se++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if ((fi &gt; se + 1) || (fi &lt; se)) &#123;</div><div class=\"line\">        puts(&quot;illegal&quot;);</div><div class=\"line\">        return 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int dd = check();</div><div class=\"line\">    if (dd == 0) puts(&quot;illegal&quot;);</div><div class=\"line\">    else if (dd == 1) puts(&quot;the first player won&quot;);</div><div class=\"line\">    else if (dd == 2) puts(&quot;the second player won&quot;);</div><div class=\"line\">    else if (dd == 3) puts(&quot;draw&quot;);</div><div class=\"line\">    else &#123;</div><div class=\"line\">        if (fi == se) puts(&quot;first&quot;);</div><div class=\"line\">        else puts(&quot;second&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"Problem-D-Ancient-Berland-Circus\"><a href=\"#Problem-D-Ancient-Berland-Circus\" class=\"headerlink\" title=\"Problem D     Ancient Berland Circus\"></a>Problem D     Ancient Berland Circus</h1><p>有一个正多边形(3&lt;=n&lt;=100)，现在只知道其中的三个顶点，问这个正多边形最小可能的面积。<br><a href=\"http://siofive.github.io/2014/11/02/拉练1_D/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/02/拉练1_D/</a></p>\n<h1 id=\"Problem-E-Least-Cost-Bracket-Sequence\"><a href=\"#Problem-E-Least-Cost-Bracket-Sequence\" class=\"headerlink\" title=\"Problem E     Least Cost Bracket Sequence\"></a>Problem E     Least Cost Bracket Sequence</h1><p>有一串字符串，每个字符为’(‘, ‘)’ 或’?’。现在需要将其中的’?’替换为’(‘或’)’，使得最后的括号匹配。每个’?’替换成相应的括号都有一个花费。如果最后不能匹配，输出-1。否则输出最少的花费。<br><a href=\"http://siofive.github.io/2014/11/02/拉练1_E/\" target=\"_blank\" rel=\"external\">http://siofive.github.io/2014/11/02/拉练1_E/</a></p>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-2 AK</li>\n</ul>\n","categories":["ACM","Contest"],"tags":[]},{"title":"CF 3D Least Cost Bracket Sequence (贪心)","url":"http://yoursite.com/2014/11/02/拉练1_E/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/3/D\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/3/D</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一串字符串，每个字符为’(‘, ‘)’ 或’?’。现在需要将其中的’?’替换为’(‘或’)’，使得最后的括号匹配。每个’?’替换成相应的括号都有一个花费。如果最后不能匹配，输出-1。否则输出最少的花费。</p>\n<p>#思路<br>首先要知道，对于每个’)’而言，只要它之前的所有’)’都被匹配了，且它本身也有’(‘与它匹配，那么该表达式一定成立。<br>所以可以从头到尾的处理，一开始有个值now = 0，花费cost = 0，以及一个优先队列<br>碰到’(‘, now++。<br>碰到’)’, now–。<br>碰到’?’，将问号变成’)’，同时now++和cost += b (假设 ‘?’-&gt;’(‘ 费用为a，’?’-&gt;’)’ 费用为b)，然后将pair(b-a,i)放入优先队列。（i为位置）<br>发现此时now &lt; 0，即左括号比右括号少时，如果优先队列为空，说明前面已经没有有效的’?’了。即匹配失败。否则从优先队列里挑选一个能最大降低cost的’?’，转化为’(‘。<br>最后看now是否为0即可。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">typedef pair&lt;int, int&gt; pii;</div><div class=\"line\">const int N = 50000 + 10;</div><div class=\"line\">priority_queue&lt; pii &gt; q;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    char str[N];</div><div class=\"line\">    scanf(&quot;%s&quot;, str);</div><div class=\"line\">    ll c = 0, now = 0;</div><div class=\"line\">    bool flag = true;</div><div class=\"line\">    for (int i = 0; str[i]; i++) &#123;</div><div class=\"line\">        if (str[i] == &apos;(&apos;) now++;</div><div class=\"line\">        else now--;</div><div class=\"line\">        if (str[i] == &apos;?&apos;) &#123;</div><div class=\"line\">            int a, b;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</div><div class=\"line\">            str[i] = &apos;)&apos;;</div><div class=\"line\">            q.push(mkp(b - a, i));</div><div class=\"line\">            c += b;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (flag &amp;&amp; now &lt; 0) &#123;</div><div class=\"line\">            if (q.empty()) flag = false;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                pii x = q.top(); q.pop();</div><div class=\"line\">                str[x.second] = &apos;(&apos;;</div><div class=\"line\">                c -= x.first;</div><div class=\"line\">                now += 2;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (now != 0 || !flag) puts(&quot;-1&quot;);</div><div class=\"line\">    else cout&lt;&lt;c&lt;&lt;endl&lt;&lt;str&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-2 AC</li>\n</ul>\n","categories":["ACM"],"tags":["贪心"]},{"title":"CF 1C Ancient Berland Circus (几何)","url":"http://yoursite.com/2014/11/02/拉练1_D/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/problemset/problem/1/C\" target=\"_blank\" rel=\"external\">http://codeforces.com/problemset/problem/1/C</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一个正多边形(3&lt;=n&lt;=100)，现在只知道其中的三个顶点，问这个正多边形最小可能的面积。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>首先可以知道，这个正多边形一定是有一个外接圆的。可以通过给定的三个点，构造三角形，然后求得外接圆。<br>外接圆的求法：<br>  用余弦定理得到角A，然后用正弦定理得到 a / sinA = 2 * R<br>之后可以得到每条边对应的圆心角。这三个圆心角一定是正多边形每条边对应圆心角的整数倍。由于n范围很小，才100。只要枚举一下n，找到最小的答案即可。<br>  我看网上还有种做法：三个圆心角A，B，C。那么正多边形每条边对应圆心角 = gcd(A, B, C) = gcd(gcd(A, B), C)<br>  这里用到了辗转相减法来求double的gcd，机智的做法（这就可以解决n很大的问题了）</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">ID: wuqi9395@126.com</div><div class=\"line\">PROG:</div><div class=\"line\">LANG: C++</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;map&gt;</div><div class=\"line\">#include&lt;set&gt;</div><div class=\"line\">#include&lt;queue&gt;</div><div class=\"line\">#include&lt;stack&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">#include&lt;fstream&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;ctype.h&gt;</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define INF (1 &lt;&lt; 30)</div><div class=\"line\">#define LINF (1LL &lt;&lt; 60)</div><div class=\"line\">#define PI acos(-1.0)</div><div class=\"line\">#define mem(a, b) memset(a, b, sizeof(a))</div><div class=\"line\">#define rep(i, a, n) for (int i = a; i &lt; n; i++)</div><div class=\"line\">#define per(i, a, n) for (int i = n - 1; i &gt;= a; i--)</div><div class=\"line\">#define eps 1e-6</div><div class=\"line\">#define debug puts(&quot;===============&quot;)</div><div class=\"line\">#define pb push_back</div><div class=\"line\">#define mkp make_pair</div><div class=\"line\">#define all(x) (x).begin(),(x).end()</div><div class=\"line\">#define fi first</div><div class=\"line\">#define se second</div><div class=\"line\">#define SZ(x) ((int)(x).size())</div><div class=\"line\">#define POSIN(x,y) (0 &lt;= (x) &amp;&amp; (x) &lt; n &amp;&amp; 0 &lt;= (y) &amp;&amp; (y) &lt; m)</div><div class=\"line\">typedef long long ll;</div><div class=\"line\">typedef unsigned long long ULL;</div><div class=\"line\">double px[3], py[3];</div><div class=\"line\">double a, b, c;</div><div class=\"line\">double A, B, C;</div><div class=\"line\">double dis(int i, int j) &#123;</div><div class=\"line\">    double x = px[i] - px[j], y = py[i] - py[j];</div><div class=\"line\">    return sqrt(x * x + y * y);</div><div class=\"line\">&#125;</div><div class=\"line\">double get(double a, double b, double c) &#123;</div><div class=\"line\">    return acos((b * b + c * c - a * a) / (2 * b * c));</div><div class=\"line\">&#125;</div><div class=\"line\">bool check(int n) &#123;</div><div class=\"line\">    double e = 2 * PI / n;</div><div class=\"line\">    //cout&lt;&lt;e&lt;&lt;&quot;---------&quot;;</div><div class=\"line\">    int x = (A + eps) / e, y = (B + eps) / e, z = (C + eps) / e;</div><div class=\"line\">    //cout&lt;&lt;n&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;z&lt;&lt;&quot; &quot;&lt;&lt;endl;</div><div class=\"line\">    if (fabs((x + y + z) * e - 2 * PI) &lt; 1e-6) return true;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\">double cal(int n, double R) &#123;</div><div class=\"line\">    double ans = R * R * sin(2 * PI / n) / 2 * n;</div><div class=\"line\">    return ans;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    for (int i = 0; i &lt; 3; i++) scanf(&quot;%lf%lf&quot;, &amp;px[i], &amp;py[i]);</div><div class=\"line\">    a = dis(0, 1);</div><div class=\"line\">    b = dis(1, 2);</div><div class=\"line\">    c = dis(2, 0);</div><div class=\"line\">    //cout&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;&quot; &quot;&lt;&lt;c&lt;&lt;&quot; &quot;&lt;&lt;endl;</div><div class=\"line\">    //余弦定理得到三角形的角度</div><div class=\"line\">    A = get(a, b, c);</div><div class=\"line\">    B = get(b, a, c);</div><div class=\"line\">    C = get(c, a, b);</div><div class=\"line\">    double R = a / sin(A) / 2;</div><div class=\"line\">    //转化为圆心角</div><div class=\"line\">    A *= 2, B *= 2, C *= 2;</div><div class=\"line\">    //cout&lt;&lt;A&lt;&lt;&quot; &quot;&lt;&lt;B&lt;&lt;&quot; &quot;&lt;&lt;C&lt;&lt;&quot; &quot;&lt;&lt;R&lt;&lt;endl;</div><div class=\"line\">    int n;</div><div class=\"line\">    for (n = 3; n &lt;= 100; n++) &#123;</div><div class=\"line\">        if (check(n)) break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //cout&lt;&lt;n&lt;&lt;endl;</div><div class=\"line\">    printf(&quot;%.10lf\\n&quot;, cal(n, R));</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-11-2 AC</li>\n</ul>\n","categories":["ACM"],"tags":["几何"]},{"title":"POJ 3225 Help with Intervals（线段树）","url":"http://yoursite.com/2014/10/31/poj 3225 线段树/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://poj.org/problem?id=3225\" target=\"_blank\" rel=\"external\">http://poj.org/problem?id=3225</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>规定集合的交并补差等操作：<br><img src=\"http://siofive.qiniudn.com/poj 3225_1.png\" alt=\"\"><br>现在给定一个区间S,范围为[0, 65535],一开始全为0。<br>可以对该集合进行下面五种操作，问最后操作之后有哪些区间为1<br><img src=\"http://siofive.qiniudn.com/poj 3225_2.png\" alt=\"\"><br>其中T可以有4种形式：$(a,b) (a,b] [a, b) [a, b]$<br>数据范围：$(a, b ∈ Z, 0 ≤ a ≤ b ≤ 65,535)$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>U：把区间$[l,r]$置为1<br>I：把$[-∞,l),(r,∞]$置成0<br>D：把区间$[l,r]$置为0<br>C：把$[-∞,l),(r,∞]$置成0, 且$[l,r]$区间0/1互换<br>S：$[l,r]$区间0/1互换<br>成段替换比较好实现，互换的操作可以用一个XOR[]数组来进行标记。需要注意的是，如果该区间又有替换又有互换的话，只需要做等价的替换操作即可。<br>将区间扩大两倍，就能够处理开、闭区间。<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">    U：把区间[l,r]置为1</div><div class=\"line\">    I：把[-∞,l)(r,∞]置成0</div><div class=\"line\">    D：把区间[l,r]置为0</div><div class=\"line\">    C：把[-∞,l)(r,∞]置成0, 且[l,r]区间0/1互换</div><div class=\"line\">    S；[l,r]区间0/1互换</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">const int maxn = 65535 * 2 + 2;</div><div class=\"line\">int col[maxn &lt;&lt; 2], XOR[maxn &lt;&lt; 2];</div><div class=\"line\">bool has[maxn];</div><div class=\"line\">void FXOR(int rt) &#123;</div><div class=\"line\">    if (col[rt] != -1) col[rt] ^= 1;</div><div class=\"line\">    else XOR[rt] ^= 1;</div><div class=\"line\">&#125;</div><div class=\"line\">void pushdown(int rt) &#123;</div><div class=\"line\">    if (col[rt] != -1) &#123;</div><div class=\"line\">        col[rt &lt;&lt; 1] = col[rt &lt;&lt; 1 | 1] = col[rt];</div><div class=\"line\">        XOR[rt &lt;&lt; 1] = XOR[rt &lt;&lt; 1 | 1] = 0;</div><div class=\"line\">        col[rt] = -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (XOR[rt]) &#123;</div><div class=\"line\">        FXOR(rt &lt;&lt; 1);</div><div class=\"line\">        FXOR(rt &lt;&lt; 1 | 1);</div><div class=\"line\">        XOR[rt] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void update(char op, int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        if (op == &apos;U&apos;) col[rt] = 1, XOR[rt] = 0;</div><div class=\"line\">        else if (op == &apos;D&apos;) col[rt] = 0, XOR[rt] = 0;</div><div class=\"line\">        else if (op == &apos;C&apos; || op == &apos;S&apos;) FXOR(rt);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    pushdown(rt);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(op, L, R, lson);</div><div class=\"line\">    else if (op == &apos;I&apos; || op == &apos;C&apos;) col[rt &lt;&lt; 1] = XOR[rt &lt;&lt; 1] = 0;</div><div class=\"line\">    if (R &gt; m) update(op, L, R, rson);</div><div class=\"line\">    else if (op == &apos;I&apos; || op == &apos;C&apos;) col[rt &lt;&lt; 1 | 1] = XOR[rt &lt;&lt; 1 | 1] = 0;</div><div class=\"line\">&#125;</div><div class=\"line\">void query(int l, int r, int rt) &#123;</div><div class=\"line\">    if (col[rt] == 1) &#123;</div><div class=\"line\">        for (int i = l; i &lt;= r; i++) has[i] = true;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125; else if (col[rt] == 0) return ;</div><div class=\"line\">    if (l == r) return ;</div><div class=\"line\">    pushdown(rt);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    query(lson);</div><div class=\"line\">    query(rson);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    col[1] = XOR[1] = 0;</div><div class=\"line\">    char op, lq, rq;</div><div class=\"line\">    int l, r;</div><div class=\"line\">    while(~scanf(&quot;%c %c%d,%d%c\\n&quot;, &amp;op, &amp;lq, &amp;l, &amp;r, &amp;rq)) &#123;</div><div class=\"line\">        l &lt;&lt;= 1, r &lt;&lt;= 1;</div><div class=\"line\">        if (lq == &apos;(&apos;) l++;</div><div class=\"line\">        if (rq == &apos;)&apos;) r--;</div><div class=\"line\">        if (l &gt; r) &#123;</div><div class=\"line\">            if (op == &apos;I&apos; || op == &apos;C&apos;) col[1] = XOR[1] = 0;</div><div class=\"line\">        &#125; else update(op, l, r, 0, maxn, 1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    query(0, maxn, 1);</div><div class=\"line\">    bool flag = 0;</div><div class=\"line\">    int st = -1, ed;</div><div class=\"line\">    for (int i = 0; i &lt;= maxn; i++) &#123;</div><div class=\"line\">        if (has[i]) &#123;</div><div class=\"line\">            if (st == -1) st = i;</div><div class=\"line\">            ed = i;</div><div class=\"line\">        &#125; else &#123;</div><div class=\"line\">            if (st != -1) &#123;</div><div class=\"line\">                if (flag) putchar(&apos; &apos;);</div><div class=\"line\">                flag = true;</div><div class=\"line\">                printf(&quot;%c%d,%d%c&quot;, st &amp; 1 ? &apos;(&apos; : &apos;[&apos;, st &gt;&gt; 1, (ed + 1) &gt;&gt; 1, ed &amp; 1 ? &apos;)&apos; : &apos;]&apos;);</div><div class=\"line\">                st = -1;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!flag) puts(&quot;empty set&quot;);</div><div class=\"line\">    puts(&quot;&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>13585854    SIO__Five    3225    Accepted    2848K    1188MS    G++    2546B    2014-10-31 21:03:40</li>\n</ul>\n","categories":["ACM"],"tags":["数据结构","线段树"]},{"title":"POJ 2528 Mayor's posters（线段树）","url":"http://yoursite.com/2014/10/30/poj 2528 线段树/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://poj.org/problem?id=2528\" target=\"_blank\" rel=\"external\">http://poj.org/problem?id=2528</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>有一块长度为$1e7$的板子，现在有$n$张海报，依次贴上板子，后面的海报会覆盖前面的海报。每张海报占据[l, r]的区间。<br>求最后能够在板子上看到多少张海报。<br>数据范围：$1{\\leq}n{\\leq}1e4$, $1{\\leq}l,r{\\leq}1e7$</p>\n<p>如图所示<br><img src=\"http://siofive.qiniudn.com/2528_1.jpg\" alt=\"\"><br>5<br>1 4<br>2 6<br>8 10<br>3 4<br>7 10<br>答案为4</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>由于区间范围很大，但海报数相对较少，所以可以将海报的坐标离散化。<br>离散化之后再用线段树维护。<br>线段树成段更新，update：成段修改    query：区间求种类数<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">const int maxn = 11111;</div><div class=\"line\">int col[maxn &lt;&lt; 4];</div><div class=\"line\">int x[maxn &lt;&lt; 2];</div><div class=\"line\">int l[maxn], r[maxn], ans;</div><div class=\"line\">bool has[maxn];</div><div class=\"line\">void pushdown(int rt) &#123;</div><div class=\"line\">    if (col[rt] != -1) &#123;</div><div class=\"line\">        col[rt &lt;&lt; 1] = col[rt &lt;&lt; 1 | 1] = col[rt];</div><div class=\"line\">        col[rt] = -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int c, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        col[rt] = c;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    pushdown(rt);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, c, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, c, rson);</div><div class=\"line\">&#125;</div><div class=\"line\">void query(int l, int r, int rt) &#123;</div><div class=\"line\">    if (col[rt] != -1) &#123;</div><div class=\"line\">        if (!has[col[rt]]) ans++;</div><div class=\"line\">        has[col[rt]] = true;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (l == r) return ;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    query(lson);</div><div class=\"line\">    query(rson);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T, n;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%d&quot;, &amp;n);</div><div class=\"line\">        int cnt = 0;</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, l + i, r + i);</div><div class=\"line\">            x[cnt++] = l[i], x[cnt++] = r[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        sort(x, x + cnt);</div><div class=\"line\">        cnt = unique(x, x + cnt) - x;</div><div class=\"line\">        memset(col, -1, sizeof(col));</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) &#123;</div><div class=\"line\">            int a = lower_bound(x, x + cnt, l[i]) - x;</div><div class=\"line\">            int b = lower_bound(x, x + cnt, r[i]) - x;</div><div class=\"line\">            update(a, b, i, 0, cnt, 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans = 0;</div><div class=\"line\">        memset(has, 0, sizeof(has));</div><div class=\"line\">        query(0, cnt, 1);</div><div class=\"line\">        printf(&quot;%d\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>13582214    SIO__Five    2528    Accepted    1536K    63MS    G++    1718B    2014-10-30 20:42:27</li>\n</ul>\n","categories":["ACM"],"tags":["数据结构","线段树"]},{"title":"POJ 3468 A Simple Problem with Integers（线段树）","url":"http://yoursite.com/2014/10/29/poj 3468 线段树/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://poj.org/problem?id=3468\" target=\"_blank\" rel=\"external\">http://poj.org/problem?id=3468</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给出一个有$n$个元素的数组，元素一开始有初值。<br>现在有$q$次操作，每次操作有两个选择：<br>“C a b c”：将[a, b]的所有元素加上c<br>“Q a b”：查询[a, b]所有元素的和<br>数据范围：$1{\\leq}N,Q{\\leq}1e5$, $-1e9{\\leq}a_i{\\leq}1e9$, $-1e4{\\leq}c{\\leq}1e4$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>线段树成段更新，update：成段增减    query：区间求和<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">const int maxn = 111111;</div><div class=\"line\">ll sum[maxn &lt;&lt; 2], add[maxn &lt;&lt; 2];</div><div class=\"line\">void pushup(int rt) &#123;</div><div class=\"line\">    sum[rt] = sum[rt &lt;&lt; 1] + sum[rt &lt;&lt; 1 | 1];</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    add[rt] = 0;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        scanf(&quot;%lld&quot;, &amp;sum[rt]);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">void pushdown(int rt, int m) &#123;</div><div class=\"line\">    if (add[rt]) &#123;</div><div class=\"line\">        add[rt &lt;&lt; 1] += add[rt];</div><div class=\"line\">        add[rt &lt;&lt; 1 | 1] += add[rt];</div><div class=\"line\">        sum[rt &lt;&lt; 1] += (m - (m &gt;&gt; 1)) * add[rt];</div><div class=\"line\">        sum[rt &lt;&lt; 1 | 1] += (m &gt;&gt; 1) * add[rt];</div><div class=\"line\">        add[rt] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int c, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        add[rt] += c;</div><div class=\"line\">        sum[rt] += c * (r - l + 1);</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    pushdown(rt, r - l + 1);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, c, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, c, rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">ll query(int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) return sum[rt];</div><div class=\"line\">    pushdown(rt, r - l + 1);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    ll ret = 0;</div><div class=\"line\">    if (L &lt;= m) ret += query(L, R, lson);</div><div class=\"line\">    if (R &gt; m) ret += query(L, R, rson);</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int n, q;</div><div class=\"line\">    char ch[10];</div><div class=\"line\">    int l, r, c;</div><div class=\"line\">    scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</div><div class=\"line\">    build(1, n, 1);</div><div class=\"line\">    while(q--) &#123;</div><div class=\"line\">        scanf(&quot;%s&quot;, ch);</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;l, &amp;r);</div><div class=\"line\">        if (ch[0] == &apos;Q&apos;) printf(&quot;%lld\\n&quot;, query(l, r, 1, n, 1));</div><div class=\"line\">        else &#123;</div><div class=\"line\">            scanf(&quot;%d&quot;, &amp;c);</div><div class=\"line\">            update(l, r, c, 1, n, 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>13579810    SIO__Five    3468    Accepted    4776K    2579MS    G++    1770B    2014-10-29 23:52:08</li>\n</ul>\n","categories":["ACM"],"tags":["数据结构","线段树"]},{"title":"HDU 1698 Just a Hook（线段树）","url":"http://yoursite.com/2014/10/29/hdu 1698 Just a Hook/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=1698\" target=\"_blank\" rel=\"external\">http://acm.hdu.edu.cn/showproblem.php?pid=1698</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给出一个有$n$个元素的数组，有$q$次操作：<br>    set(L, R, v)把区间{L, R}的值全部修改为 $v$(1,2,3)。<br>一开始所有值都为1。求最后所有元素的和。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>线段树成段更新，要理解lazy的使用。update：成段替换<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">const int maxn = 111111;</div><div class=\"line\">int sum[maxn &lt;&lt; 2], col[maxn &lt;&lt; 2];</div><div class=\"line\">void pushup(int rt) &#123;</div><div class=\"line\">    sum[rt] = sum[rt &lt;&lt; 1] + sum[rt &lt;&lt; 1 | 1];</div><div class=\"line\">&#125;</div><div class=\"line\">void pushdown(int m, int rt) &#123;</div><div class=\"line\">    if (col[rt]) &#123;</div><div class=\"line\">        col[rt &lt;&lt; 1] = col[rt &lt;&lt; 1 | 1] = col[rt];</div><div class=\"line\">        sum[rt &lt;&lt; 1] = (m - (m &gt;&gt; 1)) * col[rt];</div><div class=\"line\">        sum[rt &lt;&lt; 1 | 1] = (m &gt;&gt; 1) * col[rt];</div><div class=\"line\">        col[rt] = 0;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    col[rt] = 0;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        sum[rt] = 1;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">void update(int L, int R, int c, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        col[rt] = c;</div><div class=\"line\">        sum[rt] = (r - l + 1) * c;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    pushdown(r - l + 1, rt);</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    if (L &lt;= m) update(L, R, c, lson);</div><div class=\"line\">    if (R &gt; m) update(L, R, c, rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T, n, q;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    for (int cas = 1; cas &lt;= T; cas++) &#123;</div><div class=\"line\">        scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</div><div class=\"line\">        build(1, n, 1);</div><div class=\"line\">        int x, y, z;</div><div class=\"line\">        while(q--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;z);</div><div class=\"line\">            update(x, y, z, 1, n, 1);</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf(&quot;Case %d: The total value of the hook is %d.\\n&quot;, cas, sum[1]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>12011666    2014-10-29 22:01:13    Accepted    1698    687MS    2288K    1458 B    C++    SIO__Five</li>\n</ul>\n","categories":["ACM"],"tags":["数据结构","线段树"]},{"title":"UVa 1354 天平难题 (搜索)","url":"http://yoursite.com/2014/10/28/UVa 1354 天平难题 搜索/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://acm.bnu.edu.cn/v3/problem_show.php?pid=36971\" target=\"_blank\" rel=\"external\">http://acm.bnu.edu.cn/v3/problem_show.php?pid=36971</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给出房间的宽度$r$和$s$个挂坠的重量$w_i$。设计一个尽量宽（但宽度不能超过房间宽度$r$）的天平，挂着所有挂坠。<br>天平由一些长度为1的木棍组成。木棍的每一端要么挂着一个挂坠，要么挂着另外一个木棍。<br>挂坠的宽度忽略不计，且不同的子天平可以相互重叠。<br>数据范围：$(0&lt;r&lt;10, 1{\\leq}s{\\leq}6, 1{\\leq}w_i{\\leq}1000)$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>把挂坠和木棍都作为结点，则一个天平对应一棵二叉树，可以容易的算出对应的宽度。<br>本题的核心任务就是枚举二叉树，采用回溯法即可。<br>枚举的方式是自顶向下构造，每次枚举左子树用到哪个子集，则右子树就是剩下的子集。</p>\n<h1 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">int subset = (1 &lt;&lt; n) - 1; //全集</div><div class=\"line\">for (int left = (subset - 1) &amp; subset; left; left = (left - 1) &amp; subset) &#123;</div><div class=\"line\">\tint right = subset ^ left;  //left和right便是两个对应的子集</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;vector&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    double L, R;</div><div class=\"line\">    node() : L(0), R(0) &#123;&#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">const int N = 6;</div><div class=\"line\">int vis[1 &lt;&lt; N], n;</div><div class=\"line\">double w[N], sum[1 &lt;&lt; N], r;</div><div class=\"line\">vector&lt;node&gt; tree[1 &lt;&lt; N];</div><div class=\"line\">void dfs(int subset) &#123;</div><div class=\"line\">    if (vis[subset]) return ;</div><div class=\"line\">    vis[subset] = true;</div><div class=\"line\">    bool have_child = false;</div><div class=\"line\">    for (int left = (subset - 1) &amp; subset; left; left = (left - 1) &amp; subset) &#123;</div><div class=\"line\">        have_child = true;</div><div class=\"line\">        int right = subset ^ left;</div><div class=\"line\">        double d1 = sum[right] / sum[subset];</div><div class=\"line\">        double d2 = sum[left] / sum[subset];</div><div class=\"line\">        dfs(left); dfs(right);</div><div class=\"line\">        for (int i = 0; i &lt; tree[left].size(); i++) &#123;</div><div class=\"line\">            for (int j = 0; j &lt; tree[right].size(); j++) &#123;</div><div class=\"line\">                node t;</div><div class=\"line\">                t.L = max(tree[left][i].L + d1, tree[right][j].L - d2);</div><div class=\"line\">                t.R = max(tree[right][j].R + d2, tree[left][i].R - d1);</div><div class=\"line\">                if (t.L + t.R &lt; r) tree[subset].push_back(t);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!have_child) tree[subset].push_back(node());</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int T;</div><div class=\"line\">    scanf(&quot;%d&quot;, &amp;T);</div><div class=\"line\">    while(T--) &#123;</div><div class=\"line\">        scanf(&quot;%lf%d&quot;, &amp;r, &amp;n);</div><div class=\"line\">        for (int i = 0; i &lt; n; i++) scanf(&quot;%lf&quot;, w + i);</div><div class=\"line\">        int tot = 1 &lt;&lt; n;</div><div class=\"line\">        for (int i = 0; i &lt; tot; i++) &#123;</div><div class=\"line\">            sum[i] = 0;</div><div class=\"line\">            tree[i].clear();</div><div class=\"line\">            for (int j = 0; j &lt; n; j++)</div><div class=\"line\">                if (i &amp; (1 &lt;&lt; j)) sum[i] += w[j];</div><div class=\"line\">        &#125;</div><div class=\"line\">        tot--;</div><div class=\"line\">        memset(vis, 0, sizeof(vis));</div><div class=\"line\">        dfs(tot);</div><div class=\"line\">        double ans = -1;</div><div class=\"line\">        for (int i = 0; i &lt; tree[tot].size(); i++)</div><div class=\"line\">            ans = max(ans, tree[tot][i].L + tree[tot][i].R);</div><div class=\"line\">        printf(&quot;%.10lf\\n&quot;, ans);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>29 ms        1712 B    2014-10-28 17:51:13</li>\n</ul>\n","categories":["ACM","算法竞赛入门经典"],"tags":["搜索","枚举二叉树"]},{"title":"Project Euler 13 Large sum（大数）","url":"http://yoursite.com/2014/10/28/Project Euler 13/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=13\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=13</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定100个50位的大数，求和的前10位</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>大数<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;string&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int ra = 10;</div><div class=\"line\">int ten[4] = &#123;1, ra, ra * ra, ra*ra * ra&#125;;</div><div class=\"line\">int radix = ra * ra * ra * ra;</div><div class=\"line\">const int NV = 1000;</div><div class=\"line\">struct integer &#123;</div><div class=\"line\">    int d[NV];</div><div class=\"line\">    integer() &#123;</div><div class=\"line\">        *this = integer(0);</div><div class=\"line\">    &#125;</div><div class=\"line\">    integer(int x) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; NV; i++) d[i] = 0;</div><div class=\"line\">        if (!x) d[0] = 1;</div><div class=\"line\">        while(x) &#123;</div><div class=\"line\">            d[++d[0]] = x % radix;</div><div class=\"line\">            x /= radix;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    integer(long long x) &#123;</div><div class=\"line\">        for (int i = 0; i &lt; NV; i++) d[i] = 0;</div><div class=\"line\">        if (!x) d[0] = 1;</div><div class=\"line\">        while(x) &#123;</div><div class=\"line\">            d[++d[0]] = x % radix;</div><div class=\"line\">            x /= radix;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    integer(const char s[]) &#123;</div><div class=\"line\">        int len = strlen(s), i, j, k;</div><div class=\"line\">        d[0] = (len - 1) / 4 + 1;</div><div class=\"line\">        for (i = 1; i &lt; NV; i++) d[i] = 0;</div><div class=\"line\">        for (i = len - 1; i &gt;= 0; i--) &#123;</div><div class=\"line\">            j = (len - i - 1) / 4 + 1;</div><div class=\"line\">            k = (len - i - 1) % 4;</div><div class=\"line\">            d[j] += ten[k] * (s[i] - &apos;0&apos;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        while(d[0] &gt; 1 &amp;&amp; d[d[0]] == 0) d[0]--;</div><div class=\"line\">    &#125;</div><div class=\"line\">    string tostring() &#123;</div><div class=\"line\">        string s;</div><div class=\"line\">        int i, j, temp;</div><div class=\"line\">        for (i = 3; i &gt;= 1; i--) if (d[d[0]] &gt;= ten[i]) break;</div><div class=\"line\">        temp = d[d[0]];</div><div class=\"line\">        for (j = i; j &gt;= 0; j--) &#123;</div><div class=\"line\">            s += (char) (temp / ten[j] + &apos;0&apos;);</div><div class=\"line\">            temp %= ten[j];</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (i = d[0] - 1; i &gt; 0; i--) &#123;</div><div class=\"line\">            temp = d[i];</div><div class=\"line\">            for (j = 3; j &gt;= 0; j--) &#123;</div><div class=\"line\">                s += (char) (temp / ten[j] + &apos;0&apos;);</div><div class=\"line\">                temp %= ten[j];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return s;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125; d, mid1[15];</div><div class=\"line\">integer operator +(const integer &amp;a, const integer &amp;b) &#123;</div><div class=\"line\">    integer c;</div><div class=\"line\">    c.d[0] = max(a.d[0], b.d[0]);</div><div class=\"line\">    int i, x = 0;</div><div class=\"line\">    for (i = 1; i &lt;= c.d[0]; i++) &#123;</div><div class=\"line\">        x += a.d[i] + b.d[i];</div><div class=\"line\">        c.d[i] = x % radix;</div><div class=\"line\">        x /= radix;</div><div class=\"line\">    &#125;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        c.d[++c.d[0]] = x % radix;</div><div class=\"line\">        x /= radix;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return c;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">char str[110][60] = &#123;</div><div class=\"line\">    &quot;37107287533902102798797998220837590246510135740250&quot;,</div><div class=\"line\">    &quot;46376937677490009712648124896970078050417018260538&quot;,</div><div class=\"line\">    &quot;74324986199524741059474233309513058123726617309629&quot;,</div><div class=\"line\">    &quot;91942213363574161572522430563301811072406154908250&quot;,</div><div class=\"line\">    &quot;23067588207539346171171980310421047513778063246676&quot;,</div><div class=\"line\">    &quot;89261670696623633820136378418383684178734361726757&quot;,</div><div class=\"line\">    &quot;28112879812849979408065481931592621691275889832738&quot;,</div><div class=\"line\">    &quot;44274228917432520321923589422876796487670272189318&quot;,</div><div class=\"line\">    &quot;47451445736001306439091167216856844588711603153276&quot;,</div><div class=\"line\">    &quot;70386486105843025439939619828917593665686757934951&quot;,</div><div class=\"line\">    &quot;62176457141856560629502157223196586755079324193331&quot;,</div><div class=\"line\">    &quot;64906352462741904929101432445813822663347944758178&quot;,</div><div class=\"line\">    &quot;92575867718337217661963751590579239728245598838407&quot;,</div><div class=\"line\">    &quot;58203565325359399008402633568948830189458628227828&quot;,</div><div class=\"line\">    &quot;80181199384826282014278194139940567587151170094390&quot;,</div><div class=\"line\">    &quot;35398664372827112653829987240784473053190104293586&quot;,</div><div class=\"line\">    &quot;86515506006295864861532075273371959191420517255829&quot;,</div><div class=\"line\">    &quot;71693888707715466499115593487603532921714970056938&quot;,</div><div class=\"line\">    &quot;54370070576826684624621495650076471787294438377604&quot;,</div><div class=\"line\">    &quot;53282654108756828443191190634694037855217779295145&quot;,</div><div class=\"line\">    &quot;36123272525000296071075082563815656710885258350721&quot;,</div><div class=\"line\">    &quot;45876576172410976447339110607218265236877223636045&quot;,</div><div class=\"line\">    &quot;17423706905851860660448207621209813287860733969412&quot;,</div><div class=\"line\">    &quot;81142660418086830619328460811191061556940512689692&quot;,</div><div class=\"line\">    &quot;51934325451728388641918047049293215058642563049483&quot;,</div><div class=\"line\">    &quot;62467221648435076201727918039944693004732956340691&quot;,</div><div class=\"line\">    &quot;15732444386908125794514089057706229429197107928209&quot;,</div><div class=\"line\">    &quot;55037687525678773091862540744969844508330393682126&quot;,</div><div class=\"line\">    &quot;18336384825330154686196124348767681297534375946515&quot;,</div><div class=\"line\">    &quot;80386287592878490201521685554828717201219257766954&quot;,</div><div class=\"line\">    &quot;78182833757993103614740356856449095527097864797581&quot;,</div><div class=\"line\">    &quot;16726320100436897842553539920931837441497806860984&quot;,</div><div class=\"line\">    &quot;48403098129077791799088218795327364475675590848030&quot;,</div><div class=\"line\">    &quot;87086987551392711854517078544161852424320693150332&quot;,</div><div class=\"line\">    &quot;59959406895756536782107074926966537676326235447210&quot;,</div><div class=\"line\">    &quot;69793950679652694742597709739166693763042633987085&quot;,</div><div class=\"line\">    &quot;41052684708299085211399427365734116182760315001271&quot;,</div><div class=\"line\">    &quot;65378607361501080857009149939512557028198746004375&quot;,</div><div class=\"line\">    &quot;35829035317434717326932123578154982629742552737307&quot;,</div><div class=\"line\">    &quot;94953759765105305946966067683156574377167401875275&quot;,</div><div class=\"line\">    &quot;88902802571733229619176668713819931811048770190271&quot;,</div><div class=\"line\">    &quot;25267680276078003013678680992525463401061632866526&quot;,</div><div class=\"line\">    &quot;36270218540497705585629946580636237993140746255962&quot;,</div><div class=\"line\">    &quot;24074486908231174977792365466257246923322810917141&quot;,</div><div class=\"line\">    &quot;91430288197103288597806669760892938638285025333403&quot;,</div><div class=\"line\">    &quot;34413065578016127815921815005561868836468420090470&quot;,</div><div class=\"line\">    &quot;23053081172816430487623791969842487255036638784583&quot;,</div><div class=\"line\">    &quot;11487696932154902810424020138335124462181441773470&quot;,</div><div class=\"line\">    &quot;63783299490636259666498587618221225225512486764533&quot;,</div><div class=\"line\">    &quot;67720186971698544312419572409913959008952310058822&quot;,</div><div class=\"line\">    &quot;95548255300263520781532296796249481641953868218774&quot;,</div><div class=\"line\">    &quot;76085327132285723110424803456124867697064507995236&quot;,</div><div class=\"line\">    &quot;37774242535411291684276865538926205024910326572967&quot;,</div><div class=\"line\">    &quot;23701913275725675285653248258265463092207058596522&quot;,</div><div class=\"line\">    &quot;29798860272258331913126375147341994889534765745501&quot;,</div><div class=\"line\">    &quot;18495701454879288984856827726077713721403798879715&quot;,</div><div class=\"line\">    &quot;38298203783031473527721580348144513491373226651381&quot;,</div><div class=\"line\">    &quot;34829543829199918180278916522431027392251122869539&quot;,</div><div class=\"line\">    &quot;40957953066405232632538044100059654939159879593635&quot;,</div><div class=\"line\">    &quot;29746152185502371307642255121183693803580388584903&quot;,</div><div class=\"line\">    &quot;41698116222072977186158236678424689157993532961922&quot;,</div><div class=\"line\">    &quot;62467957194401269043877107275048102390895523597457&quot;,</div><div class=\"line\">    &quot;23189706772547915061505504953922979530901129967519&quot;,</div><div class=\"line\">    &quot;86188088225875314529584099251203829009407770775672&quot;,</div><div class=\"line\">    &quot;11306739708304724483816533873502340845647058077308&quot;,</div><div class=\"line\">    &quot;82959174767140363198008187129011875491310547126581&quot;,</div><div class=\"line\">    &quot;97623331044818386269515456334926366572897563400500&quot;,</div><div class=\"line\">    &quot;42846280183517070527831839425882145521227251250327&quot;,</div><div class=\"line\">    &quot;55121603546981200581762165212827652751691296897789&quot;,</div><div class=\"line\">    &quot;32238195734329339946437501907836945765883352399886&quot;,</div><div class=\"line\">    &quot;75506164965184775180738168837861091527357929701337&quot;,</div><div class=\"line\">    &quot;62177842752192623401942399639168044983993173312731&quot;,</div><div class=\"line\">    &quot;32924185707147349566916674687634660915035914677504&quot;,</div><div class=\"line\">    &quot;99518671430235219628894890102423325116913619626622&quot;,</div><div class=\"line\">    &quot;73267460800591547471830798392868535206946944540724&quot;,</div><div class=\"line\">    &quot;76841822524674417161514036427982273348055556214818&quot;,</div><div class=\"line\">    &quot;97142617910342598647204516893989422179826088076852&quot;,</div><div class=\"line\">    &quot;87783646182799346313767754307809363333018982642090&quot;,</div><div class=\"line\">    &quot;10848802521674670883215120185883543223812876952786&quot;,</div><div class=\"line\">    &quot;71329612474782464538636993009049310363619763878039&quot;,</div><div class=\"line\">    &quot;62184073572399794223406235393808339651327408011116&quot;,</div><div class=\"line\">    &quot;66627891981488087797941876876144230030984490851411&quot;,</div><div class=\"line\">    &quot;60661826293682836764744779239180335110989069790714&quot;,</div><div class=\"line\">    &quot;85786944089552990653640447425576083659976645795096&quot;,</div><div class=\"line\">    &quot;66024396409905389607120198219976047599490197230297&quot;,</div><div class=\"line\">    &quot;64913982680032973156037120041377903785566085089252&quot;,</div><div class=\"line\">    &quot;16730939319872750275468906903707539413042652315011&quot;,</div><div class=\"line\">    &quot;94809377245048795150954100921645863754710598436791&quot;,</div><div class=\"line\">    &quot;78639167021187492431995700641917969777599028300699&quot;,</div><div class=\"line\">    &quot;15368713711936614952811305876380278410754449733078&quot;,</div><div class=\"line\">    &quot;40789923115535562561142322423255033685442488917353&quot;,</div><div class=\"line\">    &quot;44889911501440648020369068063960672322193204149535&quot;,</div><div class=\"line\">    &quot;41503128880339536053299340368006977710650566631954&quot;,</div><div class=\"line\">    &quot;81234880673210146739058568557934581403627822703280&quot;,</div><div class=\"line\">    &quot;82616570773948327592232845941706525094512325230608&quot;,</div><div class=\"line\">    &quot;22918802058777319719839450180888072429661980811197&quot;,</div><div class=\"line\">    &quot;77158542502016545090413245809786882778948721859617&quot;,</div><div class=\"line\">    &quot;72107838435069186155435662884062257473692284509516&quot;,</div><div class=\"line\">    &quot;20849603980134001723930671666823555245252804609722&quot;,</div><div class=\"line\">    &quot;53503534226472524250874054075591789781264330331690&quot;</div><div class=\"line\">&#125;;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    integer A(0);</div><div class=\"line\">    for (int i = 0; i &lt; 100; i++) A = A + integer(str[i]);</div><div class=\"line\">    string s = A.tostring();</div><div class=\"line\">    for (int i = 0; i &lt; 10; i++) cout&lt;&lt;s[i];</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 14:20.23</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["大数"]},{"title":"Project Euler 12 Highly divisible triangular number（质因数分解）","url":"http://yoursite.com/2014/10/28/Project Euler 12/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=12\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=12</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>规定$f(n)=1+2+\\cdots+n$<br>求最小的$f(n)$使得其因子个数超过500</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>$N=2^{a_1}3^{a_2}5^{a_3}\\cdots$ 的因子个数为 $(a_1+1)(a_2+1)(a_3+1)\\cdots$<br>而$f(n)=\\frac{n(1+n)}{2}$ ，且相邻的两个数一定互质，所以$f(n)$的因子个数 = $\\frac{n}{2}$的因子个数 $*(1+n)$的因子个数（n为偶数）</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define maxn 1111111</div><div class=\"line\">int a[maxn], b[maxn], tot = 0;</div><div class=\"line\">void factor(int n, int a[], int b[], int &amp;tot) &#123;</div><div class=\"line\">    int tmp, now;</div><div class=\"line\">    tmp = (int)(sqrt(n) + 1);</div><div class=\"line\">    tot = 0;</div><div class=\"line\">    now = n;</div><div class=\"line\">    for (int i = 2; i &lt;= tmp; i++) if (now % i == 0) &#123;</div><div class=\"line\">        a[tot] = i, b[tot] = 0;</div><div class=\"line\">        while(now % i == 0) &#123;</div><div class=\"line\">            b[tot]++;</div><div class=\"line\">            now /= i;</div><div class=\"line\">        &#125;</div><div class=\"line\">        tot++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (now != 1) a[tot] = now, b[tot++] = 1;</div><div class=\"line\">&#125;</div><div class=\"line\">int f[maxn] = &#123;0&#125;;</div><div class=\"line\">void get(int x) &#123;</div><div class=\"line\">    f[x] = 1;</div><div class=\"line\">    factor(x, a, b, tot);</div><div class=\"line\">    for (int i = 0; i &lt; tot; i++) f[x] *= b[i] + 1;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int x, y;</div><div class=\"line\">    f[1] = 1, f[2] = 2;</div><div class=\"line\">    for (int i = 3; i; i++) &#123;</div><div class=\"line\">        if (i % 2 == 0) x = i / 2, y = i + 1;</div><div class=\"line\">        else x = (i + 1) / 2, y = i;</div><div class=\"line\">        if (!f[x]) get(x);</div><div class=\"line\">        if (!f[y]) get(y);</div><div class=\"line\">        int ans = f[x] * f[y];</div><div class=\"line\">        if (ans &gt; 500) &#123;</div><div class=\"line\">            cout&lt;&lt;(x * y)&lt;&lt;endl;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 13:54.49</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["数论","质因数分解"]},{"title":"Project Euler 11 Largest product in a grid（暴力）","url":"http://yoursite.com/2014/10/28/Project Euler 11/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=11\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=11</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个$20*20$的方格，求在同一条直线上（横、纵、对角）的四个数的最大乘积</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>直接暴力找就行<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">char str[] = &#123;&quot;08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08 49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00 81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65 52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91 22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50 32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21 24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95 78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92 16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57 86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58 19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40 04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66 88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69 04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36 20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16 20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54 01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48&quot;&#125;;</div><div class=\"line\">int a[25][25];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    for (int i = 0; i &lt; 20; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; 20; j++) &#123;</div><div class=\"line\">            int k = i * 60 + j * 3;</div><div class=\"line\">            a[i][j] = (str[k] - &apos;0&apos;) * 10 + str[k + 1] - &apos;0&apos;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int mx = 0;</div><div class=\"line\">    int dx[4] = &#123;1, 1, 0, -1&#125;;</div><div class=\"line\">    int dy[4] = &#123;0, 1, 1, 1&#125;;</div><div class=\"line\">    for (int i = 0; i &lt; 20; i++) &#123;</div><div class=\"line\">        for (int j = 0; j &lt; 20; j++) &#123;</div><div class=\"line\">            for (int k = 0; k &lt; 4; k++) &#123;</div><div class=\"line\">                int ok = 1;</div><div class=\"line\">                int x = i, y = j, now = a[x][y];</div><div class=\"line\">                for (int l = 0; l &lt; 3; l++) &#123;</div><div class=\"line\">                    int tx = x + dx[k], ty = y + dy[k];</div><div class=\"line\">                    if (!(0 &lt;= tx &amp;&amp; tx &lt; 20 &amp;&amp; 0 &lt;= ty &amp;&amp; ty &lt; 20)) &#123;</div><div class=\"line\">                        ok = 0;</div><div class=\"line\">                        break;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    now *= a[tx][ty];</div><div class=\"line\">                    x = tx, y = ty;</div><div class=\"line\">                &#125;</div><div class=\"line\">                if (ok) mx = max(now, mx);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 12:13.31</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"Project Euler 10 Summation of primes（线性筛素数）","url":"http://yoursite.com/2014/10/28/Project Euler 10/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=10\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=10</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求所有小于2000000的素数和</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>线性筛素数<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define maxn 2000010</div><div class=\"line\">#define ll long long</div><div class=\"line\">int ans[maxn], valid[maxn], tot = 0;</div><div class=\"line\">ll sum = 0;</div><div class=\"line\">void getPrime(int n, int &amp;tot, int ans[]) &#123;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (!valid[i]) ans[tot++] = i, sum += i;</div><div class=\"line\">        for (int j = 0; j &lt; tot &amp;&amp; i * ans[j] &lt;= n; j++) &#123;</div><div class=\"line\">            valid[i * ans[j]] = 1;</div><div class=\"line\">            if (i % ans[j] == 0) break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    sum = 0;</div><div class=\"line\">    getPrime(2000000, tot, ans);</div><div class=\"line\">    cout&lt;&lt;sum&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 12:03.18</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["线性筛素数","数论"]},{"title":"Project Euler 9 Special Pythagorean triplet（枚举）","url":"http://yoursite.com/2014/10/27/Project Euler 9/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=9\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=9</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>$a^2+b^2=c^2$<br>$a+b+c=1000$<br>且$a&lt;b&lt;c$<br>求$abc$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>直接枚举a,b,c即可<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">void work() &#123;</div><div class=\"line\">    for (int i = 1; i &lt;= 1000 / 3; i++) &#123;</div><div class=\"line\">        for (int j = i + 1; j &lt;= (1000 - i) / 2; j++) &#123;</div><div class=\"line\">            int k = 1000 - i - j;</div><div class=\"line\">            if (i * i + j * j == k * k) &#123;</div><div class=\"line\">                cout&lt;&lt;i * j * k &lt;&lt;endl;</div><div class=\"line\">                return ;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    work();</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 11:46</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"Project Euler 8 Largest product in a series（暴力）","url":"http://yoursite.com/2014/10/27/Project Euler 8/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=8\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=8</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一串数字，求相邻13个数字相乘的最大值</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>直接枚举子段的开头，如果碰到0可以跳到0后面<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">char str[] = &#123;&quot;7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450&quot;&#125;;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll mx = 0;</div><div class=\"line\">    for (int i = 0; i &lt; 1000 - 13; i++) &#123;</div><div class=\"line\">        int o = -1;</div><div class=\"line\">        ll t = 1;</div><div class=\"line\">        if (i + 13 &gt; 1000) break;</div><div class=\"line\">        for (int j = 0; j &lt; 13; j++) &#123;</div><div class=\"line\">            t = t * (str[i + j] - &apos;0&apos;);</div><div class=\"line\">            if (str[i + j] == &apos;0&apos;) o = i + j;</div><div class=\"line\">        &#125;</div><div class=\"line\">        mx = max(t, mx);</div><div class=\"line\">        if (o != -1) i = o;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 10:10</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"Project Euler 7 10001st prime（筛素数）","url":"http://yoursite.com/2014/10/27/Project Euler 7/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=7\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=7</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求第10001个素数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>采用线性筛素数，复杂度为O(N)<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define maxn 1000000</div><div class=\"line\">int ans[maxn], valid[maxn], tot = 0;</div><div class=\"line\">void getPrime(int n, int &amp;tot, int ans[]) &#123;</div><div class=\"line\">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class=\"line\">        if (!valid[i]) ans[tot++] = i;</div><div class=\"line\">        for (int j = 0; j &lt; tot &amp;&amp; i * ans[j] &lt;= n; j++) &#123;</div><div class=\"line\">            valid[i * ans[j]] = 1;</div><div class=\"line\">            if (i % ans[j] == 0) break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    getPrime(999999, tot, ans);</div><div class=\"line\">    cout&lt;&lt;ans[10000]&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 09:36</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["线性筛素数","数论"]},{"title":"Project Euler 6 Sum square difference（公式）","url":"http://yoursite.com/2014/10/27/Project Euler 6/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=6\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=6</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>$f(x) = 1^2 + 2^2 + \\cdots + n^2$<br>$g(x) = (1 + 2 + \\cdots + n)^2$<br>求$g(x)-f(x)$</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>$f(x) = \\frac{n(n+1)(2n+1)}{6}$<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int n = 100;</div><div class=\"line\">    ll sum = (2 * n + 1) * n * (n + 1) / 6;</div><div class=\"line\">    ll sq = (1 + n) * n / 2;</div><div class=\"line\">    sq *= sq;</div><div class=\"line\">    cout&lt;&lt;sq - sum&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 06:45</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["公式"]},{"title":"Project Euler 5 Smallest multiple（gcd）","url":"http://yoursite.com/2014/10/27/Project Euler 5/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=5\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=5</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求一个最小的整数，使得该整数能够整除[1,20]的所有数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>lcm(a, b) = a * b / gcd(a, b)<br>要注意答案会超int<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll ans = 1;</div><div class=\"line\">    for (ll i = 1; i &lt;= 20; i++) &#123;</div><div class=\"line\">        ans = ans * i / __gcd(ans, i);</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;ans&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 06:20</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"Project Euler 4 Largest palindrome product（枚举）","url":"http://yoursite.com/2014/10/27/Project Euler 4/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=4\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=4</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求最大的回文数，该数字由两个三位数相乘得到。</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>枚举两个三位数即可<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">bool check(int x) &#123;</div><div class=\"line\">    string s = &quot;&quot;;</div><div class=\"line\">    while(x) &#123;</div><div class=\"line\">        s += x % 10 + &apos;0&apos;;</div><div class=\"line\">        x /= 10;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for (int i = 0, j = s.length() - 1; i &lt; j; i++, j--) if (s[i] != s[j]) return false;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int mx = 0;</div><div class=\"line\">    for (int i = 999; i &gt;= 100; i--) &#123;</div><div class=\"line\">        for (int j = i; j &gt;= 100; j--) &#123;</div><div class=\"line\">            int t = i * j;</div><div class=\"line\">            if (t &lt;= mx) break;</div><div class=\"line\">            if (check(t)) mx = t;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;mx&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 03:41</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"Project Euler 3 Largest prime factor（pollard_rho大数分解）","url":"http://yoursite.com/2014/10/27/Project Euler 3/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=3\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=3</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个数（600851475143），求其最大的质因数</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>这个当然可以直接暴力搞定，不过用pollard_rho大数分解效率要高<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">    给定一个数（600851475143），求其最大的质因数</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cstring&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">#include&lt;algorithm&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">const int S = 20; //随机算法判定次数，S越大，判错概率越小</div><div class=\"line\"></div><div class=\"line\">//计算 (a*b)%c.   a,b都是long long的数，直接相乘可能溢出的</div><div class=\"line\">//  a,b,c &lt;2^63</div><div class=\"line\">ll mult_mod(ll a, ll b, ll c) &#123;</div><div class=\"line\">    a %= c;</div><div class=\"line\">    b %= c;</div><div class=\"line\">    ll ret = 0;</div><div class=\"line\">    while(b) &#123;</div><div class=\"line\">        if(b &amp; 1) &#123;</div><div class=\"line\">            ret += a;</div><div class=\"line\">            ret %= c;</div><div class=\"line\">        &#125;</div><div class=\"line\">        a &lt;&lt;= 1;</div><div class=\"line\">        if(a &gt;= c)a %= c;</div><div class=\"line\">        b &gt;&gt;= 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//计算  x^n %c</div><div class=\"line\">ll pow_mod(ll x, ll n, ll mod) &#123; //x^n%c</div><div class=\"line\">    if(n == 1)return x % mod;</div><div class=\"line\">    x %= mod;</div><div class=\"line\">    ll tmp = x;</div><div class=\"line\">    ll ret = 1;</div><div class=\"line\">    while(n) &#123;</div><div class=\"line\">        if(n &amp; 1) ret = mult_mod(ret, tmp, mod);</div><div class=\"line\">        tmp = mult_mod(tmp, tmp, mod);</div><div class=\"line\">        n &gt;&gt;= 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return ret;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//以a为基,n-1=x*2^t      a^(n-1)=1(mod n)  验证n是不是合数</div><div class=\"line\">//一定是合数返回true,不一定返回false</div><div class=\"line\">bool check(ll a, ll n, ll x, ll t) &#123;</div><div class=\"line\">    ll ret = pow_mod(a, x, n);</div><div class=\"line\">    ll last = ret;</div><div class=\"line\">    for(int i = 1; i &lt;= t; i++) &#123;</div><div class=\"line\">        ret = mult_mod(ret, ret, n);</div><div class=\"line\">        if(ret == 1 &amp;&amp; last != 1 &amp;&amp; last != n - 1) return true; //合数</div><div class=\"line\">        last = ret;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if(ret != 1) return true;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// Miller_Rabin()算法素数判定</div><div class=\"line\">//是素数返回true.(可能是伪素数，但概率极小)</div><div class=\"line\">//合数返回false;</div><div class=\"line\">bool Miller_Rabbin(ll n) &#123;</div><div class=\"line\">    if(n &lt; 2)return false;</div><div class=\"line\">    if(n == 2)return true;</div><div class=\"line\">    if((n &amp; 1) == 0) return false; //偶数</div><div class=\"line\">    ll x = n - 1;</div><div class=\"line\">    ll t = 0;</div><div class=\"line\">    while((x &amp; 1) == 0) &#123;</div><div class=\"line\">        x &gt;&gt;= 1;</div><div class=\"line\">        t++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    for(int i = 0; i &lt; S; i++) &#123;</div><div class=\"line\">        ll a = rand() % (n - 1) + 1; //rand()需要stdlib.h头文件</div><div class=\"line\">        if(check(a, n, x, t))</div><div class=\"line\">            return false;//合数</div><div class=\"line\">    &#125;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ll factor[100];//质因数分解结果（刚返回时是无序的）</div><div class=\"line\">int tot;//质因数的个数。数组小标从0开始</div><div class=\"line\"></div><div class=\"line\">ll gcd(ll a, ll b) &#123;</div><div class=\"line\">    if(a == 0) return 1;</div><div class=\"line\">    if(a &lt; 0) return gcd(-a, b);</div><div class=\"line\">    while(b) &#123;</div><div class=\"line\">        ll t = a % b;</div><div class=\"line\">        a = b;</div><div class=\"line\">        b = t;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return a;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ll Pollard_rho(ll x, ll c) &#123;</div><div class=\"line\">    ll i = 1, k = 2;</div><div class=\"line\">    ll x0 = rand() % x;</div><div class=\"line\">    ll y = x0;</div><div class=\"line\">    while(1) &#123;</div><div class=\"line\">        i++;</div><div class=\"line\">        x0 = (mult_mod(x0, x0, x) + c) % x;</div><div class=\"line\">        ll d = gcd(y - x0, x);</div><div class=\"line\">        if(d != 1 &amp;&amp; d != x) return d;</div><div class=\"line\">        if(y == x0) return x;</div><div class=\"line\">        if(i == k) &#123;</div><div class=\"line\">            y = x0;</div><div class=\"line\">            k += k;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">//对n进行素因子分解</div><div class=\"line\">void findfac(ll n) &#123;</div><div class=\"line\">    if(Miller_Rabbin(n)) &#123; //素数</div><div class=\"line\">        factor[tot++] = n;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ll p = n;</div><div class=\"line\">    while(p &gt;= n) p = Pollard_rho(p, rand() % (n - 1) + 1);</div><div class=\"line\">    findfac(p);</div><div class=\"line\">    findfac(n / p);</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    ll n = 600851475143LL;</div><div class=\"line\">    findfac(n);</div><div class=\"line\">    cout&lt;&lt;factor[tot - 1]&lt;&lt;endl;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>Completed on Mon, 27 Oct 2014, 02:36</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":["数论","pollard_rho大数分解"]},{"title":"Project Euler 2 Even Fibonacci numbers（递推）","url":"http://yoursite.com/2014/10/27/Project Euler 2/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://projecteuler.net/problem=2\" target=\"_blank\" rel=\"external\">https://projecteuler.net/problem=2</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>求不超过4000000的菲波那切偶数和</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>递推</p>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">    所有不超过4000000的菲波那切偶数和</div><div class=\"line\">*/</div><div class=\"line\">#include&lt;iostream&gt;</div><div class=\"line\">#include&lt;cstdio&gt;</div><div class=\"line\">#include&lt;cmath&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">int f[40];</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    f[0] = 1, f[1] = 2;</div><div class=\"line\">    int sum = 2;</div><div class=\"line\">    for (int i = 2; i &lt; 40; i++) &#123;</div><div class=\"line\">        f[i] = f[i - 1] + f[i - 2];</div><div class=\"line\">        if (f[i] &gt; 4000000) break;</div><div class=\"line\">        if (f[i] % 2 == 0) sum += f[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    cout&lt;&lt;sum&lt;&lt;endl;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-10-27 AC</li>\n<li>开始做Project Euler</li>\n</ul>\n","categories":["ACM","Project Euler"],"tags":[]},{"title":"LA 3938 动态最大连续和（线段树）","url":"http://yoursite.com/2014/10/26/LA 3938 动态最大连续和 线段树/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=22&amp;problem=1939&amp;mosmsg=Submission+received+with+ID+1584539\" target=\"_blank\" rel=\"external\">https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=22&amp;problem=1939&amp;mosmsg=Submission+received+with+ID+1584539</a></p>\n<h1 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h1><p>给定一个序列，长度为n。有m个操作，每次操作给定(a,b)。求区间[a,b]之间的一段区间[l,r]，使得a ≤ l ≤ r ≤ b。且区间[l,r]为最大子段和。当有多组答案时，使l最小，l相同时，r最小。<br>数据范围：1 ≤ n,m ≤ 500000，序列元素的绝对值 ≤ 1e9</p>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>采用线段树来维护动态最大连续和。每个区间维护最大子段和sub[]，最大前缀和pre[]，最大后缀和[]。在建立线段树的时候，进行维护。当左右两个区间l，r进行合并时，维护的方式是：</p>\n<ul>\n<li>prefix  最大前缀和为max(pre[l], sum[l] + pre[r])</li>\n<li>suffix  最大后缀和为max(suf[r], sum[r] + suf[l])</li>\n<li>sub 最大子段和为max(max(sub[l], suf[l] + pre[r]), sub[r])<br>在维护的过程中，还要记录相应的坐标信息<br>查询相似</li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;iostream&gt;</div><div class=\"line\">#include &lt;cstdio&gt;</div><div class=\"line\">#include &lt;algorithm&gt;</div><div class=\"line\">#include &lt;cstring&gt;</div><div class=\"line\">#include &lt;cmath&gt;</div><div class=\"line\">using namespace std;</div><div class=\"line\">#define ll long long</div><div class=\"line\">#define lson l, m, rt &lt;&lt; 1</div><div class=\"line\">#define rson m + 1, r, rt &lt;&lt; 1 | 1</div><div class=\"line\">const int maxn = 500100;</div><div class=\"line\">ll sub[maxn &lt;&lt; 2], pre[maxn &lt;&lt; 2], suf[maxn &lt;&lt; 2]; //记录每段的最大子段和，最大前缀和，最大后缀和</div><div class=\"line\">ll sum[maxn &lt;&lt; 2]; //记录每段的和</div><div class=\"line\">ll st[maxn &lt;&lt; 2], ed[maxn &lt;&lt; 2];  //记录最大子段和的起点、终点</div><div class=\"line\">ll pst[maxn &lt;&lt; 2], ped[maxn &lt;&lt; 2]; //记录最大前缀和的起点、终点</div><div class=\"line\">ll sst[maxn &lt;&lt; 2], sed[maxn &lt;&lt; 2]; //记录最大后缀和的起点、终点</div><div class=\"line\">int n, m;</div><div class=\"line\">void pushup(int rt) &#123;</div><div class=\"line\">    int l = rt &lt;&lt; 1, r = rt &lt;&lt; 1 | 1;</div><div class=\"line\">    sum[rt] = sum[l] + sum[r];</div><div class=\"line\">    //prefix</div><div class=\"line\">    ll maxt = pre[l];</div><div class=\"line\">    ll ss = pst[l], ee = ped[l];</div><div class=\"line\">    if (pre[l] &lt; sum[l] + pre[r])</div><div class=\"line\">        maxt = sum[l] + pre[r], ss = pst[l], ee = ped[r];</div><div class=\"line\">    pre[rt] = maxt, pst[rt] = ss, ped[rt] = ee;</div><div class=\"line\">    //suffix</div><div class=\"line\">    maxt = suf[r], ss = sst[r], ee = sed[r];</div><div class=\"line\">    if (suf[r] &lt;= sum[r] + suf[l])</div><div class=\"line\">        maxt = sum[r] + suf[l], ss = sst[l], ee = sed[r];</div><div class=\"line\">    suf[rt] = maxt, sst[rt] = ss, sed[rt] = ee;</div><div class=\"line\">    //sub</div><div class=\"line\">    maxt = sub[l], ss = st[l], ee = ed[l];</div><div class=\"line\">    if (maxt &lt; suf[l] + pre[r]) maxt = suf[l] + pre[r], ss = sst[l], ee = ped[r];</div><div class=\"line\">    if (maxt &lt; sub[r]) maxt = sub[r], ss = st[r], ee = ed[r];</div><div class=\"line\">    sub[rt] = maxt, st[rt] = ss, ed[rt] = ee;</div><div class=\"line\">&#125;</div><div class=\"line\">void build(int l, int r, int rt) &#123;</div><div class=\"line\">    if (l == r) &#123;</div><div class=\"line\">        scanf(&quot;%lld&quot;, sum + rt);</div><div class=\"line\">        sub[rt] = pre[rt] = suf[rt] = sum[rt];</div><div class=\"line\">        st[rt] = ed[rt] = pst[rt] = ped[rt] = sst[rt] = sed[rt] = l;</div><div class=\"line\">        return ;</div><div class=\"line\">    &#125;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1;</div><div class=\"line\">    build(lson);</div><div class=\"line\">    build(rson);</div><div class=\"line\">    pushup(rt);</div><div class=\"line\">&#125;</div><div class=\"line\">struct node &#123;</div><div class=\"line\">    ll sum, l, m, r; //sum表示该段和，l，m，r分别表示最大前缀和、最大子段和、最大后缀和</div><div class=\"line\">    int ls, le, ms, me, rs, re; //分别表示l，m，r的起点、终点</div><div class=\"line\">&#125;;</div><div class=\"line\">node query(int L, int R, int l, int r, int rt) &#123;</div><div class=\"line\">    if (L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class=\"line\">        node tp;</div><div class=\"line\">        tp.l = pre[rt], tp.m = sub[rt], tp.r = suf[rt];</div><div class=\"line\">        tp.ls = pst[rt], tp.le = ped[rt];</div><div class=\"line\">        tp.ms = st[rt], tp.me = ed[rt];</div><div class=\"line\">        tp.rs = sst[rt], tp.re = sed[rt];</div><div class=\"line\">        tp.sum = sum[rt];</div><div class=\"line\">        return tp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    node tp, tp1, tp2;</div><div class=\"line\">    int m = (l + r) &gt;&gt; 1, sl = 0, sr = 0;</div><div class=\"line\">    if (L &lt;= m) &#123;</div><div class=\"line\">        tp1 = query(L, R, lson);</div><div class=\"line\">        sl = 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (R &gt; m) &#123;</div><div class=\"line\">        tp2 = query(L, R, rson);</div><div class=\"line\">        sr = 1;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (sl &amp;&amp; !sr) return tp1;</div><div class=\"line\">    if (!sl &amp;&amp; sr) return tp2;</div><div class=\"line\">    //prefix</div><div class=\"line\">    tp.l = tp1.l, tp.ls = tp1.ls, tp.le = tp1.le;</div><div class=\"line\">    if (tp.l &lt; tp1.sum + tp2.l)</div><div class=\"line\">        tp.l = tp1.sum + tp2.l, tp.le = tp2.le;</div><div class=\"line\">    //suffix</div><div class=\"line\">    tp.r = tp2.r, tp.rs = tp2.rs, tp.re = tp2.re;</div><div class=\"line\">    if (tp.r &lt;= tp2.sum + tp1.r)</div><div class=\"line\">        tp.r = tp2.sum + tp1.r, tp.rs = tp1.rs;</div><div class=\"line\">    //sub</div><div class=\"line\">    tp.m = tp1.m, tp.ms = tp1.ms, tp.me = tp1.me;</div><div class=\"line\">    if (tp.m &lt; tp1.r + tp2.l)</div><div class=\"line\">        tp.m = tp1.r + tp2.l, tp.ms = tp1.rs, tp.me = tp2.le;</div><div class=\"line\">    if (tp.m &lt; tp2.m)</div><div class=\"line\">        tp.m = tp2.m, tp.ms = tp2.ms, tp.me = tp2.me;</div><div class=\"line\">    tp.sum = tp1.sum + tp2.sum;</div><div class=\"line\">    return tp;</div><div class=\"line\">&#125;</div><div class=\"line\">int main () &#123;</div><div class=\"line\">    int cas = 1;</div><div class=\"line\">    while(~scanf(&quot;%d%d&quot;, &amp;n, &amp;m)) &#123;</div><div class=\"line\">        build(1, n, 1);</div><div class=\"line\">        printf(&quot;Case %d:\\n&quot;, cas++);</div><div class=\"line\">        int a, b;</div><div class=\"line\">        while(m--) &#123;</div><div class=\"line\">            scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</div><div class=\"line\">            node ans = query(a, b, 1, n, 1);</div><div class=\"line\">            printf(&quot;%d %d\\n&quot;, ans.ms, ans.me);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>2014-10-27 已AC </li>\n<li>3938    “Ray, Pass me the dishes!”    Accepted    C++11    0.219    2014-10-26 16:33:27</li>\n</ul>\n","categories":["ACM","算法竞赛训练指南"],"tags":["数据结构","线段树"]},{"title":"Codeforces Round 275","url":"http://yoursite.com/2014/10/25/cf275/","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>源地址：<a href=\"http://codeforces.com/contest/482\" target=\"_blank\" rel=\"external\">http://codeforces.com/contest/482</a></p>\n<h1 id=\"理解\"><a href=\"#理解\" class=\"headerlink\" title=\"理解\"></a>理解</h1><a id=\"more\"></a>\n<h1 id=\"新技能get\"><a href=\"#新技能get\" class=\"headerlink\" title=\"新技能get\"></a>新技能get</h1><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h1 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h1><ul>\n<li>挖个坑。</li>\n</ul>\n","categories":["ACM","Codeforces"],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"Books","url":"http://yoursite.com/books/index.html","content":"<p>记录一些想看和看过的书籍、课程信息。</p>\n<font color=\"green\">种草</font><br><font color=\"red\">未完成</font><br><font color=\"gray\">已完成</font>\n\n<h2 id=\"数学类\"><a href=\"#数学类\" class=\"headerlink\" title=\"数学类\"></a>数学类</h2><p><a href=\"https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2006/video-lectures/\" target=\"_blank\" rel=\"external\"><font color=\"red\">MIT 18.01 Single Variable Calculus</font></a>&emsp;&emsp;MIT课程，单变量微积分<br><a href=\"https://ocw.mit.edu/courses/mathematics/18-02-multivariable-calculus-fall-2007/video-lectures/\" target=\"_blank\" rel=\"external\"><font color=\"green\">MIT 18.02 Multivariable Calculus</font></a>&emsp;&emsp;MIT课程，多变量微积分<br><a href=\"https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/\" target=\"_blank\" rel=\"external\"><font color=\"red\">MIT 18.06 Linear Algebra</font></a>&emsp;&emsp;MIT课程，线性代数，老师讲得非常好<br><a href=\"https://www.amazon.cn/%E9%99%88%E5%B8%8C%E5%AD%BA%E6%96%87%E9%9B%86%E2%80%A2%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1-%E9%99%88%E5%B8%8C%E5%AD%BA/dp/B00264GG56/ref=sr_1_5?ie=UTF8&amp;qid=1506236837&amp;sr=8-5&amp;keywords=%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1\" target=\"_blank\" rel=\"external\"><font color=\"red\">概率论与数理统计</font></a>&emsp;&emsp;出之大师之手，深入浅出</p>\n<h2 id=\"计算机基础\"><a href=\"#计算机基础\" class=\"headerlink\" title=\"计算机基础\"></a>计算机基础</h2><p><a href=\"http://www.cs.cmu.edu/afs/cs/academic/class/15213-s17/www/schedule.html\" target=\"_blank\" rel=\"external\"><font color=\"red\">CSAPP 深入理解计算机系统</font></a>&emsp;&emsp;CMU最火的一门课程，强推！</p>\n<h2 id=\"编程语言\"><a href=\"#编程语言\" class=\"headerlink\" title=\"编程语言\"></a>编程语言</h2><p><a href=\"https://www.amazon.cn/C%E9%99%B7%E9%98%B1%E4%B8%8E%E7%BC%BA%E9%99%B7-%E5%87%AF%E5%B0%BC%E6%A0%BC/dp/B0012UMPBY/\" target=\"_blank\" rel=\"external\"><font color=\"gray\">C陷阱与缺陷</font></a>&emsp;&emsp;深入C语言一些极易犯错的细节<br><a href=\"\"><font color=\"red\">C++ Primer</font></a>&emsp;&emsp;学习C++必备手册</p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><p><a href=\"\"><font color=\"green\">算法导论</font></a>&emsp;&emsp;无数次下定决心读，都弃疗了。<br><a href=\"https://www.coursera.org/learn/algorithms-part1/home/welcome\" target=\"_blank\" rel=\"external\"><font color=\"gray\">Princeton Algorithms Part I</font></a>&emsp;&emsp;深入浅出，老爷子讲得真的好，课程作业也不错<br><a href=\"\"><font color=\"green\">Princeton Algorithms Part II</font></a>&emsp;&emsp;Coursera上还没有更新<br><a href=\"https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00KVZ43PW/ref=sr_1_1?ie=UTF8&amp;qid=1506237322&amp;sr=8-1&amp;keywords=%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8\" target=\"_blank\" rel=\"external\"><font color=\"red\">算法竞赛入门经典</font></a>&emsp;&emsp;当年打ACM的时候用的书<br><a href=\"https://www.amazon.cn/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8-%E8%AE%AD%E7%BB%83%E6%8C%87%E5%8D%97-%E5%88%98%E6%B1%9D%E4%BD%B3/dp/B009SJJGOU/ref=sr_1_2?ie=UTF8&amp;qid=1506237322&amp;sr=8-2&amp;keywords=%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8\" target=\"_blank\" rel=\"external\"><font color=\"red\">算法竞赛入门经典:训练指南</font></a>&emsp;&emsp;上一本的后续</p>\n<h2 id=\"机器学习-amp-深度学习\"><a href=\"#机器学习-amp-深度学习\" class=\"headerlink\" title=\"机器学习&amp;深度学习\"></a>机器学习&amp;深度学习</h2><p><a href=\"https://www.amazon.cn/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-%E6%9D%8E%E8%88%AA/dp/B007TSFMTA/ref=sr_1_1?ie=UTF8&amp;qid=1506237627&amp;sr=8-1&amp;keywords=%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\" target=\"_blank\" rel=\"external\"><font color=\"red\">统计学习方法</font></a>&emsp;&emsp;机器学习入门经典<br><a href=\"https://www.amazon.cn/gp/product/B01ARKEV1G/ref=pd_sim_14_1?ie=UTF8&amp;psc=1&amp;refRID=A6J29BHNSH30X562TDHK\" target=\"_blank\" rel=\"external\"><font color=\"green\">机器学习</font></a>&emsp;&emsp;种草<br><a href=\"https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00P6OJ09C/ref=sr_1_1?ie=UTF8&amp;qid=1506237803&amp;sr=8-1&amp;keywords=%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E\" target=\"_blank\" rel=\"external\"><font color=\"red\">数学之美</font></a>&emsp;&emsp;机器学习科普类书籍</p>\n<h2 id=\"杂\"><a href=\"#杂\" class=\"headerlink\" title=\"杂\"></a>杂</h2>","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"Hello World","url":"http://yoursite.com/hello-world 2.html","content":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">trobuleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"Hello World","url":"http://yoursite.com/hello-world.html","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]}]